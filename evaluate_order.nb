(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    317297,       6598]
NotebookOptionsPosition[    313850,       6487]
NotebookOutlinePosition[    314296,       6505]
CellTagsIndexPosition[    314253,       6502]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", " ", 
                    RowBox[{"evaluate_order", ".", 
                    RowBox[{
                    "nb", " ", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", 
      RowBox[{"evaluate_order", ".", "nb"}]}], " ", "calculates", " ", "for", 
     " ", "a", " ", "data", " ", "set", " ", "with", " ", "xyz", " ", 
     "coordinates"}], "        ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", "the"}], " ", "match", " ", "of", " ", "a", 
     " ", "given", " ", "coordination"}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "distance", " ", "norm", 
      " ", "against"}], "     ", "+"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", "rotation"}], " ", "variants", " ", "in", 
     " ", "a", " ", "database", " ", "file"}], 
    "                                 ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", 
      RowBox[{"evaluate_order", ".", "nb"}]}], " ", "creates", " ", "a", " ", 
     "three", " ", "dimensional", " ", "temperature", " ", "map", " ", "for", 
     " ", "the"}], " ", "+"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", "best"}], " ", "match", " ", "of", " ", 
     "each", " ", "\"\<atom\>\"", " ", "in", " ", "then", " ", "xyz", " ", 
     "data", " ", "file", " ", "with", " ", "a", " ", "database", " ", 
     "item"}], "   ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", "The"}], " ", "\"\<lower\>\"", " ", "the", 
    " ", "temperature", " ", "in", " ", "the", " ", "map", " ", "the", " ", 
    "better", " ", "the", " ", 
    RowBox[{"match", ".", "           ", "+"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", 
     RowBox[{"INPUT", ":", "  ", 
      RowBox[{"Database", " ", "file"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"created", " ", "with", " ", "create_db"}], 
     "                        ", "+"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "xyz"}], " ", "coodinates", " ", 
     "of", " ", "the", " ", "cluster"}], "                                ", 
    "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"OUTPUT", ":", " ", 
     RowBox[{
      RowBox[{
      "A", " ", "text", " ", "file", " ", "that", " ", "contains", " ", "the",
        " ", "distance", " ", "norm", " ", "between", " ", "the"}], "      ", 
      "+"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "database"}], " ", "coordination", 
     " ", "and", " ", "the", " ", "coordination", " ", "of", " ", "each", 
     " ", "\"\<atom\>\""}], "    ", "+"}], " ", "*)"}], "         ", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "                   ", "in"}], " ", "the", " ", "xyz", " ", 
    "data", " ", 
    RowBox[{"file", ".", "                                        ", "+"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "A"}], " ", "graphics", " ", "file", 
     " ", "with", " ", "a", " ", "temperature", " ", "map", " ", "that", " ", 
     "shows", " ", "the"}], "         ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "distance"}], " ", "order", " ", 
     "parameters", " ", "in", " ", "a", " ", "three"}], "-", 
    RowBox[{"dimensional", " ", "list", " ", 
     RowBox[{"plot", ".", "   ", "+"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"USAGE", ":", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "1", ")"}], " ", "Delete", " ", "All", " ", "Output", " ", 
       RowBox[{"(", 
        RowBox[{"from", " ", 
         RowBox[{"the", " ", "'"}], 
         RowBox[{"Cell", "'"}], " ", "menu"}], ")"}]}], "                  ", 
      "+"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", 
      RowBox[{"(", "2", ")"}]}], " ", "Fill", " ", "the", " ", "section", " ", 
     RowBox[{"between", " ", "'"}], "BEGIN", " ", "USER", " ", 
     RowBox[{"INPUT", "'"}], " ", "and"}], "           ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                      ", "'"}], "END", " ", "USER", " ", 
     RowBox[{"INPUT", "'"}]}], "                                           ", 
    "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", 
      RowBox[{"(", "3", ")"}]}], " ", "Evaluate", " ", "Notebook", " ", 
     RowBox[{"(", 
      RowBox[{"from", " ", 
       RowBox[{"the", "'"}], 
       RowBox[{"Evaluate", "'"}], " ", "menu"}], ")"}]}], "              ", 
    "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"DEPENDENCIES", ":", " ", 
     RowBox[{
     "None", "                                                   ", "+"}]}]}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"NOTES", ":", "  ", 
     RowBox[{
      RowBox[{
      "The", " ", "calculation", " ", "may", " ", "take", " ", "some", " ", 
       "time", " ", "in", " ", "the", " ", "order", " ", "of", " ", 
       "minutes"}], "  ", "+"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "in"}], " ", "the", " ", "case", " ",
      "of", " ", "a", " ", "large", " ", "number", " ", "of", " ", "atoms", 
     " ", 
     RowBox[{"(", 
      RowBox[{"few", " ", "hundred"}], ")"}], " ", "and"}], "      ", "+"}], 
   " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "                   ", "and"}], " ", "a", " ", "large", " ", 
    "number", " ", "of", " ", "data", " ", "base", " ", "ortientations", " ", 
    
    RowBox[{"(", 
     RowBox[{"several", "        ", "+"}], " "}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{" ", 
       RowBox[{"+", "                   ", "hundred"}], ")"}], ".", " ", 
      "It"}], " ", "is", " ", "recommended", " ", "to", " ", "use", " ", "a", 
     " ", "coarse", " ", "data", " ", "base"}], "         ", "+"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "                   ", "with"}], " ", "only", " ", "a", " ", 
    "few", " ", "hundred", " ", "database", " ", "items", " ", "for", " ", 
    "test", " ", 
    RowBox[{"runs", ".", "         ", "+"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", 
     RowBox[{"AUTHOR", ":", "  ", 
      RowBox[{"L", ".", " ", "Houben"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"Weizmann", " ", "Institute", " ", "of", " ", "Science"}], 
     "                    ", "+"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                    ", 
      RowBox[{"lothar", ".", "houben"}]}], 
     RowBox[{"(", "at", ")"}], 
     RowBox[{"weizmann", ".", "ac", ".", "il"}]}], 
    "                             ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"COPYRIGHT", ":", " ", 
     RowBox[{
      RowBox[{
      "This", " ", "software", " ", "is", " ", "licensed", " ", "under", " ", 
       "the", " ", "GNU", " ", "GENERAL", " ", "PUBLIC"}], "    ", "+"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                    ", "LICENSE"}], " ", "Version", " ", 
     "3"}], "                                         ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "BEGIN"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
    "USER", " ", 
    RowBox[{
     RowBox[{"INPUT", " ", "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   " ", "*)"}], 
  "                                                                         ",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "baseDir", " ", "is", " ", "the", " ", "base", " ", "folder", " ", "for", 
    " ", "program", " ", "input", " ", "and", " ", 
    RowBox[{"output", "."}]}], "                            ", "*)"}], 
  "                        ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "dbDir", " ", "is", " ", "a", " ", "subfolder", " ", "that", " ", "holds", 
    " ", "the", " ", "database", " ", 
    RowBox[{"file", "."}]}], "                                   ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "dataDir", " ", "is", " ", "a", " ", "subfolder", " ", "that", " ", 
    "holds", " ", "the", " ", "data", " ", 
    RowBox[{"file", "."}]}], "                                   ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "outDir", " ", "is", " ", "a", " ", "subfolder", " ", "for", " ", "the", 
    " ", "program", " ", "output", " ", 
    RowBox[{"files", "."}]}], "                                  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Please", " ", "make", " ", "sure", " ", "that", " ", "the", " ", 
    "folders", " ", 
    RowBox[{"exist", "."}]}], "                                           ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"baseDir", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"$HomeDirectory", ",", "\"\</Desktop/diOPA\>\""}], "]"}]}], 
    ";"}], "   ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dbDir", " ", "=", "\"\<db\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataDir", " ", "=", "\"\<data\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"outDir", "=", "\"\<out\>\""}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "dbfileName", " ", "is", " ", "name", " ", "of", " ", "the", " ", 
     "database", " ", "file"}], "                  ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dbfileName", "=", "\"\<rotation-database_Fcc_30_2.db\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "datafileName", " ", "is", " ", "name", " ", "of", " ", "the", " ", 
     "data", " ", "file", " ", "with", " ", "the", " ", "cluster", " ", "xyz",
      " ", "coordinates"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datafileName", "=", "\"\<Au-crystal.cel\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"+", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", " ", "END"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
     "USER", " ", 
     RowBox[{
      RowBox[{"INPUT", " ", "--"}], "--"}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    " ", "*)"}], 
   "                                                                         \
", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.729843102307577*^9, 3.729843201214278*^9}, {
   3.73102984454348*^9, 3.731029845374052*^9}, {3.748343380191635*^9, 
   3.748343748830964*^9}, {3.748344125771619*^9, 3.74834414875176*^9}, {
   3.7483576461329193`*^9, 3.748357697229863*^9}, 3.74835780752212*^9, {
   3.748357900010888*^9, 3.748357957369397*^9}, {3.748359453682164*^9, 
   3.748359456910737*^9}, {3.748362051122097*^9, 3.748362051596531*^9}, {
   3.748364389220242*^9, 3.748364663627841*^9}, {3.7483658782125673`*^9, 
   3.7483658810033407`*^9}, {3.748366171053372*^9, 3.7483662096311693`*^9}, {
   3.748367483333907*^9, 3.748367587008593*^9}, {3.748410700944044*^9, 
   3.748410728809409*^9}, {3.748413964604947*^9, 3.7484139682941933`*^9}, {
   3.7484220564492407`*^9, 3.748422177938465*^9}, 3.74842221082085*^9, {
   3.748422675294179*^9, 3.7484227128019543`*^9}, {3.748424483050785*^9, 
   3.748424485416847*^9}, {3.748424551536046*^9, 3.748424553661401*^9}, {
   3.748425669097258*^9, 3.7484256734423847`*^9}},
 ExpressionUUID -> "15a9828a-b17f-4478-b765-538f37e954f5"],

Cell[BoxData["\<\"out\"\>"], "Output",
 CellChangeTimes->{3.7484227955338593`*^9, 3.7484245570722837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{"define", " ", "input", " ", "files"}], 
   "                                                   ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DBfile", "=", " ", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "baseDir", ",", "\"\</\>\"", ",", "dbDir", ",", "\"\</\>\"", ",", 
      "dbfileName"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"celfile", "=", " ", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "baseDir", ",", "\"\</\>\"", ",", "dataDir", ",", "\"\</\>\"", ",", 
      "datafileName"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6592649837140636`*^9, 3.6592649984173193`*^9}, {
   3.659346349962791*^9, 3.659346351098336*^9}, {3.659347171651671*^9, 
   3.659347172897944*^9}, {3.659369135400709*^9, 3.659369138931055*^9}, {
   3.659371258580312*^9, 3.659371276993561*^9}, {3.659372638183786*^9, 
   3.6593726414521637`*^9}, {3.65945104725323*^9, 3.65945107375618*^9}, {
   3.6595509004674997`*^9, 3.65955091218955*^9}, {3.659551026865718*^9, 
   3.6595510335024548`*^9}, {3.6595519607286053`*^9, 3.659551963276333*^9}, {
   3.65955343237288*^9, 3.659553526961838*^9}, {3.659587317844521*^9, 
   3.659587318466962*^9}, {3.6595932727450657`*^9, 3.659593274977496*^9}, {
   3.659594641464024*^9, 3.6595946926255913`*^9}, {3.659594755300844*^9, 
   3.659594788355591*^9}, {3.6595948219038277`*^9, 3.659594824165539*^9}, {
   3.6597632839169416`*^9, 3.659763285481204*^9}, {3.659767650507224*^9, 
   3.659767652505528*^9}, {3.659783095164228*^9, 3.659783097067239*^9}, {
   3.6597948382742157`*^9, 3.659794840204811*^9}, {3.65979751155853*^9, 
   3.659797513370433*^9}, {3.660140187425812*^9, 3.6601401998501368`*^9}, {
   3.660140230583119*^9, 3.660140244967271*^9}, {3.661158217448214*^9, 
   3.661158219414548*^9}, {3.679202142643202*^9, 3.6792022010284443`*^9}, {
   3.679202315744252*^9, 3.679202328512505*^9}, {3.679202390402351*^9, 
   3.679202417540432*^9}, {3.698566441178968*^9, 3.698566453558082*^9}, {
   3.710397315827077*^9, 3.7103973306723223`*^9}, {3.748343808805471*^9, 
   3.7483438552886753`*^9}, {3.7483439773128967`*^9, 3.748343987260023*^9}, {
   3.7483577340252237`*^9, 3.748357798297633*^9}, {3.7483594676557198`*^9, 
   3.748359471070306*^9}, {3.748362118487877*^9, 3.7483621443836613`*^9}, 
   3.74836470238052*^9},
 ExpressionUUID -> "0594e155-8327-4e76-9767-2e30cd7219f5"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/db/rotation-database_Fcc_30_2.\
db\"\>"], "Output",
 CellChangeTimes->{3.7484227957961273`*^9, 3.748424557301071*^9}],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel\"\
\>"], "Output",
 CellChangeTimes->{3.7484227957961273`*^9, 3.748424557302198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "  ", 
   RowBox[{"define", " ", "output", " ", "files"}], 
   "                                                   ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"graphfileprefix", "=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "baseDir", ",", "\"\</\>\"", ",", "outDir", ",", "\"\</\>\"", ",", 
      RowBox[{"FileBaseName", "[", "datafileName", "]"}], ",", 
      "\"\<_OrderParameter\>\""}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"logfilename", "=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
     "baseDir", ",", "\"\</\>\"", ",", "outDir", ",", "\"\</\>\"", ",", 
      RowBox[{"FileBaseName", "[", "datafileName", "]"}], ",", 
      "\"\<_OrderParameter.log\>\""}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.726472927502822*^9, 3.7264729536083527`*^9}, {
   3.726641772425508*^9, 3.726641773079224*^9}, {3.729842829451885*^9, 
   3.729842830465287*^9}, {3.7483620775514708`*^9, 3.7483621123053017`*^9}, 
   3.748362148157941*^9, 3.7483647239226933`*^9},
 ExpressionUUID -> "6e049091-55cd-4d11-974f-04f7cd5af02e"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
OrderParameter\"\>"], "Output",
 CellChangeTimes->{3.7484227958955717`*^9, 3.748424557368225*^9}],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
OrderParameter.log\"\>"], "Output",
 CellChangeTimes->{3.7484227958955717`*^9, 3.748424557369318*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", "plot", " ", "parameters"}], 
   "                                               ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"axespos", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"viewvc", "=", 
     RowBox[{"{", 
      RowBox[{"50", ",", 
       RowBox[{"-", "300"}], ",", "100"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsz", "=", 
     RowBox[{"{", 
      RowBox[{"512", ",", "512"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axstyle", "=", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Thick", ",", "Thick"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labSz", "=", "14"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "to", " ", "zero", " ", "if", " ", "no", " ", "labels"}], 
     ",", " ", 
     RowBox[{"otherwise", " ", "14", " ", "or", " ", "alike"}]}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colscalelabSz", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ImMagfact", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotopac", "=", "0.5"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"bubble", " ", "plot", " ", "opacity"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.726473016224245*^9, 3.7264730426375437`*^9}, {
   3.72657572366122*^9, 3.726575730053089*^9}, {3.726575760714669*^9, 
   3.72657579553034*^9}, {3.726576634738845*^9, 3.726576643113759*^9}, {
   3.726576967337359*^9, 3.726576985050815*^9}, 3.726579201597701*^9, {
   3.726579302878161*^9, 3.7265793484702873`*^9}, {3.726580491734342*^9, 
   3.726580508337028*^9}, {3.726580600539645*^9, 3.72658060851396*^9}, {
   3.726580662928337*^9, 3.7265806638304653`*^9}, {3.7265813556742783`*^9, 
   3.726581395279649*^9}, {3.726581607528146*^9, 3.7265816295181513`*^9}, {
   3.7265822610034237`*^9, 3.7265822775275497`*^9}, {3.726582385847467*^9, 
   3.726582386150354*^9}, {3.72664136687411*^9, 3.7266413694689302`*^9}, {
   3.726641456601409*^9, 3.7266414877477503`*^9}, {3.726641804784299*^9, 
   3.726641806595386*^9}, 3.726804367387898*^9, {3.7268044976461983`*^9, 
   3.7268045015341167`*^9}, {3.7310295962953787`*^9, 
   3.7310296153509073`*^9}, {3.731055547152903*^9, 3.731055553688731*^9}, {
   3.735825920681238*^9, 3.7358259209947853`*^9}, 3.7483583431202583`*^9, {
   3.7483609819582863`*^9, 3.748360982158421*^9}, {3.748362161108088*^9, 
   3.74836222819699*^9}, {3.748364734352668*^9, 3.748364735085843*^9}, {
   3.748364915095529*^9, 3.748364920801443*^9}, {3.748365698477497*^9, 
   3.748365700879257*^9}, {3.748365763549986*^9, 3.748365791895566*^9}},
 ExpressionUUID -> "68bac688-ae46-46bb-95c3-278046c2eee4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ModelDB", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ModelDB", "=", 
   RowBox[{"Get", "[", "DBfile", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coordination", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"ModelDB", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NDBItems", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"ModelDB", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- INPUT  Database file: \>\"", ",", 
    RowBox[{"InputForm", "[", "DBfile", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Coordination: \>\"", ",", "coordination"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<- Number of Database items: \>\"", ",", "NDBItems"}], "]"}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- INPUT  Database file: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     "\"\</Users/lothar/Desktop/diOPA/db/rotation-database_Fcc_30_2.db\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm["/Users/lothar/Desktop/diOPA/db/rotation-database_Fcc_30_2.db"],
    
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["- INPUT  Database file: ", 
   InputForm["/Users/lothar/Desktop/diOPA/db/rotation-database_Fcc_30_2.db"]],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.74842279619156*^9, 3.748424557468206*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Coordination: \"\>", "\[InvisibleSpace]", "12"}],
  SequenceForm["- Coordination: ", 12],
  Editable->False]], "Print",
 CellChangeTimes->{3.74842279619156*^9, 3.7484245574691963`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Number of Database items: \"\>", "\[InvisibleSpace]", "225"}],
  SequenceForm["- Number of Database items: ", 225],
  Editable->False]], "Print",
 CellChangeTimes->{3.74842279619156*^9, 3.748424557470551*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "PARAMETER", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7264729924586477`*^9, 3.726473011378954*^9}},
 ExpressionUUID -> "fe62bb41-2fa1-4c97-ab7b-0720065708a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"START", " ", "FUNCTION", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726642203900134*^9, 3.726642219988126*^9}},
 ExpressionUUID -> "b6c72f85-5c8f-4b2f-8087-095534c27f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"ReadCelFile", ":", " ", 
    RowBox[{
    "Function", " ", "for", " ", "Reading", " ", "a", " ", "celfile"}]}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"courtesy", " ", "of", " ", 
     RowBox[{"J", ".", " ", "Barthel"}]}], ",", " ", 
    RowBox[{"RWTH", "-", 
     RowBox[{"Aachen", " ", "University"}]}], ",", " ", "Germany"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Email", ":", " ", 
    RowBox[{
     RowBox[{"ju", ".", "barthel"}], "-", "at", "-", "fz", "-", 
     RowBox[{"juelich", ".", "de"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Reads", " ", "super", " ", "cell", " ", "structure", " ", "data", " ", 
    "in", " ", "CEL", " ", "file", " ", "format", " ", "from"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "specified", " ", "file", " ", "and", " ", "stores", " ", 
    "the", " ", "information", " ", "in", " ", "global", " ", 
    RowBox[{"arrays", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"celdims", " ", "=", " ", 
    RowBox[{
     RowBox[{"dimensions", " ", "of", " ", "the", " ", "super"}], "-", 
     "cell"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"celangs", " ", "=", " ", 
    RowBox[{
     RowBox[{"angles", " ", "between", " ", "the", " ", "super"}], "-", 
     RowBox[{"cell", " ", "axes"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"natoms", "  ", "=", " ", 
    RowBox[{
     RowBox[{
     "number", " ", "of", " ", "atoms", " ", "in", " ", "the", " ", "super"}],
      "-", "cell"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ReadCelFile", "[", "filename_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "celstrs", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"celdims", ",", "celangs", ",", "celatms", ",", "natoms"}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"celdims", "=", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], ";", 
      RowBox[{"celangs", "=", 
       RowBox[{"{", 
        RowBox[{"90.", ",", "90.", ",", "90."}], "}"}]}], ";", 
      RowBox[{"celatms", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"natoms", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"-", " ", "read"}], " ", "data", " ", "from", " ", "file"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"celstrs", "=", 
       RowBox[{"ReadList", "[", 
        RowBox[{"filename", ",", "\"\<String\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "analyse"}], " ", "/", " ", "extract"}], " ", 
        "numeric", " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"celdims", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"celstrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<Number\>\""}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"celangs", "=", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{"ReadList", "[", 
          RowBox[{
           RowBox[{"StringToStream", "[", 
            RowBox[{"celstrs", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<Number\>\""}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "7"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"celatms", "=", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ReadList", "[", 
           RowBox[{
            RowBox[{"StringToStream", "[", 
             RowBox[{"celstrs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "\"\<Word\>\"", "}"}], ",", 
              RowBox[{"Table", "[", 
               RowBox[{"\"\<Number\>\"", ",", 
                RowBox[{"{", "8", "}"}]}], "]"}]}], "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "3", ",", 
           RowBox[{
            RowBox[{"Length", "[", "celstrs", "]"}], "-", "1"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"natoms", "=", 
       RowBox[{"Length", "[", "celatms", "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       RowBox[{"-", " ", "report"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<- INPUT  CEL file: \>\"", ",", 
        RowBox[{"InputForm", "[", "filename", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: \>\"", ",", 
        "celdims"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) [deg]: \
\>\"", ",", "celangs"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<- OUTPUT (natoms)  number of atoms          : \>\"", ",", 
        "natoms"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"natoms", ">", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<- OUTPUT (celatms[[1]]) first atom          : \>\"", ",", 
           RowBox[{"celatms", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"natoms", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<- OUTPUT (celatms[[\>\"", ",", "natoms", ",", 
           "\"\<]]) last  atom          : \>\"", ",", 
           RowBox[{"celatms", "[", 
            RowBox[{"[", "natoms", "]"}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.683372792476506*^9, 3.683372804247617*^9}, 
   3.748358400095683*^9, {3.748365015977054*^9, 3.748365055601059*^9}},
 ExpressionUUID -> "e7b9b2cc-75a7-46ae-b9d8-6eb1051db484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"QuickDistance", ":", " ", 
    RowBox[{
    "Function", " ", "for", " ", "calculating", " ", "the", " ", "minimum", 
     " ", "distance", " ", "between", " ", "a", " ", "coordination", " ", 
     "polyhedron", " ", "and", " ", "all", " ", "database", " ", "rotaion", 
     " ", "variants"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"QuickDistance", "[", 
    RowBox[{"model_", ",", "nlist_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SortedEntry", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"tmplist", "=", "model"}], ",", 
       RowBox[{"selected", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"x", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "EuclDist", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"EuclDist", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "analyse"}], " ", "/", " ", "extract"}], " ", 
        "numeric", " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "<=", "coordination"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"x", "=", 
          RowBox[{"Nearest", "[", 
           RowBox[{
            RowBox[{"tmplist", "\[Rule]", "Automatic"}], ",", 
            RowBox[{"nlist", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"selected", "=", 
          RowBox[{"N", "[", 
           RowBox[{"tmplist", "[", 
            RowBox[{"[", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"SortedEntry", ",", "selected"}], "]"}], ";", 
         RowBox[{"tmplist", "=", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmplist", ",", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"EuclDist", "=", 
       RowBox[{"EuclideanDistance", "[", 
        RowBox[{"nlist", ",", "SortedEntry"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.659447143794791*^9, 3.6594471548945427`*^9}, {
   3.748365090557645*^9, 3.748365159547984*^9}, 3.748365527784515*^9},
 ExpressionUUID -> "47d198d6-a6d4-4d14-9fba-067ac6fa63c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"GetNeighbours", ":", " ", 
    RowBox[{
    "Function", " ", "for", " ", "sorting", " ", "the", " ", "atom", " ", 
     "list", " ", "according", " ", "to", " ", "their", " ", "distance", " ", 
     "with", " ", "respect", " ", "to", " ", "a", " ", "central", " ", 
     "atom"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "and", " ", "isolates", " ", "a", " ", "given", " ", "number", " ", "of", 
    " ", "nearest", " ", "neighbours"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", "  ", 
     RowBox[{"index", " ", "of", " ", "centre", " ", "atom"}]}], ",", " ", 
    RowBox[{
    "number", " ", "of", " ", "nearest", " ", "neighbours", " ", "to", " ", 
     "return"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"OUTPUT", ":", " ", 
    RowBox[{"nearest", " ", "neighbour", " ", "list"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GetNeighbours", "[", 
     RowBox[{"atomindex_", ",", "nneighbours_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"k", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Extract", " ", "atom", " ", "atomindex", " ", "and", " ", "evaluate", 
        " ", "its", " ", "n", " ", "nearest", " ", "neighbours"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "the", " ", "function", " ", "nearest", " ", "returns", " ", "the", 
         " ", "test", " ", "element", " ", "itself"}], ",", " ", 
        RowBox[{
         RowBox[{
         "therefore", " ", "we", " ", "start", " ", "with", " ", "n"}], "+", 
         RowBox[{"1", " ", "neighbours"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "centre", " ", "the", " ", "list", " ", "around", " ", "the", " ", 
         "selected", " ", "atom"}], ",", " ", 
        RowBox[{
        "the", " ", "selected", " ", "atom", " ", "is", " ", "the", " ", 
         "origin", " ", "of", " ", "the", " ", "coordinate", " ", 
         "system"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Initialize", " ", "global", " ", 
         RowBox[{"variable", ":", " ", "neighbours"}]}], " ", ",", " ", 
        RowBox[{"type", ":", " ", "list"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", "neighbours", "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"neighbours", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"k", "=", 
        RowBox[{"Nearest", "[", 
         RowBox[{"q", ",", 
          RowBox[{"q", "[", 
           RowBox[{"[", "atomindex", "]"}], "]"}], ",", 
          RowBox[{"nneighbours", "+", "1"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"neighbours", "=", 
        RowBox[{"k", "[", 
         RowBox[{"[", 
          RowBox[{"2", ";;", 
           RowBox[{"nneighbours", "+", "1"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"neighbours", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
         RowBox[{"k", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"neighbours", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
         RowBox[{"k", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"neighbours", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
         RowBox[{"k", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3"}], "]"}], "]"}]}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.659447734831008*^9, 3.6594478129419394`*^9}, {
  3.659447846838603*^9, 3.6594478569598837`*^9}, {3.659447888030588*^9, 
  3.6594479170367403`*^9}, {3.659448066006485*^9, 3.65944812738328*^9}, {
  3.659448389798121*^9, 3.659448413980186*^9}, {3.659448476058148*^9, 
  3.659448511069641*^9}, {3.6594485454869957`*^9, 3.659448614814575*^9}, {
  3.659448665529311*^9, 3.659448677222924*^9}, {3.659449416516624*^9, 
  3.6594494742880297`*^9}, {3.710479671888363*^9, 3.710479672048154*^9}, {
  3.748365169754218*^9, 3.748365234339007*^9}, {3.748365439290156*^9, 
  3.7483655156833887`*^9}},
 ExpressionUUID -> "74145966-baf2-4c42-afae-e977ffa8d7ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"GetDistMeas", ":", " ", 
    RowBox[{
    "Calculate", " ", "a", " ", "distance", " ", "measure", " ", "to", " ", 
     "the", " ", "closest", " ", "model", " ", "item", " ", "in", " ", "the", 
     " ", "DB"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "fuction", " ", "does", " ", "the", " ", "same", " ", "as", 
     " ", "QuickDistance"}], ",", " ", 
    RowBox[{
    "it", " ", "is", " ", "much", " ", "slower", " ", "but", " ", "in", " ", 
     "rare", " ", "cases", " ", "more", " ", "accurate"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Returns", " ", "a", " ", "global", " ", 
     RowBox[{"variable", ":", " ", "Dist"}]}], ",", " ", 
    RowBox[{"type", ":", " ", "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{"Dist", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"atomnr", ",", " ", "DBindex", ",", 
      RowBox[{"{", 
       RowBox[{"angle", ",", "angle", ",", "distance"}], "}"}]}], "}"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Example", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", "   ", 
     RowBox[{"GetDistMeas", "[", "41", "]"}]}], ";", " ", "Dist"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"OUTPUT", ":", " ", 
    RowBox[{"{", 
     RowBox[{"41", ",", "256", ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["\[Pi]", "5"], ",", 
        FractionBox["\[Pi]", "10"], ",", "0.468556698631839"}], "}"}]}], 
     "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GetDistMeas", "[", "atomindex_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"DistMap", "=", 
        RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", "Dist", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Dist", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Create", " ", "a", " ", "distance", " ", "map"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Here", " ", "we", " ", "need", " ", "permutations", " ", "because", 
         " ", "the", " ", "list", " ", "of", " ", "nearest", " ", 
         "neighbours", " ", "is", " ", "not", " ", "sorted"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "Finding", " ", "the", " ", "minimum", " ", "over", " ", "all", " ", 
          "possible", " ", "permutations", " ", "is", " ", "the", " ", 
          "right", " ", "way", " ", "to", " ", "go"}], ",", " ", 
         RowBox[{"yet", " ", "very", " ", "slow"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "therefore", " ", "we", " ", "sort", " ", "the", " ", "list", " ", 
         "of", " ", "data", " ", "base", " ", "model", " ", "atoms"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "for", " ", "each", " ", "atom", " ", "in", " ", "the", " ", 
         "neighbour", " ", "list", " ", "we", " ", "search", " ", "for", " ", 
         "the", " ", "closest", " ", "in", " ", "the", " ", "model"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "note", " ", "that", " ", "this", " ", "gives", " ", "the", " ", 
         "minimum", " ", "euclidian", " ", "distance", " ", "is", " ", 
         "achieced", " ", "only", " ", "if", " ", "model", " ", "and", " ", 
         "neighbour", " ", "list", " ", "are", " ", "close"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "there", " ", "might", " ", "be", " ", "a", " ", "solution", " ", 
         "with", " ", "a", " ", "better", " ", "compromise", " ", "if", " ", 
         "the", " ", "match", " ", "is", " ", "not", " ", "close"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"GetNeighbours", "[", 
         RowBox[{"atomindex", ",", "coordination"}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ind", "=", "1"}], ",", 
          RowBox[{"ind", "\[LessEqual]", 
           RowBox[{"Length", "[", "ModelDB", "]"}]}], ",", 
          RowBox[{"ind", "++"}], ",", 
          RowBox[{
           RowBox[{"QuickDistance", "[", 
            RowBox[{
             RowBox[{"ModelDB", "[", 
              RowBox[{"[", 
               RowBox[{"ind", ",", "3"}], "]"}], "]"}], ",", "neighbours"}], 
            "]"}], ";", 
           RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
            RowBox[{"DistMap", ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ModelDB", "[", 
                RowBox[{"[", 
                 RowBox[{"ind", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"ModelDB", "[", 
                RowBox[{"[", 
                 RowBox[{"ind", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
               "EuclDist"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"WhereMin", "=", 
        RowBox[{"Ordering", "[", 
         RowBox[{
          RowBox[{"DistMap", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "1"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Dist", "=", 
        RowBox[{"{", 
         RowBox[{"atomindex", ",", 
          RowBox[{"WhereMin", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"DistMap", "[", 
            RowBox[{"[", "WhereMin", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.659449115387425*^9, 3.659449119180879*^9}, {
  3.6594491976654177`*^9, 3.6594492261685534`*^9}, {3.659449353300202*^9, 
  3.659449391537732*^9}, {3.659449484354217*^9, 3.6594495121933317`*^9}, {
  3.659449605130267*^9, 3.659449664647615*^9}, {3.6594497368136683`*^9, 
  3.6594497537733307`*^9}, {3.659450003068316*^9, 3.659450044363139*^9}, {
  3.65945015277287*^9, 3.6594503917098503`*^9}, {3.659450426959861*^9, 
  3.6594504571122913`*^9}, {3.74836525642028*^9, 3.748365329630897*^9}, {
  3.748365411401475*^9, 3.74836541907399*^9}},
 ExpressionUUID -> "739516e6-480f-40ad-8648-82ae49b671fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"BoundingBox", ":", " ", 
    RowBox[{
    "Returns", " ", "box", " ", "coordinates", " ", "around", " ", "the", " ",
      "centre"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"in", " ", "a", " ", "list", " ", "variable", " ", "cutoff"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "xyz_"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", Cell[
      "{x2, y2, z2}, ...}",
       ExpressionUUID -> "8093595a-78c1-48a0-be4f-b7b33e1f1235"]}], "  "}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "        ", 
   RowBox[{"margin", " ", "=", " ", 
    RowBox[{"margin", " ", "size", " ", "to", " ", "add"}]}], 
   "               ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "                                 ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"OUTPUT", ":", " ", "bbox"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xmin", "-", "margin"}], ",", 
        RowBox[{"xmax", "+", "margin"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ymin", "-", "mrgin"}], ",", 
         RowBox[{"ymax", "+", "margin"}]}], "}"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"zmin", "-", "margin"}], ",", 
         RowBox[{"zmax", "+", "margin"}]}], "}"}]}]}], "}"}]}], " ", " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BoundingBox", "[", 
    RowBox[{"xyz_", ",", "margin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "bbox", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"bbox", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"axespos", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<- BoundingBox         : \>\"", ",", "bbox"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<- Axes Position       : \>\"", ",", "axespos"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.72646873301163*^9, 3.726468743219098*^9}, {
  3.726469301748782*^9, 3.726469498591154*^9}, {3.726469557820095*^9, 
  3.726469770110976*^9}, {3.726470305230571*^9, 3.72647043245321*^9}, {
  3.726470492745804*^9, 3.726470496617366*^9}, {3.72647072945446*^9, 
  3.726470735326458*^9}, {3.7264707870582657`*^9, 3.72647079865786*^9}, {
  3.726471210577924*^9, 3.726471245385852*^9}, {3.7483648323581667`*^9, 
  3.7483649022489843`*^9}, {3.748365356611766*^9, 3.7483653616593857`*^9}},
 ExpressionUUID -> "fcb76e0e-7ea5-47ef-90cd-10b5d17e4982"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"CentreBox", ":", " ", 
    RowBox[{
    "Centres", " ", "xyz", " ", "coordinates", " ", "around", " ", "a", " ", 
     "common", " ", "centre"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "xyz_"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", Cell[
      "{x2, y2, z2}, ...}",
       ExpressionUUID -> "9a12e9db-12c1-47e5-91b3-3dc556de44ba"]}], "  "}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"OUTPUT", ":", " ", "centrelist"}], " ", "=", " ", 
    RowBox[{
    "list", " ", "with", " ", "vectors", " ", "centred", " ", "around", " ", 
     "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CentreBox", "[", "xyz_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "centrelist", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"centrelist", "=", "xyz"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<- Centred List \>\"", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.726471167638945*^9, 3.726471189111182*^9}, {
  3.72647125313128*^9, 3.7264712948614807`*^9}, {3.726471617144472*^9, 
  3.726471786392272*^9}, {3.726471964732007*^9, 3.72647199503137*^9}, {
  3.748365367869957*^9, 3.748365392829995*^9}, {3.74836554624623*^9, 
  3.7483655466978197`*^9}},
 ExpressionUUID -> "a3158800-65e4-45a4-8399-b4db7eb28fce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "FUNCTION", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.660197431970685*^9, {3.679217095740027*^9, 3.679217121956726*^9}, 
   3.682665603542506*^9, {3.7266422452568398`*^9, 3.72664226088925*^9}},
 ExpressionUUID -> "e49996b5-5f79-404d-90de-0f830311d61f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"START", " ", "PROCESSING"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7266422672358*^9, 3.726642270438937*^9}},
 ExpressionUUID -> "90c5bc22-dcc7-480a-a669-6a0d9b9deaf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Open", " ", "log", " ", "file", " ", "and", " ", "start", " ", 
    "logging"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"logfile", "=", 
     RowBox[{"OpenWrite", "[", "logfilename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{
     "logfile", ",", "\"\<Filename:\>\"", ",", "celfile", ",", 
      "\"\<\\n\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- INPUT  Database file: \>\"", ",", 
      RowBox[{"InputForm", "[", "DBfile", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Coordination: \>\"", ",", 
      RowBox[{"ToString", "[", "coordination", "]"}], ",", "\"\<\\n\>\""}], 
     "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Number of Database items: \>\"", ",", 
      RowBox[{"ToString", "[", "NDBItems", "]"}], ",", "\"\<\\n\>\""}], "]"}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.726582356384006*^9, 3.726582364740923*^9}, {
   3.72658240388111*^9, 3.72658241597429*^9}, {3.726582486691181*^9, 
   3.726582513223922*^9}, 3.726582550012253*^9, {3.7266420823226633`*^9, 
   3.726642149053712*^9}, {3.748362318139151*^9, 3.748362322223831*^9}},
 ExpressionUUID -> "05454692-5792-4ac9-b0b6-86dddc577868"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Open", " ", "data", " ", "file", " ", "and", " ", "plot", " ", "data"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReadCelFile", "[", "celfile", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"coordatms", ",", "f", ",", "q"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Extract", " ", "relative", " ", "atomcoordinates", " ", "only"}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coordatms", "=", 
     RowBox[{"celatms", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "multiply", " ", "atom", " ", "relative", " ", "coordinates", " ", "with",
      " ", "cell", " ", "dimensions"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"celdims", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"x", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"celdims", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "*", 
       RowBox[{"x", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"celdims", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "*", 
       RowBox[{"x", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", "=", 
     RowBox[{"Map", "[", 
      RowBox[{"f", ",", "coordatms"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{"(*", " ", 
    RowBox[{"Plot", " ", "atoms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"q", ",", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"PointSize", "[", "0.01", "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x/\[CapitalDelta]\>\"", ",", "\"\<y/\[CapitalDelta]\>\"", ",", 
        "\"\<z/\[CapitalDelta]\>\""}], "}"}]}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.660193528981686*^9, 3.6601935307637043`*^9}, {
   3.660193638185357*^9, 3.660193638399494*^9}, {3.660193852319253*^9, 
   3.6601939495462103`*^9}, {3.6601939998080893`*^9, 3.660194002317382*^9}, {
   3.660194054904066*^9, 3.660194075663979*^9}, {3.660194251726699*^9, 
   3.6601942536589937`*^9}, {3.6601944300439043`*^9, 3.660194434347289*^9}, {
   3.660195132479924*^9, 3.6601951327204123`*^9}, {3.682685446899522*^9, 
   3.68268546039133*^9}, {3.6826856372704163`*^9, 3.682685638914837*^9}, {
   3.68268587426897*^9, 3.68268587530692*^9}, 3.6833728617505083`*^9, {
   3.683373600001296*^9, 3.683373602246439*^9}, 3.6965160787498493`*^9, 
   3.6965758019992847`*^9, {3.748358508575857*^9, 3.7483585170673923`*^9}, {
   3.74836053713787*^9, 3.748360566433099*^9}, {3.7483606121685963`*^9, 
   3.748360614370101*^9}, {3.748360777328959*^9, 3.748360825993143*^9}, {
   3.7483623371765413`*^9, 3.748362374071419*^9}},
 ExpressionUUID -> "d0a3427b-abd4-44c9-ae22-2446069037e1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- INPUT  CEL file: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     "\"\</Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm["/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel"],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["- INPUT  CEL file: ", 
   InputForm["/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel"]],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.74842455793954*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"19.6635`", ",", "16.056`", ",", "21.3574`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: ", {19.6635, 16.056, 
   21.3574}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.7484245579404716`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) \
[deg]: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"90.`", ",", "90.`", ",", "90.`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) [deg]: ", {90., 
   90., 90.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.748424557942053*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (natoms)  number of atoms          : \"\>", 
   "\[InvisibleSpace]", "559"}],
  SequenceForm["- OUTPUT (natoms)  number of atoms          : ", 559],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.748424557943651*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celatms[[1]]) first atom          : \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Fe\"\>", ",", "0.`", ",", "0.514721`", ",", "0.544393`", ",",
      "1.`", ",", "0.005`", ",", "0.1`", ",", "0.1`", ",", "0.1`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celatms[[1]]) first atom          : ", {
   "Fe", 0., 0.514721, 0.544393, 1., 0.005, 0.1, 0.1, 0.1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.748424557946411*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celatms[[\"\>", "\[InvisibleSpace]", "559", 
   "\[InvisibleSpace]", "\<\"]]) last  atom          : \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Fe\"\>", ",", "1.`", ",", "0.21619`", ",", "0.073572`", ",", 
     "1.`", ",", "0.005`", ",", "0.1`", ",", "0.1`", ",", "0.1`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celatms[[", 559, "]]) last  atom          : ", {
   "Fe", 1., 0.21619, 0.073572, 1., 0.005, 0.1, 0.1, 0.1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748422796846444*^9, 3.748424557948535*^9}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[
  {Hue[0.67, 0.6, 0.6], PointSize[0.01], Point3DBox[CompressedData["
1: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
H5uyNSw=
    "]]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x/\[CapitalDelta]\"", TraditionalForm], 
    FormBox["\"y/\[CapitalDelta]\"", TraditionalForm], 
    FormBox["\"z/\[CapitalDelta]\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  LabelStyle->Directive[Bold],
  Lighting->"Neutral",
  PlotRange->{{0., 19.6635}, {0.49364172000000006`, 16.056}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}}]], "Output",
 CellChangeTimes->{3.7484227969315*^9, 3.7484245580200853`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Calculate", " ", "distance", " ", "order", " ", "parameter", " ", "for", 
    " ", "each", " ", "atom", " ", "in", " ", "the", " ", "list"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "step", " ", "may", " ", "take", " ", "some", " ", "time", 
     " ", "depending", " ", "on", " ", "the", " ", "sampling", " ", "density",
      " ", "in", " ", "the", " ", "database"}], ",", " ", 
    RowBox[{
     RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "number", " ", "of", " ", 
     "database", " ", "items"}], ","}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "and", " ", "the", " ", "number", " ", "of", " ", "atoms", " ", "in", " ", 
    "the", " ", 
    RowBox[{"cluster", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "For", " ", "each", " ", "atom", " ", "DBDist", " ", "will", " ", "get", 
    " ", "a", " ", "new", " ", "entry", " ", "with", " ", "the"}], "  ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"matching", " ", "database", " ", "entry"}], ",", " ", 
    RowBox[{
    "the", " ", "rotation", " ", "of", " ", "the", " ", "database", " ", 
     "corrdination", " ", "polyhedron", " ", "and", " ", "the", " ", 
     "distance", " ", "orer", " ", "parameter"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "DBDist", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DBDist", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"l", "=", "1"}], ",", 
      RowBox[{"l", "\[LessEqual]", 
       RowBox[{"Length", "[", "q", "]"}]}], ",", 
      RowBox[{"l", "++"}], ",", 
      RowBox[{
       RowBox[{"GetDistMeas", "[", "l", "]"}], ";", 
       RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
        RowBox[{"DBDist", ",", " ", 
         RowBox[{"{", "Dist", "}"}]}], "]"}]}]}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.659450503797557*^9, 3.659450515112278*^9}, {
   3.659450549775646*^9, 3.6594505514035587`*^9}, {3.659450723345611*^9, 
   3.659450743292986*^9}, {3.659450881315057*^9, 3.6594508957128696`*^9}, {
   3.659450925818276*^9, 3.6594510114511337`*^9}, {3.659451109092843*^9, 
   3.6594511389251537`*^9}, {3.659451207233289*^9, 3.659451223034775*^9}, {
   3.682678682315175*^9, 3.682678691530838*^9}, {3.748362411202035*^9, 
   3.748362463592895*^9}, {3.748364207344359*^9, 3.748364370038175*^9}, 
   3.748422782466136*^9},
 ExpressionUUID -> "aded71b0-a3c0-42ec-ba97-4f64669ea81b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goutfile", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"graphfileprefix", ",", "\"\<_Values.txt\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"goutfile", ",", "DBDist", ",", "\"\<Table\>\""}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"import", " ", "later", " ", "with", " ", "ddata"}], "=", 
    RowBox[{"Import", "[", 
     RowBox[{"\"\<goutfile\>\"", ",", "\"\<Table\>\""}], "]"}]}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.7483616441642027`*^9, {3.74836610792544*^9, 3.748366113784788*^9}},
 ExpressionUUID -> "aa9fb83e-18bc-41ab-880a-c646c30a4a9c"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
OrderParameter_Values.txt\"\>"], "Output",
 CellChangeTimes->{3.7484245970062237`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Color", " ", "Map", " ", "Definitions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"colortbl", "=", "\"\<Rainbow\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma", "=", "1.6"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gama", " ", "factor", " ", "to", " ", "stretch", " ", "the", " ", 
     "contrast"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ContrastEnhancement", "=", "1."}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"colnorm", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "CScaleMin"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"CScaleMax", "-", "CScaleMin"}], ")"}]}], ")"}], "^", 
      "gamma"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"color", " ", "normailzation"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "map", " ", "a", " ", "ramge", " ", "of", " ", "values", " ", 
          "CMin"}], ".."}], "CMaxx", " ", "to", " ", "0"}], ".."}], "1"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"revcolnorm", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "CScaleMin"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"CScaleMax", "-", "CScaleMin"}], ")"}]}]}], ")"}], "^", 
      "gamma"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "inverted", " ", "color", " ", "normailzation", " ", "map", " ", "a", 
         " ", "ramge", " ", "of", " ", "values", " ", "CMin"}], ".."}], 
       "CMaxx", " ", "to", " ", "0"}], ".."}], "1"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.659521008161584*^9, 3.659521036589662*^9}, {
   3.659521072411956*^9, 3.6595210782540407`*^9}, {3.659765365252421*^9, 
   3.659765373060357*^9}, {3.7264805181475763`*^9, 3.7264805438696003`*^9}, 
   3.7264806066105423`*^9, {3.72648070703716*^9, 3.726480707260351*^9}, {
   3.726480748086935*^9, 3.7264807531581783`*^9}, {3.730959830187715*^9, 
   3.730959853500328*^9}, {3.730960048204102*^9, 3.730960070770797*^9}, {
   3.748361439999802*^9, 3.748361473913246*^9}, {3.7483615674206*^9, 
   3.7483616166891813`*^9}, {3.74836165326086*^9, 3.748361653636763*^9}},
 ExpressionUUID -> "2e874ee1-4932-4993-bc9e-2908a52d2b6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", " ", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"DISTANCE", " ", "ORDER", " ", "PARAMTER", " ", "rendering"}], 
   "                                                                          \
                        ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", " ", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.7264723804641438`*^9, {3.731054178327957*^9, 3.731054196301379*^9}, {
   3.748365613864149*^9, 3.748365628190323*^9}},
 ExpressionUUID -> "ce7a1152-6f65-4b34-b2ce-2eef372a0701"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"INPUT", ":", " ", "q"}], "=", "atomlist"}], ",", " ", 
    RowBox[{"DBDist", "=", 
     RowBox[{
     "list", " ", "containing", " ", "the", " ", "rotation", " ", "of", " ", 
      "the", " ", "coordination", " ", "vector", " ", "in", " ", "the", " ", 
      "data", " ", "base", " ", "and", " ", "the", " ", "distance", " ", 
      "order", " ", "paramater", " ", "value"}]}]}], "  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"OUTPUT", ":", " ", "data"}], " ", "=", " ", 
     RowBox[{"vector", " ", "tupel", " ", "x"}]}], ",", "y", ",", 
    RowBox[{"z", ";", " ", 
     RowBox[{"distance", " ", "order", " ", "paramater", " ", "value"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "                             ", 
   RowBox[{"x", ",", "y", ",", 
    RowBox[{"z", " ", "are", " ", "centred"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"q", ",", " ", 
    RowBox[{"DBDist", " ", "remain", " ", "antouched"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotcol", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"correlation", " ", "fig"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"l", "=", "1"}], ",", 
      RowBox[{"l", "\[LessEqual]", 
       RowBox[{"Length", "[", "DBDist", "]"}]}], ",", 
      RowBox[{"l", "++"}], ",", 
      RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
       RowBox[{"data", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"q", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"q", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "2"}], "]"}], "]"}], ",", 
          RowBox[{"q", "[", 
           RowBox[{"[", 
            RowBox[{"l", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"DBDist", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "3"}], "]"}], "]"}], "[", 
           RowBox[{"[", "plotcol", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"CentreBox", "[", "data", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", "centrelist"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BoundingBox", "[", 
     RowBox[{"data", ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CScaleMin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CScaleMax", "=", 
     RowBox[{"coordination", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CMin", "=", 
     RowBox[{"Min", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CMax", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CMean", "=", 
     RowBox[{"Mean", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CMedian", "=", 
     RowBox[{"Median", "[", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.659455407966848*^9, 3.659455411048641*^9}, {
   3.6594590476334057`*^9, 3.6594590575871267`*^9}, {3.659466413839643*^9, 
   3.659466448992832*^9}, {3.6594665001520147`*^9, 3.659466659515822*^9}, {
   3.659521391166031*^9, 3.659521426765733*^9}, {3.659530329570166*^9, 
   3.6595303297821712`*^9}, {3.6595312183688803`*^9, 3.65953125242345*^9}, {
   3.6595465485999203`*^9, 3.659546611538128*^9}, {3.6595466590820827`*^9, 
   3.659546724871965*^9}, {3.659546766932541*^9, 3.659546864920336*^9}, {
   3.659547295142427*^9, 3.6595473095415154`*^9}, {3.659547783317992*^9, 
   3.659547820945282*^9}, {3.6595478586822557`*^9, 3.659547867644391*^9}, {
   3.659548008342307*^9, 3.659548009741488*^9}, {3.6596057368761797`*^9, 
   3.659605802321842*^9}, {3.65960596165361*^9, 3.659605966588663*^9}, {
   3.659606039441759*^9, 3.659606057545864*^9}, {3.659606131819071*^9, 
   3.6596061362281017`*^9}, 3.659606178968556*^9, {3.659606215143776*^9, 
   3.659606226383062*^9}, {3.659609227231769*^9, 3.659609334943225*^9}, {
   3.659609436640778*^9, 3.659609452410967*^9}, {3.659609569224777*^9, 
   3.65960959340755*^9}, {3.659609845772891*^9, 3.6596098849980087`*^9}, {
   3.65976478779331*^9, 3.659764820256723*^9}, {3.659764859658742*^9, 
   3.659764874081897*^9}, {3.6597649041817713`*^9, 3.659764907475522*^9}, {
   3.659764984094572*^9, 3.6597650329505463`*^9}, {3.659765113338191*^9, 
   3.659765116726519*^9}, {3.65976515763721*^9, 3.6597651616199217`*^9}, {
   3.659765192645853*^9, 3.659765194372504*^9}, {3.6597652563347588`*^9, 
   3.6597653290409927`*^9}, 3.659767111754508*^9, {3.660282301321866*^9, 
   3.660282303630266*^9}, {3.6602848331540737`*^9, 3.660284841986795*^9}, 
   3.6602848809947443`*^9, 3.6792034837191896`*^9, {3.679206316343101*^9, 
   3.679206340286685*^9}, 3.679207077254793*^9, {3.67921078507262*^9, 
   3.6792108077450447`*^9}, {3.679210862195188*^9, 3.6792108681116867`*^9}, {
   3.67921371073633*^9, 3.679213790999736*^9}, {3.679213838682103*^9, 
   3.6792138482331448`*^9}, {3.6792139648564787`*^9, 3.679213965220522*^9}, {
   3.679214167766498*^9, 3.679214180725039*^9}, {3.679214327229205*^9, 
   3.679214362670272*^9}, {3.6965761289579277`*^9, 3.696576129074225*^9}, {
   3.696576612374123*^9, 3.696576612492437*^9}, {3.699248933900345*^9, 
   3.699248997669877*^9}, {3.6992490366225147`*^9, 3.699249041510777*^9}, {
   3.726307522235074*^9, 3.7263076613197517`*^9}, {3.726307714049065*^9, 
   3.726307812731659*^9}, {3.726312820917604*^9, 3.726312872737788*^9}, {
   3.7264661302190647`*^9, 3.726466131504915*^9}, {3.726466844250677*^9, 
   3.7264668527372*^9}, {3.726466889560042*^9, 3.726466908616894*^9}, {
   3.72646695461631*^9, 3.7264669851698017`*^9}, {3.726467041110506*^9, 
   3.726467049261435*^9}, {3.726467098914575*^9, 3.726467099190784*^9}, {
   3.7264672154918613`*^9, 3.7264672921155367`*^9}, {3.726467337342536*^9, 
   3.726467344134739*^9}, {3.726467439581573*^9, 3.7264674737663794`*^9}, {
   3.7264675276258793`*^9, 3.7264675349047728`*^9}, {3.726467635737473*^9, 
   3.726467654745022*^9}, {3.726470842255321*^9, 3.726470846131237*^9}, 
   3.726470881505763*^9, 3.726472176633214*^9, {3.726472214124913*^9, 
   3.7264724492139387`*^9}, {3.726472640615103*^9, 3.7264726448460903`*^9}, {
   3.7264730624546633`*^9, 3.72647308367056*^9}, {3.726473810011036*^9, 
   3.72647384274833*^9}, {3.726475178871428*^9, 3.7264751792163887`*^9}, {
   3.726482006310445*^9, 3.7264820066913633`*^9}, {3.726482841709819*^9, 
   3.726482871135069*^9}, 3.7309602888300467`*^9, {3.731054220691259*^9, 
   3.731054224503105*^9}, {3.748361500580319*^9, 3.7483615013023567`*^9}, 
   3.7483616613816433`*^9, {3.748364089372551*^9, 3.74836417967319*^9}, 
   3.748422771911598*^9},
 ExpressionUUID -> "40bd44fc-d408-4dd6-8fd3-ea544b064768"],

Cell[CellGroupData[{

Cell[BoxData["\<\"- Centred List \"\>"], "Print",
 CellChangeTimes->{3.748424597101823*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- BoundingBox         : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.83175`"}], ",", "10.83175`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.781179139999999`"}], ",", "8.78117914`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11.671470520099998`"}], ",", "11.671470520099998`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "- BoundingBox         : ", {{-10.83175, 10.83175}, {-8.781179139999999, 
   8.78117914}, {-11.671470520099998`, 11.671470520099998`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424597102583*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Axes Position       : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.83175`"}], ",", 
     RowBox[{"-", "8.781179139999999`"}], ",", 
     RowBox[{"-", "11.671470520099998`"}]}], "}"}]}],
  SequenceForm[
  "- Axes Position       : ", {-10.83175, -8.781179139999999, \
-11.671470520099998`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424597104148*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<Bounding box:\>\"", ",", 
    RowBox[{"ToString", "[", "bbox", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7265828812652893`*^9, 3.726582915169325*^9}, {
   3.748361531862952*^9, 3.748361540801919*^9}, 3.748422757232814*^9},
 ExpressionUUID -> "6c21cc5b-e901-4feb-aeaa-825eea5edba6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"coldata", "=", "data"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coldata", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "4"}], "]"}], "]"}], "=", 
   RowBox[{"Map", "[", 
    RowBox[{"colnorm", ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lpp1", "=", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"List", "/@", 
      RowBox[{"Most", "/@", "coldata"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "bbox"}], ",", 
     RowBox[{"BoxStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Thick", ",", "Dotted"}], "]"}]}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", "axespos"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<x/\[CapitalDelta]\>\"", ",", "\"\<y/\[CapitalDelta]\>\"", ",", 
        "\"\<z/\[CapitalDelta]\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", "axstyle"}], ",", 
     RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
     RowBox[{"BoxRatios", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "labSz"}]}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"AbsolutePointSize", "[", "1", "]"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", "colortbl", "]"}], "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"#", "+", "0"}], ")"}], "/", "1"}], "]"}]}], "}"}], 
         "&"}], "/@", 
        RowBox[{"Last", "/@", "coldata"}]}], ")"}]}], ",", 
     RowBox[{"ViewCenter", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], ",", 
     RowBox[{"ViewVector", "\[Rule]", "viewvc"}], ",", 
     RowBox[{"ViewVertical", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"imsz", "*", "ImMagfact"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp2", "=", 
   RowBox[{"lpp1", "/.", 
    RowBox[{
     RowBox[{"Point", "[", "x__", "]"}], "\[RuleDelayed]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sequence", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", "]"}], ",", 
           RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
           RowBox[{"Opacity", "[", "plotopac", "]"}], ",", 
           RowBox[{"Sphere", "[", 
            RowBox[{"#", ",", "0.2"}], "]"}]}], "}"}]}], "&"}], "@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "x", "}"}], "/.", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "}"}], 
          "\[RuleDelayed]", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"a", ",", "b", ",", "c"}], "}"}], "}"}]}]}], ")"}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.659455407966848*^9, 3.659455411048641*^9}, {
   3.6594590476334057`*^9, 3.6594590575871267`*^9}, {3.659466413839643*^9, 
   3.659466448992832*^9}, {3.6594665001520147`*^9, 3.659466659515822*^9}, {
   3.659521391166031*^9, 3.659521426765733*^9}, {3.659530329570166*^9, 
   3.6595303297821712`*^9}, {3.6595312183688803`*^9, 3.65953125242345*^9}, {
   3.6595465485999203`*^9, 3.659546611538128*^9}, {3.6595466590820827`*^9, 
   3.659546724871965*^9}, {3.659546766932541*^9, 3.659546864920336*^9}, {
   3.659547295142427*^9, 3.6595473095415154`*^9}, {3.659547783317992*^9, 
   3.659547820945282*^9}, {3.6595478586822557`*^9, 3.659547867644391*^9}, {
   3.659548008342307*^9, 3.659548009741488*^9}, {3.6596057368761797`*^9, 
   3.659605802321842*^9}, {3.65960596165361*^9, 3.659605966588663*^9}, {
   3.659606039441759*^9, 3.659606057545864*^9}, {3.659606131819071*^9, 
   3.6596061362281017`*^9}, 3.659606178968556*^9, {3.659606215143776*^9, 
   3.659606226383062*^9}, {3.659609227231769*^9, 3.659609334943225*^9}, {
   3.659609436640778*^9, 3.659609452410967*^9}, {3.659609569224777*^9, 
   3.65960959340755*^9}, {3.659609845772891*^9, 3.6596098849980087`*^9}, {
   3.65976478779331*^9, 3.659764820256723*^9}, {3.659764859658742*^9, 
   3.659764874081897*^9}, {3.6597649041817713`*^9, 3.659764907475522*^9}, {
   3.659764984094572*^9, 3.6597650329505463`*^9}, {3.659765113338191*^9, 
   3.659765116726519*^9}, {3.65976515763721*^9, 3.6597651616199217`*^9}, {
   3.659765192645853*^9, 3.659765194372504*^9}, {3.6597652563347588`*^9, 
   3.6597653290409927`*^9}, 3.659767111754508*^9, {3.660282301321866*^9, 
   3.660282303630266*^9}, {3.6602848331540737`*^9, 3.660284841986795*^9}, 
   3.6602848809947443`*^9, 3.6792034837191896`*^9, {3.679206316343101*^9, 
   3.679206340286685*^9}, 3.679207077254793*^9, {3.67921078507262*^9, 
   3.6792108077450447`*^9}, {3.679210862195188*^9, 3.6792108681116867`*^9}, {
   3.67921371073633*^9, 3.679213790999736*^9}, {3.679213838682103*^9, 
   3.6792138482331448`*^9}, {3.6792139648564787`*^9, 3.679213965220522*^9}, {
   3.679214167766498*^9, 3.679214180725039*^9}, {3.679214327229205*^9, 
   3.679214362670272*^9}, {3.6965761289579277`*^9, 3.696576129074225*^9}, {
   3.696576612374123*^9, 3.696576612492437*^9}, {3.699248933900345*^9, 
   3.699248997669877*^9}, {3.6992490366225147`*^9, 3.699249041510777*^9}, {
   3.726307522235074*^9, 3.7263076613197517`*^9}, {3.726307714049065*^9, 
   3.726307812731659*^9}, {3.726312820917604*^9, 3.726312872737788*^9}, {
   3.7264661302190647`*^9, 3.726466131504915*^9}, {3.726466844250677*^9, 
   3.7264668527372*^9}, {3.726466889560042*^9, 3.726466908616894*^9}, {
   3.72646695461631*^9, 3.7264669851698017`*^9}, {3.726467041110506*^9, 
   3.726467049261435*^9}, {3.726467098914575*^9, 3.726467099190784*^9}, {
   3.7264672154918613`*^9, 3.7264672921155367`*^9}, {3.726467337342536*^9, 
   3.726467344134739*^9}, {3.726467439581573*^9, 3.7264674737663794`*^9}, {
   3.7264675276258793`*^9, 3.7264675349047728`*^9}, {3.726467635737473*^9, 
   3.726467654745022*^9}, {3.726470842255321*^9, 3.726470846131237*^9}, 
   3.726470881505763*^9, 3.726472176633214*^9, {3.726472214124913*^9, 
   3.726472310814353*^9}, {3.726472543958559*^9, 3.726472655256157*^9}, {
   3.726474115568013*^9, 3.726474117071137*^9}, {3.726475075064211*^9, 
   3.726475083510268*^9}, {3.7264751406084833`*^9, 3.726475145625655*^9}, {
   3.72647517588421*^9, 3.726475197244738*^9}, {3.726475242232048*^9, 
   3.7264752691829653`*^9}, 3.7264820037993937`*^9, {3.726483206360469*^9, 
   3.726483213908771*^9}, {3.726576448963228*^9, 3.726576454508171*^9}, {
   3.72657661997825*^9, 3.726576624660686*^9}, {3.726576951145296*^9, 
   3.726576960029726*^9}, {3.726577354624901*^9, 3.726577408647622*^9}, {
   3.72657744333105*^9, 3.726577452995117*^9}, {3.726577520973806*^9, 
   3.726577536635023*^9}, {3.726578566338397*^9, 3.726578634604869*^9}, {
   3.726578691152833*^9, 3.726578736882937*^9}, {3.726579013420676*^9, 
   3.726579108668376*^9}, {3.726579416092145*^9, 3.7265794184164743`*^9}, {
   3.72657971935006*^9, 3.7265797641247187`*^9}, {3.7265804576248283`*^9, 
   3.726580473297133*^9}, {3.726580589371299*^9, 3.726580592254403*^9}, {
   3.730007713029552*^9, 3.7300077140172377`*^9}, {3.7309602921961603`*^9, 
   3.730960319596682*^9}, {3.730960357440523*^9, 3.730960405654614*^9}, {
   3.7309604720863028`*^9, 3.730960538539915*^9}, {3.73096066040907*^9, 
   3.7309606778711357`*^9}, 3.730960824189116*^9, {3.7309611888008633`*^9, 
   3.730961189198715*^9}, {3.730961231315659*^9, 3.7309612314808683`*^9}, {
   3.730961289733445*^9, 3.7309612900121326`*^9}, {3.7309613441032248`*^9, 
   3.7309613458537407`*^9}, 3.7309615225958967`*^9, {3.7309615719463587`*^9, 
   3.730961577460699*^9}, {3.7309649146313066`*^9, 3.7309649152196093`*^9}, {
   3.730966377923299*^9, 3.73096639808339*^9}, {3.7310296452033873`*^9, 
   3.731029651961185*^9}, {3.73105320601703*^9, 3.731053206552319*^9}, {
   3.748361013282588*^9, 3.74836101347268*^9}, {3.748361128925625*^9, 
   3.748361129433343*^9}, {3.748361167219852*^9, 3.748361167553112*^9}, {
   3.7483612255632133`*^9, 3.74836122945951*^9}, 3.748361554867632*^9, {
   3.7483622674362183`*^9, 3.748362273130149*^9}, {3.7484227620527897`*^9, 
   3.748422764131934*^9}},
 ExpressionUUID -> "9316d3db-9753-426b-816f-5d45207fcfed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp2adj", "=", 
  RowBox[{"ImageAdjust", "[", 
   RowBox[{"pp2", ",", "ContrastEnhancement"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730960956214876*^9, 3.730960965975165*^9}, {
   3.730961127055209*^9, 3.730961152653502*^9}, {3.730961199136756*^9, 
   3.730961217471492*^9}, {3.7309642536091948`*^9, 3.7309642539017563`*^9}, {
   3.730966346634007*^9, 3.730966351550365*^9}, {3.731053135415823*^9, 
   3.731053146771289*^9}, 3.74842029603909*^9, 3.748421264171915*^9, 
   3.748422748571566*^9},
 ExpressionUUID -> "3069d88c-60db-453e-89b1-e4bd07f88f85"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6NxoHggqx9Ma17F+mQxuvvid3VeMpX9+sno6bFjdt8ep54B3/tQGqC7E80/l
KslmSKhbExo3hYYNQe4WpMPXX9g8sKme3jKu8QGv7h2efFhz7vLpQ//Yx0XD
SxXDxlbPgHl7vos2+ijQT8Ee2jTuzVq3hwwR5zp5QxRlyYdFoBglAxR20/rU
s/X/MFGJJJOPQOXXtmYqKzt+4CIygDfCVyI6yuefqmv5h0+cQ/6B34X8U9Tm
olb/Wd82TZyQi2iRaOmCFg5oZovGvMc9VkFQDGc0rnOzh0/F6YjzZo/w+T+6
BWrp5/0wDdpkq+X0Kv848vlnnExDfAis2bj36HPjEag/2DqcUI6lleNbipEk
e3jjMxUTfu1i2uLn/TZli1S1RjVeqlqnsnkqGd7r3qKuBNlDZPGQ9vvZTw1O
t2IsppnPmjdymwMkeUcQ3xzAR/92TthCqZopmzo4Zj9e7afQMCVGKTFEkfaT
RUd21BTr1Xn67alZ5/5K79Fa996yh7zzZ0tD0XuVA3uckEgUEYu3pNIDqYxX
E5OVXshkexKEH4CbbZbwOY0XpaWXvab5fUcv9/SofOgs6KK4qr1R8Z55IUP+
KV6DS9qFBMs1A1mavOC10FdybemYXFs0znJRrW25qS+iGM1oXedGNx/zsmzw
nh8WfpRj2fxB6jWxFtN+Wyef9tM+ypOPbZzfMfRTW8cTnGR9x0pD93p9110V
UVuGVlVTId3yttl3LhrZlk6fyGbP2W3J0M5Hh78rRZ1xsgXI5Ka2n3Y+bB7Y
VIyGNa4dw8r51fp3zdz+R/tweyBeO2NXB0fz+WeEEmOUHKZID23YtodbPY7m
mW7dxpgl4rLG5y2RWa1nbDQ5/gRf86+ERaKURJKRSNISSfhR9WcB3o6EWHI1
p5FPAeIbulbnN846RMcp/Abhmtc+F3iYoWXdfNzmO+3dpolTXrthiWiZaPGQ
ZpI04tnn03caujabekOtQynV+F7b1Gnb9Jl68qh1OHN1ELlqs1GfbG0/1HTx
ac+mQd7YHfawxXz0Yl9L64hHOenXzCU+WFb+6dj8t8v/T4fvQ/uaPUiOEA8/
Fg/p5qhl4LstH5eStvXdzn/13a0jIeVEUj2VZk05Hm8e8Gpcy6b1QPWEpXW9
z5yZ66aNfgoOUqiPfB0ny0pfZ/2Cqabf1jjR0+oaUi4Mtbr668c6y+zGF/uS
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
+xVLxxVLJ2VzB9KJZceiYixuOOdTfVxE80Rz7Ju1ftI0l5ZPrKh+5xsCb8Gu
RJLMVYQ5yJcD5ovf+eZgJJPxoTEAeCLIP0WquTelnrjQL5BphcyrZF4j4zIP
Qi9jf7SGlhsppKRM2/CUaGa90rPdHCXtFplZBDqj9SNa2SJXgE/6/V01Te7a
Fo+8xVPdsHDPlzSoosLHeeGz56/SLUHwCEJK+GtbEJLvyvaEL/5GzbdSp3WV
y4LgEt77Pnw6+CSlknKy9/Nm7SFTB70XZ+stoUZ7ssmx1eRIN1hjtQZP/oVt
Lr/Ft9eVof4TqvGQfJPfVi6flrk2SvrH09R/yrPfrMFV6Qw1j2y3je/pR/f0
6zS1fPz4PjH4s3lLSk5zs+l4Vw/7s/y1HUllWYkkIhK99gkWvcK/qr1RkZ52
4UP+KUYNnUHV6Il+kdo3yBYge5Bsfn6fZSEWil7gBM4na2mtiRIq2tMOjn+Z
Xilbidb5DxQx0iZIv09L27nOn9X9vhc4mZ/VqyIt+v3c3opeQcgI74+F/50L
/zsT/spqflp0Xt8SbFZvq41ksJO5i498scbu6G2kNNx8/OZBl24paouc9uzz
Oc2juTaS23S6YT1a41oJn3dnaVg7Xe4MtoxldbPnFhdZZ87bw7Too7m1i8mb
jwtv27E0F374nj/VfEFlLvycCcIh/kQDPAPkn2LU3JvSTPM+H5Z8OmPUleC3
7L7FQ7q5Z//s/q7ysymWf5opzvOPs+/f0RnxzGr5Uqh2Pd3kybTEaDJIo+79
vsnQ029xU6cJtbQfqTpJ4yRND7XdtKNAbauXh5/3QUFICu/P/vpIrJXI+Nqu
j5++zd5p6d1pGDNVdKmEf93CZ5/acKFt57GHNXaHhZ8mVerGc2gdWdItR23h
k6v8M5bPP+dUtxKsmlpc3bKGz7otK7UDSRULP0vUsULd/8/e+UAm/v9x/OM4
d45z5zg348zGzMbMxszGTJEUSZEUSZEUSZEUSZaYyUyJTJISSZISSZISSZIS
mSTLmMnMMmbm9Xu/P+12+953u93tdvf97vvr6eXjs/b58+6z1ufxeb1ff0Kg
a0GiCpEc/Kqf7ow3D5IlkC2DdPkXDzXSv0TX1dRv0t6HNmwoM6p8ONJIv0Ej
/nl2WpEEGNauwAPyJGjKoG+CoYURCK0j/hEF/sQYjpyrEKJAgQX7PIRA1u2x
bednh2/aEZq1h+ZCXZO/pXfklU9+3nVBmakcIObBJQ23QLwNIhsILMDSfLsl
QQRevGl8GIfP0zA9D9MLMDUH41Pwfgx4fFhXpKkOKT9ukhXtqpqTE9Yx/RqE
QAz+MUt4xhIO0AqV3bxvGIytgCBYkmV7ujZYBmRaO+ASh+ZT0DZh2rrryYlp
lknMPy2u90oRAX0cECsVepBrQqIIwcjpI2fBGswZEC6CfAXUa6BdB906aNZA
sfq4o43079Hh1NTfqomuj8r+jDTS79OIf+7Tv3bKdUUaYmx2eK4raQxPfmlv
/D8FkMaB7/kTY2jYlnvuNRwClGdCjQMNrtbwXr/5Ub81tptT2NNyS1j8O85L
lx1xDZh8ZA5QuLChFck2Lux8WyurIYIIvXjT+jCG+QeRD0KgScQ/kyCRwgSH
TnFIhCmzpuk2HYfMpxHzSUiQMiIKIj7EKazaBrO8Rvteq1Mk7l5aGKkpCn3d
PhiPwXQCxiPQtkCWO2S7kjtRHn1zShJaNVXZzjNZALQIfvpQPIRcCxIFCIRP
HxMZladNg3ABFCug2wATFcxUvDRSMAghIhrpOetwevrqtv/npuzP0sPdZEYa
aaRHaMQ/z1E0Y4293RP68BSYMospSJXD68IAsGwPp4f/uiqmhdrW8oFr9dK/
AVEqxGmYhfwbOC76twnPfCkHfDNId0G5B2ofqL2gdIN0B4RWYChOb7ZcWY3S
GftcHrz9eD42Ca8EsTeStFoLChWIJTAl5XBCWnXDaR3EdiHrhPwuZKwXUf2B
V5L70YJFrN0Ix50ShCvSVEdROFGWzhSFY0lin+fLDzcwRRWOqjF8Ys9DoAmJ
LmQOINuGdBWiadjz7G8+4goccOZAugSadUw+VjpsMcBGBwsNDBTsDhrpOas5
NXV8u5r6ypfJr8VFHBQ00lPoX/tU+30902H/+zXin+eoDU2OZqwgBOLvgSgI
4jCIQ9jzw9ruP7zzE6moX6jblg52Vk6dqwPH6rF9pW7+vV76DWGNSfKPbBdU
JP9ofKDyYBwSbgJCo9sbU2l1JvvooyIyvVlbcB4u7Z0u7Z3MO7oCIcyqOIK4
Qd/12iG1B2UvVPegtANp03FQXv4JtwxzJ8x2JRDwCIIlZDxvjrUbvfmt1i/Z
ymndLUv03JHH0eARRD5lCKXBEzzetsQfMzl4ypvHMT/6DdikYfixM2GbRCAj
BUPRSM9Z5YmJxg0CLSzg5l+LZM2fubn+9PQ/PbqRRvoPasQ/z1QUbZ5mrDI3
O6ytQ7a9z9o+Zljaa4r4Pz2upxRd2GPLgavEhrQhqNDleP7rBTv/TnY0poPP
Rhg3wEf1Bc8IVPHXrHaGtUlMCQm+670uveg5XA1frkdhLXK17O+PyzdmlHR+
TKfruLch4YYiyT+Ie9KGQ780b7t3NPeIZtlj2Py0zTvmHc1xpS2jcTXMgcMt
REGxC2fkdMfbsdoLusddkBP+PA541q6DhUryDwO2mdgRhPhHNQoBevaqTOJq
6r3p6QtEQbOzyK5mZo5G8DPSSL9HI/55vlpTxjc0Oaq+hGxDnfn+xpJ4SVk6
0DZOda0zTf3PuYkepw1OiSk546lAqAORARtaId75KeImwUi+k3YR9kxaYXob
prZgwgKftBfDHSm6DNtxLAzCO7XnlSI0vl2b8Z8sRIGWA0oGVqODT9K1hS02
0yeXl23mY78dEg7IIvjZPIuoGw5uWPu0b8QcU1jTantRv1sxOqpGe0FvTjw+
LLzDnTsTLYJyFbuAEAJZadgRZKJi588oEew/IewFmpzsTk0dTE21cc2fyX96
RCON9J/ViH/u039mypXtDEpTVU39xNgDcx8sJ3hp6D5NmSC2o8rzdZ/kUDda
YSSItxlirPlibF+2CXIbyK0gtYBID8T07kte8ZP2fNIGs06Yc+Pl1DaMGS7E
UQSEEfbukSgIsjR8MsXnvK0JR2sufL6UAnoZaAVYi59ZzmDNzl3f4nOCKlnR
quu4jIc+w4FHWdvhx/WrVu7TvpehdAGpISxHy188TpU1u8+bH4gXcQi0dh1T
kG4D53/Jls/4808y1JFGGmmk/xON+Oc/L1G0oK4eIebZImvU2Mk25JZT0Hcu
fuWwHGdNGDmVZUBRAGUJ5Hl0osHDu90S11sUxTqS1JEo1r55kcbrEB/rb6YG
7+fh4yK2d7OgsgOxlHtJ2SfWI69F9TEjTO/AnAcWfDC3h9dVZZAmgWau8D1X
siS8FNnHN9Nzvv31PDBawO5hc5Lv3XwCi2bmvJa2ZuMx9mS8iEaQ0PNjOqZX
vmb7LfDzJOJ5s5LEvjx/tDXxssmd7wsWQLyEfT7SJRAt4rigke7S6fQ0zM5d
R9Qgmx9dqP9rPdOn2mc67GehEQI9SxlXYGsddjZgh4JX7hHHGZKmagh1bJe4
Rp+TNLSCfjQegjhWfNzJ2c6qKHqmKIKmAbp9bGhFWUYIdPYjuzN3E8Lovrxw
rq7jnHFkKrKvF43b5kjhzfQFwp7xVfi8Bp9XgRiPEPPV93wgprcJeo5gN96o
4JMJxrdhzgumQ9C3r/mHadvn+0CRwTUBxizJaVdtOXFGqQCjiSloWJ/ZcACK
/L4upDImdEsm5qqVi0Bo2cw2JR8Zk/OL2qra3Ude/0UoeBXxn4fu3EYYrshz
x+ha6dqg78L25BvX9OsjREHc+UPOHK4IdI/ak1Mw7KdAdo/6bW/iX6rzabKL
+sIizqga2jCi+L+oDmsWEBUjJFasYpON6iGMNNLDGvHP89KRahEsq7BLgT0a
eOngo4OHDk7qnRvzvDFZGvHPpe0KHIBbcroBr2xdgbEHsnT9EQOgWeJ8/4E8
h7HHeISL/plPwNDDpf/k+Yd3p9tCwkhLUbrSdb5UzumD/gCIiQBTdCpQ4caj
iHymqDBNA2IsRCy1COrluAKIN2piMUIw62/kV4h/Ft2w5IEFNz6vIg+iMLwS
+D5qCrIUaKrwXhP8bM3O7jWXYv3VzMVq5tyCBtm5UpYOBIHr2j5Kj0wTUKj9
ikdchF+XKqDZru96zwJRSCQhk4RsAjJofe/Ie3szfqAozx2hS23q415jlgG+
2uhyqR/602HXx7CT1OLitf1Hb/136mBq6rqXxPIyziW/qaWMKGjuuXqBWpOT
VzcNwm65sw4Q/OCqmKugXgftBjbNOqhGJRFGGukBjfjnGakmmcOeHwQ/fgZE
WBBjQ5QFISYGIfTi38Tdi0riZU29bznDDhAHaTuA76S61pkwlH3EGJj2gjDU
V5awLwUd1nqJ/Sropqxr44mwB8Xx5KWZPtrYjPYlyyZbycrJxGzq9WJLpIFP
SzCxjuFnho5eLBEbp6+46FO6R7xvEnNBglp8ITh6p4aPRpizw8wWTJhgYrP1
UR1/K/F90iSnttsLnqvXUsd7TWDMnJjYzk05ilOOAiKfDwbvmDUqzfQe8a6f
XJsF296xLw6pHJRKUCtDLQ/lFOTC8DWJj7UbEcdbCHXMfXyhtm8KTZNX+zs6
Gt79h8X00H3/5tb//4FAmc+fz25q6ax8qSWIDK0/24uwP2yQMU8C7VeP1uIh
+vbmL2D4QdhjpIKZBiYaXkE/jgqDjzTSdzXinzv175xyPVYtgnUNe34Q9qQ4
kOFCmgtxNgQZ4L7DBcTa8QmDGXm2qdsfWE7AdoFnvnDwT/tCnru3v8P3xdop
CYJHyiKei0GH2rzAzc7RDVq3/0P+H36gKi+cG3oYnLbJmBy03LwEYi77erEp
VOOYH+z/oQDxIUAsNAnq1WsBEC+SxNgRMesnlpMEvfaCf/RKcvlZC+NqIPjt
j5rkK77tjcj1QRn6bMpNb+/POs5eirbfyF3v1N53Gg8hso1tRiedeW0LdB3Q
7j/sP/kp0XVt1uY5x/qjUeXqkHa7vhO4CGcgX4F6A9rIqtDMQRERkaPjHm7G
3UtLkm00ZssAX6Vho1W0gn5EF1+avjvyvDwxgb0E1/CzSjZTIG/9w2J66B76
WB3maLDPhj4PzgXY0MpdqqWoZ00WHJObXQjghP/oMz5OlYmJwTX/3NRSXn/W
5ZTTnz+fT09/IbqVrx4t9HbQt7doCXt7jBTYpIOVgQ1RkJ6CXjwattVAOyJw
QvYLf/2RRvrvacQ/z0hn2iWwrWFvT4yN4SfHgywPkhzsAnJTB+i3fxPXHREE
09J0TVXuaZun2uaZunokS9f43kcWC2Js5XjejjQFmjp2AZmOsaHbsaoC4vgD
MdVUiw/xjyx3qutiatr6Eo+NIIqYSbyYK/DkINZhF9D4ChAfQ8Rcldg4eckF
4nWeGO+PrwMxHyVWssRGhaDV3nARHeWJtdgrni0MnST038v9H1XhMV1q3JD/
pCty3QPWziHB0n0w+DUNHPJkPsM+Kzxhd4Bjln5dFHWNZTnn74LIDWIPiDwg
dD68ly5m2K7vBi4R/xQq0GhCB1kNWnkoxSDp7H7hH09GHG9i/8/JX8LXcaOx
Frrad7dn3cdhP8NOCmQnqfV1bBiBVsjZnzuKCe+VlLGeMXu+mb+yZS+sdx72
OE+DLgcuBQBiAAlpIow3f1UjQ7tos8nX0WZS0sgt/6BKExNHw8hnPP+1co1A
uJfWyjMtp4y7o87c1R1jGfNPD32BY/6hYv6xMbChFT2ljV6/mQP94i/6fw4C
/3c+1T6oZzrsZ6ER//yzEgTL0vSBvHAizx0/uHFfswSbq9jVE2Zi7Lnx/wQY
d85/DcVxhfn+pCiSE8cK4lhRGMxwnMEfHB7HnReE9wWhr7daqjnG2i3z/V2E
QKoypiB0g1aWQJK44rgf9ilxPUVRvKOqgeEILOdgvQLLBQ4EIj77iIkwU3iE
EEikAYkOiLdOYixMzJUI6oB4nSM+Hb6cwXFBMwwg5iLEQpxYTxIzrvH1Ax/U
4nCYhUEOLt9L3YiC3suDb8V+qqlErEiE4YqyPDAeffU42QBTEGI22a/NhW3I
CyzzmcAJ0gDIw6CIgDwEEj8IXQ/sqInobZXtvT6e/ypAGSGQs7AU2l+LdtaC
9WVreXu4GdsZF5DBz7oOOdV4RV6uAY7/URZP2c7EnQfvTE2d3/h/vt4rSf65
y//jq6lTp5Yy2BvgaIGrCc4a7KROzLe3qUc3oMki4QfxjAJASS5lGHJueYGy
wfWTOouEHxm5jerLllLsC/qDak1NHQ1dQMMQoKEtLqFXBs+womB36Mb55m+K
7IZ/5KvY4WOmYfJBZqJVCWKAXke7XLuMvkyDLt7NwCON9H8o4m/6p0f0L9LA
ugLuDQhQIUgD372A8TixHHH0CK8snWvISRl0O0YP9cry+Xd22VcunBiWYXsd
PDSMQFEWtiATXFTMRfeLYXOxdv1sZ4Bl/9EOqYh8RHEEZleIVdQNnKKF1oe/
olvTzJ0i17MvCB6LogNkguARx/VD/hTWbpLnL0tSh8oKaNv4Vq5r44OjV4j3
TgqnSucfsMTnHCninxzx0U9Mp98w0Rd8lHhbJsZPEAJNrGMbXwaZFsZWj94v
lbxQjUMvQ/JPFs7jcOSH+u5JmjxdVBRrIEgzn2LPyS5pdtLjZOiBonj64IC/
I7quzbNj4FHGQJ0GTQbUSZBHQOIDzncrSSu8KlNm097YnTDvTJit8w7notOR
H9CK57T86cYAdAeXiBxwo3nuXkYYqSEE0jTwJ2T4IVEUToSR6n0Hr09OHg6D
n7+J/l3Cd/+Tv979XXlF4shUhZ0D8PQhcAKBI/B1wF2F61YgypTPWE8F3J9q
2WnoLQGskVSjAVCTYCO5DTb1FBX7iLDnR0luoyUNbS//wy6gyuRkdYhAc7fy
3+fmLp5nHhzCuf7XiCbSrbf6ZU6TIAoEcSFawtE+2g1MQQbcEnefIC7Rl/nN
9kN/0fBj8AxnAEca6XdoxD/3yr4KfirEGJBiQoaFlzH6Ux2btukTRuvK8gW6
C5vP8GQQeq43HWMYkOdP7turKp1rqBb7xhWwrYODAm4a9gXtUsCy2lc/Zfst
tjMrivdUFQxmxiPsq9H3AHGa4kuEM82SYGzn2I4y21ll7Zbo1tSPH5zlSHK9
RWGkJU4cSNPHkuQhWue4c+hX64wshVWhcpsE4SfeV4j3e8R86sUaepZ1EUSE
eF0gPrSJT2fvZ0GkBIEM3szmX075nWfZIDRjcJiEfgKOwtB2XxU3W2HyjSRE
0bqqemEiKyDdhNAg/tF3cLv2R1+iVXGCYTgU7IIsiLFHlwNdHrQZUMZB6gfe
Q53EXotUn83OyS3nsj9CSaQYmSwjldwI+upABTCj0VUOJEDyG8ed4gdLBGvv
jTz3Qdf6aOi8137Pz1aYmKhPTR3eJAot3pr4+Ovd3+Tj++vq3KWtA3unELyC
KEDsHMIIgVrgSp1aEPyYmmmN6nXUP1EvzF0dI8ZGTwG0L/yjxPwz+Bres5+j
dQwEOAkIEBB8AaAjTf3n+QdIBKqT7SROp6fPZ2bOZmZ6U1N/eAxPpdLExP7U
1OkwkufGozUkmdnZKnN2nzt/LlzE+e/yVZCvRAiiQRD9If8M/UW350BH/DPS
SKRGzHOngqtEk0tAkglFDlR52EocyLKeCoHQc70sc4ho5yYMBt2UrZd4Juj7
obk12XxDuXCoW7pAFGRexaZfPlQ+5RcaxeTlBxvy4pW+S2ZpXeEULYRniII0
jwyaJg9rSHDcPVEIJHF4IXS9kvq4niLXU2C7MvSt8DcbE0SAKwGxBoiZGLGQ
I1aGCOTDjiAixRIMkDF5R8Qnlzbj3GyGHKcZL1T8UPdBzXWRt7UjqgS6qMC0
hwXBMuIcdKktZ3jmy3ZznWtXwvC9XpQHtSZNI/7h2fHklyoB2ixoc6BJgyIG
LziV18I234ub0t4putWHqGzWFV8KJmnZMqfa4DeavGqFnc+SnwV0vU1HGBuw
GNtBgu17Iy98NB6Mb55+tg7kOVzjWhS5d2zo1o+si+77uI0UWf9ndnYwM4Nu
o7c324qJAw1N4crWhb0BhACnnsURBfUh0ALnwiZHX4nbT+seOA4HpnLZ+aPu
KlxuACY0Cgk/JNUccIZHO9xd6RkJcBEQeQnpN5B7C5k3EH15jUmnfzoKGin7
+XMZ0eDkZG1ysvDX9/7sNMS5/o1HCxlZ1qk9OVWiTSMEarPn+tz5C97COW/e
SxCZYfDPNxFQeA70GVcAGGmkp9WIf/6uinoedtYgTIcCGxp8aAugLYQmHyNQ
ignuJ+i1zfcX5Pm+oQe2K3zD2yX9EgiETP2HGaMsnmvI5nuIglSLbflCQfhD
OR2+qvoHx8bcSQqjOEQHQYL1Vtq16QTPWElS97qnviP6ZoHn6SPyQfduZRHH
Cyny+CZ+p1YoMRq3i/hHogGlCdRW0NqAmAwRhIV4GSdeJqjM+gajvEbF+ysi
W5qUw1j2IgqydaLW/Yip4lcnd2+OxtlLI86R5Y7QhTUc4ChofQdU1UtxYv/u
0/+YVkRRmrbF3jwRukAWwm4fREEENfVa0H6nGHxQXUoTuCqjJAbCvwVbcffS
0kwPIRm71GHXusKDvrh3rD4+lXc6wkJu+EE4xj4WLJqlwNs7kSRAVQRNDbQN
vFSVQJ4B3t6983cIdWpkJ6lDspkUDqD9m2xRka+uTp9aEO0g5rmACIKfAYQP
wVuFnWW70NRMO67aATjf25uMxGdL5cXjg1U4XYOzVTIQSATHvH4BPxHUrUsQ
osAOAeGXkH0D5XdQeQ/Fd5B+DW4CzgU4LmikXxNCoCb6g5IeLWQ93CBs4ua3
Bep0lT5TY8ygFSCnzK67ySPgGZZBWB7OgS6cP89JwF/XMw0kfqbDfhYa8c/f
1TEsgmMNonQMPC0BdNFDrghTUIWL+cez8eun4PuL2P/Twf6fYWozfuy/wpNN
ysovdab4Ro6sPNLV5y6sZbCjmxpaps8s39+F5cgIw/vKCh4MGtLtsjMIISTJ
h+O0v9G6OshxdsUxjD3aJq7YrN8HbR1eUBuvmX2eFfg24G1+3X6ZEqZx9lmi
c6EKZHpQmkG1CSozyA0gUgFH/O3xZcFNZWwbUZAm7VDF7VK/+S9vZyfCcSUF
wZI43kLUIcseStNdUaTGdsR+9o18I4qiRNc1OdYzgQMnfxGLey959feKwZgB
VAWMKIhYFDmQJUDg+8uOuKohSb+82pH08Eo9AN0laM4uFN0DUalI+n8M3Yvr
TqksewsRFMJFRD6GLi5caejgq4cwUvxr78Dk57sLinBblwcbQiCEPUfgOwBP
HXbTZ5tLW1/5Z3fns9szFY7N5rLzzdJ8tzwLx1xos0+K1+7QU9cqJGngISD5
GkrvoP4BG1rJvAE/cVJnxr2jWjRPoPTnz8WJifLERO4hd9awm/zx3yKgrv5f
4Wekkf6uEf/8XW3D4vnOGoSokGNDnQf7X/w/RQ6e/3I8QWFV7l5GFG0M438s
A3KO6fLa+SNJPVlH0d2MLHpgKMH2PrjQfQ1ZB9zo7pY9vzvHeSimPcEP1GXZ
gXYfhw1vXn5NO1KUgeev/eww6JsFvu9UnsV3cNyG9RiI1fRrVu89Hz6JQewA
iRMvhfavu2wwK3RehysBhEBSHaYgtBSrgScFOrfzswNgbAcR7XC9Gb4/z/Pm
2O4kbfNH48C/rw1liaZtMI2HLMuA2Ii8ErQ+amDcDLo66Juga4CmDIosiP86
V4VgDGGYvgvs0oGocy7vg+oMlMcDSXOfm04DOTtX2McBMxvaOGu3Iwpj2tG3
cL8P8xGYeqBr4Vckj6xh8FXbCYkzLw/t6xAVF2GrDNuIhRLHJl9NrUh4DJX4
9knNA8dBuMQI5JoI+Cajvs8Rz9hhjtZKfM0IuPCuQZoO0VcQIyBLYPipfYDC
O4i/gj0i4RvVIv4HdBMBNZieuZyZOZ+ZOZqezj7zecCRRnpCjfjn76qo53s2
MvMrxoA8G8pc7PlB8JNkgo/SMT5BpDFzJ8L15sTxfUXxDBfl6+JIY1UNpOkD
hEa/fvyh/HVN/sqGmOcUz26EzyF8AoEu7N1k99wp2mZwmPYuz18gHkPYgwyx
EO7wFTt4xDAYW1W+F/OPrkkW4enDK0b3gxDGFTCpBkUAFH6Qe0HiAsF15jes
0zMbzBJCILboHDEPXw48GRBjVeJjjrcDQjdZaccNPPt3T/xHtC7LUVQVqrpB
bERf8uqyJKjLmFWMbTDs42ZkyhxIon/ZhefNimINVfWSmqiwS11Bsy9qHQtr
HU6msOH1dS+UpbZ4uOWGLsHe7WD/T46kx6H/p4vX0Suib8OmHiOMQDm5t6JC
n5ZAQ4PIB/2IXpcEdlWZgLGRsp/WXXCAKGgPjszGdzbTW7P2ZcyxfHOEnHGh
pCWOdwlIvIbKB2iPQY6koPRrHAidZzzBKEkpwpvmqnf7ILrbT+4e353+P9Jt
FSYmqhMTzcnJxuRk6S7yOcaFkmZHdRFH+v/UiH/ulHWecKwSV651nPkeo0Oc
ARE6eDautp7Mjc9yxLierCBYEcWakmQHmTBS5zwKfjh7eVG8K8+fKyuATF7A
SfTovhZu6ytgPwTfJUSG0a1o5Qh8DXCgR/7vHJBpT7BdOX6wIY73pJkzWW4g
SfURETF3v83z4vlS0lRdkevIs/eG0zBsZa77UILAoIpjb4jV7Bv2yScpTGpg
WgeaKKijoAqCzAOir2E7CIGyCIFonCad26XzDoh3MeJdRODE+eayMGkhEPuA
v3vfaf+0GJv7XOdAGsPTXtj/08KmqeKWrKK/tjZl7UZ5voIk2VZVztdDWVq8
REsUKeHUiss7rTekKwJPlPn1sFt1fPVioCzAisNAC24NJ78kCeC6fnou8k6Z
AwJbTGRPSrbiYpPva6CyNOxUpf36Styyn7X1StaDoqmR1uS/pa5GlZ3VEvt2
MvK58A7qH6H5Cft/ujyosCB2d3O6n5UmtWNtBp1naQ8U/VD2Q8ULRfTjkxz8
/1Cdm9LQN03iRnlhI/2facQ/96lmWOxsLp/aV2F3Dc952Vf7m8sP7/YzYmyH
2M4Edy+DQIjtTNKt/gd3QfdNcbItyx7dTJNxvUVJ6khVvS6ng301ZEWdnbQ0
1NKVYLsH3otb/INwqAo7wdYDHc8ZWzGWI41TtHwVrqeEcIi2+W0grzheUZUP
da0LHFfcw4E96mr/74eiGtPsnSbffyJL46gYYjX/mnn4SQwTKpjSgiaGTRUm
+WcHmLrB7X1Xqck1enaNniEIG0IdaRBHGqvT2JQJTEHieyayhMGENFn4/ntk
rzT4G6diKkjoIKGBkHL5/e2/L5qpyrIfCBCeJXH8j7qMTUE6f7iub2O62M44
15sTRmqIguZsrjmbc8a8NaHWeWPfBjpSTTnmVm3BJqMFzbycU1T1ims+YcnN
Ttgo+uSvDPhBCVxWSdChiHsQBamzQVXKJ4+6v9kmnaQfHvATKqK0SRztERB7
Ddm3kHuHU8CCLyFO7Tuf4JFBHrJYaj7nIBOEWgzaCTiIQScMTR+U7L1fjeP6
Y/LXNfEjU/LEHOsZ/9mRNG66iS0tfa0P+V9PjX+mgcTPdNjPQiP++Y6qmvm2
YfHAuNQxLJZU/3DSKHMnIoo1FcWBpoHLBCFDKy9EdlHsSznlAY7VsZzjRC1d
B+ZdiWF2TxOcx+AfQOgcwn0I7IMrd0+PgztF0FV3vi6OllSVY4Q9mwPcVsx6
gduBIRBSlY/+vjHNkmft1HneY1EEiMXEi43aO84ZQqDPMlCHsSmDIHXjQGia
svP33dflWaa5L3Tj6oLqDOgK2DQZnGwu8QPbek7VlVhbfc4OZidRJK0sNHWt
I+PBwNg7N3RO1eVvfVPrc372aktIuZDSQcECJQsvZQwQ0378wnyrDW2WZq6y
d3p8Lw74kcaxiUIIfi5p5juKGqA/KMedQhTE8+bQCsMe+vs2Q82ZBBSvlp+z
S5seZTeITNbyCks7e2f358A/nbg7JoHbJty7u6RjqcDsHwkAFFkDUbERB05i
4CHAixPhj23Ek8APkja9u9WN+KAcg24G+jk4zeBaT90Q1F2DJ5sv/n1yFRTR
A0P+0laBnQY46rBbhsfP3UZLwsKBvHqirPSVjztCH1fIvKmmuPq1muKvdYgb
aaTnpRH/PAvRNr1kvPS5/gDHJCPUQUvjEbzTBnE79Q7Gni0yUWuLbCeKcGh+
L+vIyYMtbfbcWoPdfXC3wY2+e3OXVvTig2cUBOKKXE3b6Bm6Z8YDTBGqWxTB
3YvJs/v6Lsae2/n7CIF0+3d7UWiWHHO7xt7dJybdxGKcWC+9YfQkLpB7QOYF
iRsH/7ANdw9mQ1nC/OP6K/9kMf8QKyGCUeLvgSgAkjB80gemHTlEPtYzTGUY
zNC1OrrUVDu3D8hYLvI3ThDwqNmg5YKOBxoOqEgE4m/c4cL6QVH0BZqpwrS1
WfZjjuMMGWv7kGZ6OGKcZqiyt094TuCRvTMo0hpD06ercHsOZVBvq7nYCbOs
6db0Q/pBVH8WyUIjAeUg/POzP+Ui66jHJ2sBafN6orZJdGxEx0pUDERc+mRf
LPq8a/sg6odKAg4Q/BTgPAdnSTgMQcN9nn2qs/wm7aSkka6+SKYh9MgkO7RE
65XvhuHdqd0gM92SNAbqHuj7YDrFdRKMrUvNTx2kODFx/k1/2Ic6xI000n9S
I/55FuLsZWTZ63z5r5xzDh+M8YndKn794muLTCtgNFLXYCsudmRk/rom2jUk
++YU6XhHPz54OoE/qsjXEfNsfkMRtetJN0EwqygcmI7wSOgtWC7DSgWoNVjN
XBruT19b10aoxhTVlCYmnDRlk6U/4Vqwz0ewhfPfWfoLivzuJhrrsizDeHDd
bOLW/Bex5H/Jqr0RHkqjoEjBW4Vz0p5eirQ3CucIyZwAjuEFOQdERF+PNhdg
rdRF1EslC8OPgQ9GAej5GIEUTBBRf7SN+91D1aRICqrSzDWqobiufDhHi2k9
QNiD+Q07x7IvKd03zAt0TYR2zIRzerl93xOAVBpqJehW4RBZETopqIUhu9Px
PXj836p8ltFuceFCTPa50AEghNWTBaLlpF/oaaTPOW37IQ8UY9BOw3GW9P/E
oYuIaOdfHwjtKavSZ8MiS/4LCF9CZAChQ/CiV1KnDxSj+EbJuhjBD8Ie8r8c
/cfbrmAT/Vg7vdtJe6cqExOnOC9+/mt16LX1Wx3iRvwz0v+LRvxzp/5tU658
f0leODEc4m+9G3+LDeCDITa+lVc38JzX9RciYF+QrgvyAo45sUZwXKuroNgr
KdHSnpQ+eC7mllOaLOhaxwgbdr5QBD7dLYpA/CPPtedDjY3y1VIR1uqw1sAU
NJu4mA8eCANfj0a3tNg7J+zds9unWOElNsQlqrxJV/UY6mO65pim7G6Iy98Z
FVVTZZoPeDsg9oI0hIOfEQsRlPQrfgdhgyoLmhJ8MoRm3aXV9DG9DuwO7AE2
x7Bn+vGVLFUcHoqyEGWvNISUS8Ut/jGQ/CNngJDylPWXHhTd0kbwIwljfiOW
86/oR+/5MCaGMSlI93BO3KJFs+G2BCCZgirCniH/IBBCOBSCzE7b+ydH+3fF
Y7RSgdlt867OxaQXSEma7PRYWC4+2X+QOrFtKnt2juI+KEegFYNOFNoBqDkH
GXPF+1Rn+R3aDAvRE0fuwoo+j2e4yHZsGIY3nInOXljLZXarxXv4QAC+FK/Y
kx9hwrSR3wEOcrl9BdYeZs4fVe7z5+709GDYUHVp+Wt3VLI64skz7A870kiP
04h/noX4gZIse6zvYj/P7XqJb1W+D4aoLIeT6I1HeFIMgRDuD14BYaT18HHv
Es8TUmSrxt45OpELrinCSTqdEEVISYrg+VIfDN5Zb3ky0F3IYucPssU8TEdO
PthLsiQI/EAz1TiOgdCPg2EkUby8zUVIq/zUuii/Li6uCbMPjmpdkaeqSwxj
h20dcO04852YshLU7CteW54AdRF0NRg3x2fd5bV0H/NP9+vIt67AdHghS113
L1ufDzFXqryNYxkdz3/puKDnYRBSsXEgNHf9MTn+j9OGOsvePhEFQJEGYib0
ktpF8PNZDlMamNbinDiFH+aN6nWHee80EoNCBhoFaBehnYNmHIqe85i5gOdQ
viQADpRl3KNNlvulvq4/q1SCXsgxm3XOQZvXPxQc9/idFrdceMrHB3nIokna
TRXPVjfiOkvvXeXdFzmEQ+baP+z+elDoAeRLkW3XCQTITMzoBZmG6Y9/TBXG
r66kJDcqEDR+/1CRoqB0pDjBzp9tEn5c7KBSkLaICtuC/LahWfzxUVUmp/an
py9uGootXneI+29XR/y3PdX+oJ7psJ+FRvzzLMT15MTxlqp6hSAHIdCwiRVC
nZdi+yupQxCsS9LHitKVqorJR5Y/E0b36bZ742m/L4E/Kk+XjQeDbRIebvMP
oghpEn/Nsp2hdyrHC5X3o700FTyaTVzNpRD8nI25mq900akdeK8+Q/AjCoEs
hQvgIFNkQBYH0d+aQfy41mVZiqpM0zbp+jZN1yKmt5ibB/w9fFh1AfPPmDE6
vVtcjh5QCpcIgZzksBEfbJ6BrnnE9+FoYXPO4mg7376zffrknfyc/hr/zAS0
zt84oS/l7xsA29EUhs4lSZBlcPMO8Y+VH2StVDmrdxcHoBqqnJ2BOIz9V8RS
/jXz5JMY10SaMcCskUSgMEyrFUtW3brL6BlEw5CNQwlZBPLei/h2C/1lEIuW
cAJgBddowoWkungFfRLYjq4weCWJ4z+BNAni6J1DeBrFo9RMil7MM0sFZi7D
iEWeJuf9thThTXV8W59zGst75qoXsZAu55T6TU9+oqeVycffKykjHRz/0wb3
MfgRBWH4SXzKVibqnSmyP6z2S0tZxXcOFSHDnkn/zxbALi+qk5bsyn2PshOQ
twP2i57tpP2DoypMTFQmJ6/bys+Q9X9mZk6npx8sKz3SSP8ljfjnV3SYoUKD
hVtA9rjQ+o2I/qViTEdVvtDtYw+ProMjfKTpA4JrZjnTXF8JUZAg3BSEGlxv
6dHwA6T/R5ooaOu9zdPr+a9bFHHdMJ22GXwl2ST4thfq4Dtr7tNufczR+rBd
eW1ILkZg2gkfddgFJE+BuoTJRFfHlZARBUl/uWTxjValYYZ5n7NzKg5h/4mm
CO+UnnFLfNpRWAztryR7w8gl9C70+315poJ2sZZse0eeMETefjB/+LQ9Pu6b
nIgJKAMR9VKwccZdO2As3zsHx3G1RdEreQ5UZXzl1VVchOe+FmZDsVZq/PW+
mAJSGjbJ36CAZqixt/vX/p+V4mvG8ScRyT96kn80mH/kXpjVKedNCmvNudP1
ufsh90nY0QvY6i5t3MJypETxLk4APMTNajfPwTzA9aNn/ScTu/vyDNmGo4yX
CnTx/+2RMg9IvGeQBy3KqA2ZLGD+p4fzo7InJRiBuobchXXZaV7372y538Sy
Y7X2FEk+iGcQxRnJuCn1d7xA/gwv3ZQM43/oXoUob1N1A/qzpH6QUfdTbjjf
hf6PIxCQgUD7k1PdqanO1FTtrg5xI43039aIfx6tQYmOsedcACDEvSDR8uw3
NrlmOeJcT04Yrorj+wh7JMmu6Fa9RLotzNxJIEMrv3gi9u6eMJiQZcq65pH5
GAcPI7P0sQvlZgqJbovyAw2CriME24TC91ITeamOEjL/agoWQ/BaCx805whL
EPBoa7gMMjJdAxcGlCWBt/eLA/wqqq7ExFUHz8VB7AWSJxECuT/q/Z+t0cnt
uLZxiExd3kfD5roDxrTJ2XVFIZaFXAnKH8Y3P47bP427Po3tMVeqjOUideHe
cjqMraIwOMBNuJq4/LKhhws5ahu4o5kocne8NIIf4caZjAZKJs4sUzFBwcAU
dFsUbYFp7fBclzjyeSH1gtJ6yzkfk8KkElPQcP5L4sIh4pMKvj61acpvm4s7
5oLdkLYpAriCE2JdafYEJwAOsFdwGBi/lIaFKMz4TjU13GoNDVU3rMSYu6MZ
60h/QPakdNqiW/bsUGIBRiZmcI67kzPZ1gLJPGYAC2lGEofudQG5Y+xQXpBp
Sef1TEZAKyo7NMcxw1XeCGXtedGHNoAL++XhH3xbI430vDXinzv14JTrcY6G
3T4Ye4bT97LrjtinPxTK+Dgx7GG2K8n1ZBEIoRW6LfDwPo8Sdy8o8MekyYKy
0NBUO5pqV1lsShMF5pZzuAHV7P9o2Hprco87E1PB0mykMR2qL0VgIQQzbiBk
p68lZNeGLGirYGiR/FPHVQGlMeC6finB6rbWVWmEQAxLi73d5zmBvwc8N7wW
W9/Kt8XRjDiWFccygmCctYOr9tnKW74zfxoyZag2oNWEVg3qbz9q37zXv3j5
QB0VtqMpjoG6guHH3Mdp/p/M4UlHbmavPO28ni9jcA/YwguOCNiCC9piirfW
Q7SDyEfHAT0XRxmp2RiBxLe8QGvyONVQYdowAhFTPmIp82Kj/pZ18p4HH/m4
JoDYgeGHpb8uKSDzahR+ndR9nexDMXn4gaosd6bvguVLAuBqAVZysBiH2cAA
wc+wZZixh5uP4KrRz6ZY4NPoMkWFOhO6HDjkQo/zW52035Eoklxw2imJMLOY
ZVcKJs9kqLBWPWIcA+uv/KMhv0zulSfBCWb580buhkfNyzsUBzHteUF3VYkA
BPE89dXO5ZG+fu8E7kgjjXRbI/55hCrBdagxSc+PlMx2UX+Zu5eSvqD/gjgu
P98XEYWT4khaFE4Ng2duJImnph2BcVd8JlyaTzYX0535VGc20pzYhk/Gi1fC
OsFI8PYupXFQ5UFTwRSkLoE8jUOgGdbOE45zXZmkaIs0Y4NhbjMsHbqxgZ0q
Ww72roft8N4Amzqg3qpuB84DGchWodaC/X1oN6BZhHICkntH32uHStFHXopC
n4wNdRUXeDSfwORObj7QWoofriSPlxOHc676jL3Kk4BQDiIliBTw9kOfv96X
M0DLAQMPTHww8jAIKZnfuoA2NDmqHiMca+uImAoQs2FiKUusVrlm4FqAYwKG
9nRDUr17YCYPz1+RpI80LVwLZpgAuJqD5TTMRy6n3L1r/jn+0jK18HujgP5V
KjmXIUuDfRac8OCSdNKi5SmffGz5o+K6ffJsydDpb13iqGX0ibQFl33ZtWyb
1j5nki4gI2k69GVyeir+/tGcYdaMjr3qUDDiNmEtIOslEfmEAAKk/2frtKMp
ftukZqShnmkg8TMd9j8llUr16pao1O/FIo745xHaT1CgwYQrIen2UZFPbRpy
RYa/ZmvMhw/xk9pQlVibJ3wHCPdA6AGB68nPcK/olm8L1fK9AWWhvBBKbRRa
S7nOSukI2VLuYC7emNjLvOBlGNZ9mrHC2urwPbimjSyJA4EEfqkkKhMGfhcf
rsqiK9J7o55UAbWtvIU4B9EOYp46NBD8IBDKQSEC0Z2W474deb4iQTG/kSU+
merTe1eLERi3JRH8rGYHlDJQKzDtO1gJny75j+cdHZkW5DpAyw/jl+8/Xcjp
oGF/yz/iv/07rikSG5o8zVClGevEuIuY8FIVbZqyS1N0KLL6quB7MUYEz/lW
mfhs25/zXS3FYDmJyOdiLjgYs5TfKiIcY0/fxj4rtNRUcbQSz3v2naP9YTG3
SzzfEUIySRLETx2b1I9tYM8PAh4Qkw8myCSkh5YPuV8o8/3zEgajykLNfDSw
kwmVCLWNe4s70RV/bi3Totx+gBoMxNXqw3gm8OwqUmFdNWvr7zvh1ANXHgw/
5/aLnqn9vSIS/1qdDtuwzs2Pqi+O9It68+YNQpqxL+JwvvcPNeKfR2g/sXFR
ZfzN/6PEP54LTgv0pz0dRV1hWwcCN0gCZN/PCC6AI/YBZ/vhfX+HxJG4ptqw
Di4RNLC7g/X66VrtdKV4OBevf95LbuiyQDaDoBqKTNs+e/eE4+LJE3JdUW2q
aYwVeQGcycHWnx+2OWPZaez4zwNJSOUgX4BiFnIxiHuOPPr43YWneb4CMZN4
vdIkPhff6wqftw8I8fZ7a2o5fkipAGMfmG1YTAAlC+uIPfxnKhOoTaA0wtgk
fByHN++PEPBoyRR7BD9qFsjowF9/uL70Mje6wnsYCCiKOsHafSUKvdcWPts6
086Tmb3BuGX/lab0RuIlKEaOosDXtfn6A1UJw48gCAzb3a6kPy/2bk0QPJOm
sVcKR2iXQVHAIPQkKjlXLtNUaLNJf+ztBHMJXAhgn/00p/kxCUNxRa5s6p3a
bxWUMHkWbf4FV2zx8FB4eio+ORF1D/g/Aj9DiYN7imRIV8lYDmpbJ+3ts671
uGVoFpXpP9ES5QnVnJyEYTHq6zasS7CAM/H/6XGN9FyFeEane6C75e2NR/zz
s6qG1nt5Og4q+Mu3Kzn51X3ir9ZlYZBpPhK4MPmokrj7AzJlElOQyPu0p/pR
SWJJkn+uBEmFsmHS92zGo21dZxMXCDo8udlsXZ2i6IpMO0MWE5mqqq2urgPB
NgSb4CuD+88jkC6qM6XN9saO59gbvAzNbDsWPMEFb3jWcXfbWeKji5gvvqOc
fGIBMX9KLAyIhRNCtvPeGp8Ktof8s5QBRhXoJaCkYCV4MWWpaS2gNsP4NHwg
+UdMBTkdlIzr4Gfhxhnr/hSzn9KqMMnQH/O34SXf/0Yaf6/Of9SX0MobcZTg
+olVNWXDRmPuMfhRhjBB40V4nhOmvfkkp/510a05vv9YlgFNDXeyM3RBt4/7
2SmLCNKeoHhRw7N6kbnNPwrS5Jh/0GPLn40C4vvC0mRe2+gOEyodX8qSa3em
jY6pYpFVKrHzeVYqxfiJY7p3EALJ4gFlJqrOJzTFpCoXl8V+V0Dgb1JxYuJy
CD+LZBvWlRVYXrluQzZCoJEeJcQzSqVye3vb4bjXq3974xH//F3fn3JNu1eq
sY1ekQ4dNpnzJcQ24KPv2+Ondq1TVCW27RyhjjIB2hzoitg0OVDEsTuItflH
K90NJY7GV6wUflyqaZksZztb4NoGl/XCYTy0SvN/CSS2JWTBrrkAToQ9xxA7
hcQJxHsQRghUgIc/nN+IKmgyZWdsBTBl548bOUaglOmjWj9t31v0J1ai+dV4
0XCAb76y7F8Sh9dZOWI6+3b9ZJwDUyKYkcLLVXixPCA4rteGwPheeS13SqsB
rQT0MtAKsJGAJe/phKGosYDKDHI9vPt0/vJNi7Pa4q8fCjZOBRsn3LUO84ng
B4kir7BM50IHyANAcL2vhOE30hjBdBGULQ5tn5gKbyxoKauWjXXb2pp1edlM
M+ee6tS/LvZuXRS9VJVxbprpGCwneKkflnR4iuiVinvlOEmB6s38l+xrhsIx
F4pP7KH9vjgurygUl2eKCIHMR+ebZ2A9A7SirXck8YzHs47scUcWeHbFAbck
5EFLRERPO+w/oO7UFG63gWhnmexENrSVLwg00kg/L+Kv2tzcfHDjPza2/4yK
gbVKdKOTpZ6U6Djgp848LzO6qacv+0bV1tnWgdhH8k8e9CVsaEUZH7Y+Hzx8
iKcW3xdgeNjykspyuuWAvT3wI3OA2zrY1jT/4nh05FWRo80K7CHmGUDyEjIX
kEYIhHCoDD8Rw7TKSjOkfY4aBHoQGrEJfqLe/1/E2g19Nu8seOOricrmOS4j
aT3HKV3o5ntbVP7+q4XmJzpMCWFeDgtqWFDBrAwI5g4h9L6zRtEuWwBrqcFG
GtYTF8uB/qy9+V4cVBpAoQeJGvhoYyJBX8oyl4vM5RJjKU9deMoYF6qywTIO
hvyjjoM2BTQJsETA4ZxwqS3GrA/W11c+C5anJAsTgmFfS8Zmk+sc8H04Cl3w
zxVOXtcGOa6WOIaLNCL4RPCDkAAt0Trin++XVPpxNUPrRxkaNMn452GFiish
HPPQf2s3+EjeeLR4nqAgEJUksopcWVVqqssNRbYsif3z7Wv/WZFt6Oe+tKEn
25DhTmSrv4l/nmkg8TMd9j+i09NTxDPJ5PU8+oN4M+KfRyvlXikH1pqxjf04
pRHdKPhWf8dZqJoKy3KM578iuOknIh9kaAX9KHAD3fAT5c6eSouGFU6Qp65r
ti6298DjhwAyN+xtXWxpWxrf4e7Nlo6iOtyzlMF9AOEzSCL4QdaH+D4ECuDY
zat/8Ix0yRFXAyITSK0g2wKpDSQWENzTLP774geyykLPeIg7R+6Q/ZPsZDFt
xDPq6rUzbYWeoAt7rxc7YwyYFsKCAhY1sKiGOTkQDDvBd33eCqurRzgXrA8L
3va8qzFlK35SRUVKEJP5XzwpMPnXR1udda/M/LSz60FtyCsM/SFvCyQeUIZB
FQOqEOg8YDAO6auF9XEbvpXc9PVeXJxf2uZ5cBcSaQJXhJYlcS48/3t5b79L
69oA29kUhgaKIva8mY5wSh1a6tu4npL4iTL0K57VWnD9ME2FMgNPeLXZmIWK
9JPYxtOc4Iu2Csa9rj08cMfAiyx87r5zM67Lx/eGRKG4KJwQBmO8vbtnXf9/
FPv8+RiHPZP+H8w/w06s6OO6iruSLSz80wMc6dkrEokgvCmX7/W6E/frT45z
pPu0Ls/Q9U227UToAWkYFDE88yUL4ywwju17nTpxbWH7mcADIj/uLS70PtmQ
rBk9289R1VS2gc0NLh94kbnAaT2zZCHkP/7KPztZpb9lyFzZG+DtQbgPsWOI
HUCoCnt0H2+7E3SdJT1XGWTuwb2Rrxu8KlsBQhMmH+UuqBx4Kd8CsQV42p8b
OdW0KwwXVZX+YqC/kcWhO8w60Ctka7M+aBrX02przDTin5fzjY9UmOTBnAQj
EEFEXxL510SZWDQRlE1xrCjLNBSF9pg+/EkdfCd1M7g9Fv+MLbhASzq3t0Ev
POrq/qjWJFmaqsEyHvPtIN4DmQ+WGUertM7KanF5xn8dTbGyOuxruTBvnqcG
EPAoc6Au44oEqiKuziR5unLcPyWmvczzdMRxXJha28QhQLoWqCp48ovr7jzV
WRAC1QNrvejGWYIySFL60Y2Wb+2pDj7UdtHkPdyJgy8L4TxEkWUgnID/d7b5
QbWHDTjm569dQEMbOn9GiWAj/bxMJtMS+ix9kdvtRiTT79+bcjLin3+/KKoS
XV9nW495OzjzXeAG3i6wNs+omntzeWiGOmf3ApGPNIarIiOTxUH8+J4Yf5El
rXU2rdErj/HAYL/acsKuE3b2IV+GBPrmd7VsN1tuxqTOojrYMSEEqoC7Dl5k
JXAxA3x+SuGDXBi3864hC0LJC9k7T0cVtjlKEJtBYQe1EzRuULtAsQOSTSAm
ckz1BccAPBNwjCAIZmSZurLQlufu7rdFt7rfiF2fzflF/+lGBhiVa/5B66Yj
dP+9/jdZoUVp/BZLevp2pfeJDhNc9G8Sf0NU3xPtD0TnPdF8Q7G9Y+4IAilh
MIOWXHdknZahMMpUZp3KrG3QiysbfyINZ0NWoiqrTP0hB6HgFraZ+ejUlPvz
O+3XbJrFxalPormVnWE5SvSR0bew4XKUw6SwLxNhVHmHpbvimoFnwcbUXv6+
kdMsaZz87umIIhfSNMizuKWaOAY8z9M3n83vLldcKwXH8pMf2RTXuNtbCH6K
EK9Dpgm5BmTLkMxCJHz+dFXOvytxJK3I19SVtrpy92f+36zK5GRzavpk5qYN
K2kLGH5GbehHeoSMRiNCF6vVitbPzs5G81+P1r9q1nVDVaTp6nRjl2HqMU09
mn5/XXFvOOuaIsXa6gt9GHvUedCUcG8sFbrFJLAv6NdliCi3SybvgR3RThFi
VUjVIF2CRBqC/mOHOaG5vbEtIdvNq7xNfbhniZ1YY33r2jaNE5Ui2olBIw3d
LPQy0E1AC7GQe3BH8CviH5biUmQC+TZ2/iD4QRQktwMxU3u5dMS3gNAG7zlX
nwTwSQjvuafGHi73Z+hcqsp33ExfC1yftKlZx8FqFOet0wp4uRKBWWdXkqzf
bLbOLtEETbbs7M1yhyA8L4ncB6I7RpyME6dzxKlhDTSroFz+6TBshqTPkl+y
ZNeOu8Ew/gF9+c8/svLJurRAUdRomjZde0DTdD58ML19KdnH95SvfS0/T6pY
O8eiECjzoK2DoQ3GDu6LoalcV6REoil7bAMIrCCyg3gXxDsg3MYU9AhRGBUm
r88VAV8CPAlw7in4RNvMMLaKbGeTu9dB2IOWbEd9Q/dEjP5HZMsbfEe7GQgh
+OlA8QDKXSghBEL/FAiKfvfZ2Q6PLFXQ1LqG7qn56NLSvzIdXuj3j3/3eZ9W
CIEaU1NH0zNX6LM6O4dtZuZ4agQ/Iz1S37hx6vX6gxv/sbGNNFSuwstXf65T
xqo4ui5Pryuya9IHiqRQ9RXO7qUkDKoc6KpgqIO+DtoSbrIp+dXmYNdCkIMQ
yNPdDp+70Vc9AqHopcfbs9vLd/Tj3oxJ7Rmlo6h2ljSIhdZ2GDu9SBBKKegU
4LgEp0XoZ+AgCnXfXS4gCr/OkB7ytHjCS7aNvUAIhIjJwovFwzfrINmFMQFM
yMmeWUr4LIOtq+u2pwiE6LweW3TJEQNLgKNx1tmFF6ztd5LQZ1N5znG05L9c
CcGS/3x2tzum/wtPrjJS65wild8gCNNbIvyZqM8Sp0sEILNSwLIBCIHUKyCa
bzCtXa7jgut8oKkHXdRjK4GvxWFLQgPMT5SXxtJfHnuXsP8fVz55ZMzDqznF
+2X1+yXZ6bnkuC+qTEzuT+G+lu2pqerEBEWfZ9kPcTvaDGYe7P8ZtmMr4Vgg
ngco0gZLD4ItkCKw9IDCC/I9vC76+QJTVFaDLTjnS3EQlPhLNBT68U5R9BGa
OcWw5ejWHNX0D03F/YLQv4DvcDd7zT+lHlQQAjUhV4BYDLy/++ySeA7BD47D
v8QxbOhvhT72lj5oG73ffeqnVWViojk5dTA11SM7sVZ/WyfWf9Uj7Y/rmQ77
H9Tl5WUsFqvVag9uOeKfP6xKS3A4kJ2TVRMvQXV6f7vDR4tuanJ2LySRL/zT
AH0DtGXMP+IQ/u2vn0IXVCAE2sobdqpmZ8PqbFp3axZr9uGkLMGO0lhw7B5G
QlBOY/7pl+G0BCdZ6CH+8Vxm/r7LGjtHEdSYsmOuBsODyITzv4jpyqvl03dU
UOzBlAJmdTBnhFk9TGlgTIqjml8t5t6ttD+unQjRLVgFaCmQA4VbY0kGr3ju
d9LomCb/2VidtNQnTOVP6vQr7h35aOusPEFsviGC40RlljheJK5sVEC2SQHj
GkwS+x+IjNCPa1xLYyCJguie7qI0YZejxNgjQQhnxVHcG3NN2kyV9jlzHfk5
rHyCKOjny56UKpzDYxFZ3EZJFiFXfdNDc12dYFhbXGdfHMFTYOrSdfwPdv4E
gbnVpSl6XBPuNYbIRx0EdQhUAYxA4l3gmX9iJOu0LJPXF0hx+ptch/Pg0FKq
wT1BuOKffVvPQLa8YTj/VYI4wp42FFqQr0IqA6FA3/lbT833hhT5mvFggGjf
QZZVROfbQUO6APTibz31SCP9ZzTinz8mT4Ba3Rec4PuUFsBAGgIGLclCTykc
+bzdF/lBkcIzX7oKaCugLuAQIIEH9Hm3uRYwlry/fiJEQaa42pzUGONqjV/2
g3sZcrtb+/7h/FcWDvJwlIPDFLSDUHL0707+WecUKPwqTdRlSE+Z8gvinZeY
LLxcOpbs4lv2jAbmjbBghjkTTGthXA6vlrLvN7rjdJhggEyPTaoDsRpefz4h
lnOvGYcEvU4wmu+lcWRvBH6xEXiqu0dLvA4R77PyxRPdGpg3sPNn6P9BODRJ
tD4QaXkKBxUj1FRkyBnGWwikSntM9Tgx63y7XhAgEtjEzivlLlBWzxnLh+yF
Fme6Rqb9kjZM+134Nu2Xym2xRAOuDLhy4Ei+HV46yzzoCUnguf2h0nyDQFRD
kWGtIwQSBnDalzSOaU3gA/bO8aogS1ceIc6ROEDpw/CjCeMlurCYf35mCozK
rLOFV2IFxh5cCtuMq2EPqwEIfvTT8ZxkSqjtZbO3t5MAXx6iiIKKEEfwExq4
dyrm33pqYSihLNTNR5e3a0ojEEI4ZDp8ZHWskUb6f9OIf/6Y0kXOwamUvE+Z
ATYB96scNn3Wdvp/u7H9gjbUWYa5xdk9FQUw8yjS2NDKmKb9TpJ2nGX3rkp7
UHZdFLZ7T9116QekjltNJddOL+yDXASqcWjEoI7gx3WWsFTuzh0GsgTQOrdE
4deREW+dxHicY8ATNPI9mFZhzw/2/xhgUg3EVOPtau0T7WKSDTMcUFlAbQGl
CT4uAjF+QbxvfhDCJynGpDEpfBSCxAh8DTAl31aSpEl7bA28mjp4Nzt4P3f1
fvZKvwbGdTCt48mvKaI9RpReET51CXQ1bJoyKLPYETSUrhiyHuR2B7VXK5EP
9PqkAGaloNrFwUv0dWCtnbMXDzkzLdpbJ5mlfnfZEzq/x5GBQAVCDYi0INLg
9duq1LiDCykJPEby47RJfroQAqlILvoqhED0zTpz+4C92+c4TtGSYcPFE1b5
GZoCB/+I7PhiKv2gCoLKDzI3vrzsnykyQGPtc4R4zgsxD4IfDVkKW2kgqyHd
MwV2pzjuqiDY5XlbP7HPPyFtQG5JabdLJnd7K9B3hM/d4YHb27PvVh8VOPUz
EoaSimzV2D3bJj0/bpKCdgFs52Bonzy8/0gjjTTin/v1tLOuTg+l2OCfXMnJ
J/RNcroez9iTdyvd8cUTPx5TtEW6ucG2H/NcOPMd2Qd5+Z0k9YJpD+JI404Y
2gFoeaDyIwjEtB0wt54sqEAeMGkSNlPJud0OOvox9yDlOksiHLJUccoMx9UT
BkEcB0ni3mblK5w4Vdpiqvs8C47UHRfDpBymVDChgDEJEB+Tb1fqY7SrKRbM
sEGzCRorfF6D8VX4uAzE2NG4EiY02D4r4ZME3rLPmOKTddZf0tUx/GhBYAbJ
Ft4L2acl+DAPquUr1TKMEYUPRPotEVZmcGv7F4z6W+HpBwm8l1y94fXRNddk
/Qh+3LDvh+O3G4mPzPqU6HJODvOKa/6hrwJjoc+crm0g/lldI231m/kvGnef
I8XMIzWA3AxyE0iNINZ9RaBwhFZrcC9wZeMhVFu/QDX6jKmPTsTfXLcNbZpq
KNHMVZqxTCHbtA1FkTYY6kOeGUQ7IHWBbA8vEQ6hV2iKn0jIorKaLP6ZUI47
wCLsUZtAZcS+IEREXNEPHYHjroiifVkOFwJSVUBRBGnqe0Ue/nHpQgpTQmPN
GRAF2cvm7aLJkv7R3kO/ItxTI5FXVzrm46stcuYL2dYlmHrnqtK/pcvJSCP9
yzXinz8jb4hWrPP7l3Ly2RzxzxbJP1vkbUvb+x975wOh9v/H8Y8xmzGbMZtx
zh0zGzMbM3ckRVIkRVIkRVIkRVIkKXFyknIkSUokSUokSUokSUqcJLlzJDnp
HOec1+/9/nT7f9v92fbdn989vXx0d5/6fPpcfT6Pz+vv/DK3xxcTTVdlmDss
25Bt37nBDt/kBgmGPQ6DLEwLMM/DLA17iIX8x99sU0MzVLmbU2EIZw3JUiBN
gPgn9TVRxSzajMNYcltqPkt9Cy0Nhc37YoYgMJGmcTW0uopHQaHlY+tcEJxL
4piFJEl02j8tyqaI63R5h63b51vgLmv/Ae/kAf/kHm//NrNDrMZuvao9WJ8s
MWCFAVo7RqBlCjxZxxhz58X+igGemuGpCSPQYwXc5R+usz/LO6KImhzNCYIf
+SaofLBEgyUqPEZPf3Ny9+lM9KJ9C1eE+XCFXR5ucvr3ZfBYC0sGWNLDYzUQ
vKm5nfYctqMwScHJXVr6Iae+LNp9JocXChwCW38LlNcH68/6a4/zmHnevsX2
hsx/fvZssQ/rrBJbvC9UY/hR20HrxKa2YQSS6IEl2gOSf1od/v5cSo7fXfh/
bO/9P+rBSHTBfwdFXKPJmwiBeGYQ2nEVmMAOPBMwNZcrJqIy60zegCc5lqhA
rsUUpNBh+BHKgMU7n5+5Ww1Jah+Rj34bt+NGhh5oWyAvnJNb/tulDcn1MSWy
/2yLPF9YFE3Lc1Vto28a7lv2jnDx12BfXetJ4j9piOw/p780kfgv3e2/Qv+3
/LOXpx3+7EHt39FWiFZq8Ptj6ftLlZ00fKt+BOpm/6KXqsuKos5R1Hnitdax
nQhCM4WLzQ8qcFKGY4RACRgG4OzemFRdieveF0dxTouqiCM7p/ktP1CgLAj2
Jam5LHsiSeMUBXnIqIpbkcmDOHGa6x0hyEHMo+/iAiVkT7dg1QNLTkxEqgo2
ReGjUwghEE3WYSh3WJoZ8bZCvKsQb3LEUx/x0EOspG89r91/s6cwgMqMg1+P
32H4uffq5MZK11CFpxaMQMt6eCg7Y4wsXTrg6kDiAKUXNEF0dcP2hIpf4e7z
A/bTFEFoWfY+3zcjqOW7ovkTHaxa4Zkdntpg2QA3hNPHmonvuBuDWQbgNiVy
n5l9xKkvCXZWREdLOvdzZ2TV6H7+KLd620PWv7/C5PPixeod5/KjKN8IQgsQ
d7PEk65IAwozaBygc2FDDxQWzD9cGUYCf4BSqXH7Q9EJdgHpSOwxARgANPsH
slyB/embYjl6/K25KAyiCPC3vkyRpUhqNFmboRoh5mFpp0z1hKa4dPhpnV6g
smoIgbiiA4EMx7yQ8STA4o/PfS7DnhZGh8oK6PvkRLA5NvMYt0ZU/7SZaf+U
+IGoMJySpgqIgpTFprLUlOcqoujfV0Z3rWv9Lv0f8s+sxIA+B6YCOBRi279c
HfqVlS5wqm3BzgxdurTkRQonPx+BZntP+qs3rc17bN24H+op2Alknxe671pj
6vaM1ptQ6oM3mszm109h2QfCIAYebQ2HeE7zW8o4dVZwicldp2JvVkWxsaII
KjKugUxdA2nmY2iDYasIgvsIb3QdPAfKMoZXcXgVgxchWPXCfe3A0MO9azQN
XMQtipw6BNYEJYq4SZN2qdI2seQWBNOiSE4UzRMPtohHEZ7kUKTExV9SLeKW
49vPpsRyV5XF02MN6E1VQVPAnbRFX70dhmz0kX8CoAtj/lFtgcyFyWQhurFO
PPUQ9Pp9KSwb4ZkDXrjguRNWzMiOlvWH7nkrgv0/x1mEQNTYXWrypkj1yOh8
E0hS4nlaqvjGF5b4bJOnT+dPnyFbvutafpwUWkHiBOkGEPcLiH/Qbp/6fzaw
oQdyM4i1wJacZitlssxylYMQaH4oI0vAVIiFxhNJo8X79B1xNneFYYyO8tzp
8AvpVw0a3wly66IKRdKgSOprgitOIaUwilRmncHpMbkjFm+HyRvROd13lPO7
QbI9FXFiD/1/TbtgO8DTSRwnGIGMO9gFdK0zxfUE+f6oMJISRdKCUJzj/o+a
Ll7rWv+G/t/4Z1ZmwIgLxyJyKrSMNAmmoF+vcIKJEKjSEnRG4tG+bHcuH05l
rb4oU/rlvk112mVuhN3TwlZytdB525/TpsCcA3Mf6KPZGnnd/EwUTZ7jGouj
2OeD4MfUA9M27hiDWEiZu/ToTIYtK4zsKEqg64JxhC9wOLTRwzkeH8RyNgXB
GQIkfRf37bFO4U0K28so9gI9NI7RL00j/Fd19Zt5QR+0zsCOCAa3xxKMOeID
jviIeFgjHhSI2wFZDA8Q0eRBnQNlCjt/uF+NEaFL+2z1DKGO3IXjXxo/qP2g
8IDEDrz3EzfW1VnieYCgVe+Jj5b02POD4Oe5A3QlWDXDku7wnrjqO+mFYRyH
WQxmBFf0wGB96g3QsiVWucau1Pwwl8U9koCjsbx8lzCwtcciG8g2QenDrEXc
zxCPG7dWR/denub/qGzYFyTRA18BVE7zw94iBCqVOQh4Ol1Bd1vQ6vBLlc8+
UWxnXxjC5IMOnbaBDT1QFs5AoJ+lNVqOwigjW6NdNMGe462JYjvoI4Enoh5g
+DnlnxH2//BDvy2nRZxsK8sTTesIkbm2fSwv/PwO1de61rV+i/6v+KeboECH
DYcIfuRkgbCaXCowAk34X6z8K6KuwRgjkWXlK9xSg1+s87MlbijO+LmbOFPy
iE2X95o27sULTzt77+aANsohjTmDdbJjzGcJSFR9mbMxFkc+4R+yY562jv0/
wiCIYk15cU/dONK2T9TNczJUOZ6mNH2I7uIRw9hmYD/AS3SZQzgkfz8Bm+Vo
8P1jWQa0TTwH80WY9P/E4XkIljfhrrprHeOnG7YvxD+AL8FpCrNEYzdpnA6N
0yZueIn18A1u8a508Eh7/FgP0jCeJMLbOKbrvmyTRRHWGfI+R3uAEEjqxG4f
2QaI7cA3AlPxMZRDVdeJtcJt3uiREruAVi2gL4M2D8oEPFTs3mQlbdt517Tu
Pep4DzsvvSZK2seuJ0JwHAOIA0TR5wGOvDC277TosiHPgD0/yi0y4hYG4k6U
eFggntRvrgyFarL+iyz+4smBKfzyEhyN0VJpZjbPSmeY4Sjt0z/RjCWed/80
sNg5DSzq2/jH8/po/qdib5YE4b48f4w+FeY9sM7wUFTTHvYH/q78H/ZmQpLu
qupzQx9DO9ortD84Hle/brBzrWv9C/q/4p/dHA2PgYZFszgNmYqzaBYng4OL
uoBOnj37wZkFPy5dwWfrJTbHec+s5J4Uzn8CesMJp91zL1VcGUzengAdEQc6
wSP+ITNGdF+4gCiaHMsxFGwdydKgqWAEQqZr4O550jjcElVU1Zl+GzMMuiKg
S4O+D6raNy8KvK2OLHuCrmuWCdgPcWgDLc1jzD+K93nHdHOB494WRWaKAg5y
rbix2+epD5Zd8NA0Ng3BjLY1xFdwZQnR16WPmCDUJtbCBCN9k1e9LezcEfdv
i3o3uVWarvnpamzrhOs4eMfNU0R1umybrdrn6TD28A3A0X4GP0jEsyyx1r/D
PLjHhfs8uMs+UWdAmQRpCO7wa4qkR1MI6SsxYyPxSCN84cH8swUzhD1JAERw
CcBjMrdg/20owlDs8ow47KVC/BMCXYREoHsZ4n6WeFBiifbY4hlbMmeLpwz+
5cY8Mawt/tYcg2UDd342j7ChB3j4V/6MRKBfJ7qyz9YfcIxnjxVj2NNcX10Y
GyLa0TRB18MeQk0L5EUQhH9PIbwwWldWp8YR6Y8iazXR59YyxTPrr/U36i9N
JP5Ld/uv0P8V/4wLdJz5cwb/SC+SBTRYXcUDlV6SkyXfLGYWvL7yzIKF+MGW
OLkrSZ+fIPpBhnJgY5TZOqqGoB2Gbhg6AWhsXoCCnN57idzS9u6rQ+zzoZNm
JZOxMf80ap99xRimJmdjKAziyi9lnuwglMPwc1vSVJYnhiFY5zhCgS4KNgQz
E4xAH8S27/E9IPRjA5J/JOkDzcL/M8cXEbRE1IR+I81+vBoybBWOuysITSVJ
7Jp4aJo8MOzeVXduigvaJiYftFSVcdSG6xld/HABjq2UJZmJpg0EJUIwMzc4
pRucImIh4lWU6zptlsK2jgUeEAewXwgZ8ShCEdZpkh5dNmLIduiyIVX8mZuI
pZvybXCHdXyfDw9FuI/QAyHc5YDIBzwnMAy4tY405FTEPYqE96FaoC2nbDtN
H0wjn/OPDyav/UG6fMTRHontIPfgjtYIgdQBUHiBuBUibkWo3AaN26Zym+us
M/pjf19MW4vrnaCDpq5iD55pgM3Qw/2fERRx3Zf44F1ZVFmLrZ+jwyXaALEb
xJv4wddibeQ53qog3BMn9qSZOTJxYiz4TZEv7PxJdbStYwQ86EO+uSgwB8xC
6KOrrPxlY7auda1rfa3/K/4ZZWkHLRbMBGTaj5IkHxUO/ZyISS76nqrLy9jz
g+AHYc/pzIK107Lll1dBIK6vJkmNlRWcDKxtYxhQ1c5/libjtm8nEfDEYZiG
cQZn2O7FYBCA5rnPrVfZO0MBnNYKmQAsJPzgXnlwJP1iZaquRDfV2c4BzzMT
BnDjaIEfCG6eYEY1n1wUFoOHENKYdtBFYUo3NHmuA7SyNAbyBMiTIIvDPflY
EB7JydxmdDdt3sNJrdj5U0L49xGbqMYMw1Zmuzpc74C3tXtDkCX4KYIZEkVP
0JUaERFaiqPA8+1d7kAjyAy1FaXjBbM5yRv5u/LuA93+YzM8NuGZaPcUh0Iv
yKI4I0iVxkt5HLtx3rJTa9zCGvfLZGC6ss+zgMQDiiDuPrQkhycycvoqD4i3
Lbr2y4l7Qr9LXYibOqXNw2EADqMAMRJ+0OPNgyH6PYIrpnKHZwCxA6cAIQqS
u3E4jG8ChvKHEIVmqnBcA2HoCB1ATRXPf0e2cP6IflI3g++LIqki+BE48HwN
uZ9sLuTHj8VnDRdjOrLszRLXV+f5m2jJcl3It/krxPVlJemeto0/6h8a7Cw+
6ugzfM0/17rWP6B/iX9m503TbkbXBwX6UZdDIpCEpCApzoUe8aZF+vdffLi6
il/z9WsMP3hgAeXjzILXX84sOFccT0mc3MWtTt6nFmAk+Dwl+EwZyoHNST4K
2xk8M/SwBMcFOEjDXgS6m+NzanYKWUa7yZ1NxCT7acmmeTrSAyYb9r9MfwI8
N6pAM9aY1h7LPmDZ+wxLh3jrlKS62tbJh4uCh0Qg+xG+KBDrPo5zKg6BIg3q
Ap44ry6CKgcPNPM7koEwMpJlT5RV/B5VVZDlQBg5I5UUURDdUmLYKnRzgW4u
M+1Nzmaf693l+cY87y57o3vhY3wqui0uiHQV5RPEP+jmHe32XcX2Y9PxygY8
dcPqJjw2whMjPDaAOgPaIpnDUwR1FiOQkBzixDT3eZvHQj9OlkZ2iztkaidC
B76Oq6OgS+K+i0sKeCzB/HNjfXjmbsgTQU05ZdmuueYDH0z9MENL9NjSrymz
0XVBhSpuMJUjju5YYMJVZgILcPXAUk0v+36/0Lo6xbDWOZsDQfBQSjrWkEnT
IAwB23U5N9rVxFANEStKPaAMgToGmjg+aIgbEQLxf3mb5KuL40mLE61F/Asx
z4d2pZZ9jO4IjX73Dl7rWtf6Uf0b/JNfWiKdMy/PjUw145R+njZrsGCbAzs8
GHKhzZ6WzoCfL6Ku4wX/LJw/CH4opK2t47GVr18fvm9bd0EJwl1lGedSWvcx
PDiOT0NC6NQqzXzzkicNWoy1oGdajEE/h2eGnlQAinCUgUkYuucmAiVitGKe
2WlyxzvC4wMpmfMsO5xJhtv8bPp7adhritOx8ezNpCjeUlX3Ea2h3XaR8IN7
OM4wvBHMhMCL3SmIfPR1cu5YA7RlUGbhnmLKdtd4/q4gPBRGdoXhHd5Wh2Y+
fxo9RZeimYoMa5VuqVANl0jYZarxTAe+FW7SBjfpfVluH+0hwrYb/MID3XTF
Cc+34GUAXvjh6QasOmDZhhFIXwVjHS+1ZGm8OAAs64jvAUkE+7IQ1yF7ID+8
Lz1Z8I8mBroU6NOgTYIqAlIf7hx4piQhjywRUBcThmYBMY9t1ERL9FiVP01m
IhGoSZcNmIo9pnKCljTpNsfTEkUn0vSJLAuS1NmZM+eKaiwxLDWWs8dx7/F8
M/7WnOuZsJz/RVLNmqiAWBEdE9kWxh50lNDhwscqDDIfoGP4x4rljAhCZWlm
W904QAiEPjnoQ47jvNugKF3aA3mta13rD9S/wT/7C8/P6zeYRt6Rkal3704b
6n6lZnS9n6aOC7RJgb6bo3Vi6xfZxO4i+efVa7yJU//P+5lNr17toL9eWKyN
rCg2xKW+u5giNkiEcJzgcyw6u8qL3yynkvjNxgpO/glBJw3jPBwg+MnDPAm7
AWg6+ueXRaUS9EKO2ahyOi1ur83rtnn1KjsZp537xIXotiA/VH66EXwXLzEq
A057yunMcEboAJTlKUFPCHygQBe4CoYfUweMLTyAVZkDaRRo5iTTkWe7yixX
mWH7hXPH1sUVtm6OyEe8gQc6SD1wn390j3ekKJ8gBLopqj7Q7a+6MPm8CmME
eu6BZ5sYgZ6YQF855R9NAft/iHcpnutQGgFlBkMdel/aEm71/EgF9ySHUi8o
w9ihoU1gEFKEcHIL59sDs8QIgeJ+ZSaizseRoQfS6MfeQ4gMJakZsRIgHrnv
vbbdfaV/ZtySpI5wN+w6zglHS2XlsxdkSvc4auBrgac975ho0jREQdYm09Zm
WBpUw6XziK6mdXGZqR3zbZh2EB+iA4X5J4H5Bx29r4erMvkjlvBPCS1xvRl+
oChJdRHwqBuHmtaRqjaT5QaCcOX8J/8miROLan1cbqDtgKo2/9179AfpL00k
/kt3+6/QP8A/zZUVPDUAk8lbDCSn07TXMQIhIkLQcpbS7jfJjUvErXorq+MP
Lia0IfTiyBYDu59frgqMvZkXRvuqKo554XqoBf8cY/5Bpyxp7stBnJ9Km/NY
mhHPtBiGTgJGKdiNwzAE7c1xXl+8aF/CeJSWSdGzaXoiRl385pTuFtHDbxe1
mZLqByr9ktnx0hdZi+epuTo131hLll/4YsJonWUZ8L0n2P9TxP4fBD+IghAz
KNMgDl746PywmJoxgh+cnBPAMRdlEGfmPBAc3uUeyPLzG/ziPeXOkg2eeTAC
mbqYf566sP/nkQ73BdIWMfwsWgMRlLzAiz0/C4+WsQmGBiwZ4ZEGj/o6zWkJ
YPJBS8RaaLt01TnVQXy3/bZQfluo4LlO/Tm8rZY4ua8owRt/kxLr0RM9eqz1
wuhZ8+YY8W12brYYBmHo406ACwSiCppsxVygA5EJxBaQWEBsBoH+e9v9LVoT
5hjqAcc4F7vwIUIIpI7hpdwPIhdwDB9RnynY4UpBqASxGkRqEKq+86qXkyi4
pS7nTdst297AMd2xj0fmwUWjqBxvmhcoCCM1UbwhijcFkSrX9xtGBl9ErI0o
QjUEPOhmxLSH6ytxVH0I2vY53QPG6OYRl3W8xHeLyD6ZQHeta/3b+gf4Z4D4
B31/P2TmLCJT6wv+uTScfK1mdP2owUoSRJ4gWuhYITx4RZaAIUPniufPdy/j
/AGc5Jnihzqy3BzRDjpN4Vb/hzgQZhjiFGhB5HupBYq4Q5P1WFpR107WO69s
HVW9s7JzmDbVQld+g6d5U6/e17V9u6hts2GJz31LRvMzp+uVN/DaH3q1FX6+
ubVsxlEfhrHNce6JgtgFpC7iyBfCBlUOJFHgbR5eefcMJZ9jO+6eZH3zonc/
7xx8L2pGlTY5hmPRBoYfHHBJgDaOL7gIge7xjvnBJsFI3BSUH2j2lqxka+sG
rDhg2Yrh5650Ko1gt48siiNfxIqTWM8KFx6tMiYfYxsTna6C+eee5ICl3+NZ
cBAHbQ6xEBcPzMJTrhiWLs99IAyAOIx7JX0qpnnA3wRRANCGpFG8vCFIiBMT
9H9/Fx4y8zNu5ZBfnREc1y11lhFr8kozYQP4DbDt457YCIE0DbgtKbFkU0Q7
UisoNkDpwkuZA1MQT3P2YfmNosobDHWfaz5CR0nqwY4gBI3CDXy4KLLTyRYI
fngyEGtApge5AZtUh0HoxyUM+jSVgmXU2ziYuuHQA0duONg4nCIWuviLsDZi
bHcCLX/CDv0yCcJVXJg5+FiY6TjCt1QIgb6jU/h59eo0beDDHLprXev/QP8A
//RXVg+w/+fVZ/6fdTIz55OBklfTKEuD3iJfWoz4p3iDaN4k+uiIoZPGs+eH
T58OLgk/C3E8ZWFkW1441LRwzEs/wJk/qiqIk+ePiVTGnZqM21D2m+ohcz1s
qgW1Oc8V9mGh0Ye87lOn1jdDh8ak2tdzZCDUhOwAKqsWy1O7HS1bkCtB3N93
UjVlhqnF3dgT+vHFXZbAxV/iEIKfY4bxijMMTFW/ayftPy6HEYdCOwKtENR9
829mOtEV2xwjnl2uDGHy0aWAeN6++Xrv5psx+iXxpkS89RD06A1eHlGZIg2q
PA7PPVCd3BHvEIwi13nEdwFv44RtmxJPzEzLgOc+lMZAnQddFbuAkCGoUyTh
Nm+Hpmgz1EOmdo+lHTM0uzQFLvti2YcCH0hiIE+BIoMNHQcRSUEMQ5fnOpGG
ySqzLDZlGu4oy09sY30PGPkjfgsk2yDrAyEO3tEVHzkHwtqRpAviHm4aiQgZ
Xcs0TbinaHFV2OGDsEftBY0PNF5QboLMDkLj1Q7zL9S6uESV1RnqbbZ+ipgH
ESNasvQzmuLUCUNlNziSI0Q7CiOe1KaxgRpxnQlkOuwO+kEpsknTdst1NN0C
CJEWAPDCycbBnxJl+ylCbCZOtNWNQ3Q/5fikWh8XZu6Bqn52FKyFPefPT8+c
6Iu/Rtpb8ut/7QW61v+B/gH+aSwv75zm/7w+/SK/e1+W9eJFB33HryQOh2MV
EdBiwVxIVoopEHqkbhL5m0SFIEoEkSaICDp0ZRZU2Xh5GTGdGba7JAh1xMkd
WXYmy82lmYkw2mdvXrTgVx6xKRNORdwh8X874+QTmatbrmHcu5/1zfOeycch
iQfo0L38gI6LpKazQ4eWrHbrPf8MoboHzT1ojaDWhnwBYoEBbulC01YR6rBs
Q45zynMdIGM79uiGM+CH45oQaymu80Dow84WcfCMOVy63KZzkAhALYHr3XZy
sJuBEXochoZr5+xkJ8Q/bP184f8hVso330zvUeEBAx4w4T4Nbr/Fbii6oc60
drmuCd8HwgA2nueIoGZp2ibD0EOGHqwr8uSaLbZ9hPYQgZwyi4vaEAgpUhjq
OM79t/zkurhIkVbXJeW3fLw/CP943mNpHLdL0lRAWwVNGXdPkiVhXZ5l2yai
AIYfXGVWxXZDELunaSxv4JgFuwKiHsh3QLEDhCR8R1t4aO8JKjNRC0Rt7CS0
TLD/B0HyHUmVqwGJFTOP1gc6P2i3QO3GLiDRn8c/QGZBU6R1BDx01YCu7NPk
HXTcPvyVwevzpHhGm8oCWjvoHKB14McyPYh+LAomDPjU5Zx1Z9sLxyGy4fai
7YAfE8Lc3P+yTcHX4vqrktRIUT5U1ciixcL+D+3QLxPHkxKnOurGAeKfD92K
XIvCzB2052eH1EeLqPfHmlbSFifPV5euab3Wtf46/QP8A2QK0Ojp05PnL07z
cxYRnBcvcGTnB7STo+ECsS/7JSpx1XzuJhSZ0OZAnwcDPvT50OZC9pwi+k/F
sKfYm3nuVo0XaPL8DY6nRLdEf2RvvyVZ0GhrBRHzhKAShUYMO1IaISijP9WX
l48+us7OCR2aUxpPyxaf+yqQ7EIRIRCyHpRqkE6fBDeqpxhGUeVpuhrD2EZG
09fXFelPX4RuanDdM1EICFrptmDvgRIe67A7BZk8DpLPJ4uZqn7PJBeDTg72
SjAr43zvGQIh9Bvf/OwMXqq0wdSMeBYgHiVuvBwh+HnEhic8eMKFRyyQIkKw
4tVo+irD3GFZBwjVmJZtuvHsEeNUTYluaCAE4nuORUFcBYb2EOEQ1zmjqktf
r892jNBqyhzO+ja0wdjBfbMRCCF2ui3e4TpmkhB2+yDyMTSw3RQmEf88cUyf
+oFVPBa0QTIA2RAIvu+mInFHm2enu9zCPqd0YhqRwa8myLJAMCIc1fHC/6Px
YPhBFKTaBKnt16YAUZk1Nn/Cl+Cp7iIFCGXAFZ4d1mQqpxwtcHXAUp2Tf/t6
PcTgD7hSkGhBaf7IP2qSf37Q/yOOBNTlPOIfDxyFSPj5yD/H+6btL+eefCF+
qCHNjtUNshl1n3TS9v7QYfTszbgo3pCX9tCHZNHk6rSkYh/vsyx3drBvvPr0
DP5B90H/aAjsL00k/kt3+6/Qv8E/teVlhECDp09xIRi6oD97ji7rl03L+VqT
Eh3XyONJqSoSfnTkUgWdu1C8BV0ujIUwF8OBGPZFMBJgBPrzZKr43ON0FOpp
2M7BKA+jDPTj0ApCGR236cJ1huv61z6eAMnQ4fHnoUNtSO4oG7e2nckjfwkS
dcg0IINYKAOhwPCsfr5fiaav8NxzSRSId4nbgtEjNaxY4JkTnm2QLXdypyXn
CymiVnMj6J3l49DLw6QCh1U4QgiUw/0eO1sHmH8Y2hHXipNJxG4QuUHogjVh
gSZrMrUjYqlw683+AwYs8WFFiA1RkMKNEYhvON3EmjK1pjinaI6qKdMNTeJl
inhXIdabN9ZbxJsysRJa/FWWSmmqNX27rWu2qJoC27knDuOYmq4Bxi6em4YQ
SFsDRRbuSPc49gl6d8o0OYC+jo3gRu8oKg/03SfOMSWxwyoecmsn/PoRr7hL
8LyEcOudO7keqK4F2uoaKMsgTZ/wAwOqsMWU7fK12AWkcOL8H2QL5w9befU8
qy/Etoy5zmNkp8eBWWcL9hHzSFQg05yaRAkIhz4VXTpE5CMwYc4U20FsA6H5
nA3RuV22aCxSgsyA3T5qK4YfhREkGuBKf2jylzDgUxUyxm5j43CyiH8hvr5L
qz5gbt+n92+/+17LULY7L0mP1E3sP0EUYTvAS9Peov790gdZFO9IsyNJ+hJJ
R5cVP1gUJzvK6j5CNfMYZ/7g6Wlob8vjb+VsD1ZXZ6c9Xd+e9nRdWzv1/V5+
sk+2p8hu/3DA8lrX+g9FnKXfvVNXFLqa91ZW+israFldXv7xF9wr0qGPkEZM
Br/Up/6f4QNo3YXsTdgVwtGiiaIcTqQwFWEvUP6MRjq2otnX3wxP/dFZIDT2
/fiOfUdc744ociJJAjJh+EgVt9k74cBxKQW9IuxVYFaFWQnGiIUQEblGiT46
B35IgHz7vqiNDB1+/eLmtMZRNHi79vCuO3GwlTj0R6ferZ7DmtVdZN9YjqEo
hN0jBKN6T3awZIJnLnjpg1db8NyFJ6er0jgleCHEP6ZaYHM3HYFWBnaKsE/6
f/YzMIpAc3MvgyCHZwOJF2SLCqwgSP0g9gBFXCFubRDLpZuIf5gk/4iwaYKg
Qis7QXihgOFH0RltYjlAPEsSL9LEalymAKkc7j3dUZVKxt62dW9sn80c8znB
8t2WFIR+nPOjrYKhheHHQPp/5Gm4ye+yLEO++wi9QTyAvoCr5FToUAgStyRZ
cXL6wlV4G2itR7qUSGvNXyCophWVdVXrWtX5BOFdYWQsCO1wvdhlsc4t0YQt
lnyXp8EJP2LzafEXgh+q4Ce4J5imEW8DhyMlITwKRBJEZ4lNJm8kkIJUDUoD
qE2gNuIHCIHEio9PpIm7HM2JyILHxcrdmDblLpA4cDvH74jCqjJ4XY5kX6jE
UTCZHptYDTwZMHg/2qRIloyqy3lzv+2cj2++Sdyjtx9xpk+4R4/ZJ2IjiNBB
k58NM/xgXV6cIZawzk6HfyGzzjEOqc9vtf5RwmhLXpyoyYlmyLQdBCTfK/D8
WkzzkOc6Fm7hcb3Cb5d4cjypBxrzit370h9/G8u/S5TeRHKy7EAQrn7rKY3l
lf7q0/ni6//6zcfOaS9eXtxz7s8Jc9vK5gHGrh2wjsDSg0t+wa51rd+kfwZ+
foV6GeqkzoQxnwyBycnIlwKadyF/c+gnsPMHYQ/+PW4kCDMx5p8C84sXcTXs
4clWCqI5SBYgnYdUGn5JIQnDVuMH8KRvRQHPyVJVQFmE5zatoxsOQjkD/TJM
63BQg4MK7GdhiPjHvZtsrqx0Vlf3F8XvHwpgnz8ff+MEaEpqbAW9q2bebFg2
6xZHyaCPXeimj6LJc1xjcRTPlL/Bbt+XHS1b4Lkbw89rP7zw4LoqZfpjCEzs
M+gLHlsn4psXotBOwRBRUArvdts3L760aznmI0Q7ijCoE6BJgSYBygjI/Ngd
RNzaJJ7kb7zcuUeFx2yMQLoQaIOg9GL/j+AySTLrlDybMxaKQa4AlQbUWmxK
NTx5c/jozdR5cOjG+bSnfbBvizN3ZSVJBAe8NGVMQeoSdv6II8B27NB1DZZ1
gBBIHMQlZrIYfrME3U2wtri+Jj+0vaz3r5pCq8bAstZV2Jbne/J7PM1dnoHt
qrE2KnTrx7v4dV6VKmgyJAOWbMJWzFnyGVO6S+X/BPhhGAZJ4laTeLhDLE2I
lRGx3CMeE/dSxOOOSAEKHWhMoLOAzgoaM/5RqgKOEAe53nEyTMVYQE5xRcdZ
HQBNAFQ+kG+CxA6Ii76zUSq7xuB1WMIxV3LCl2HyYYtnDN5PmDMqCvuliYiq
mCVWPLffVh4yJ0s8WObDEhfkNpBaQGw441k0c1AQactLc/3gtGe4azH86/By
/COINBD8IOzBBelT0idDDgtGv7zgK7CsewIPBlHZYqBMHN8gCM4qd9io23Bv
CpPtqdPzfHPruXvrqcP9xPBd9CQzB3qrT6fPnp22v0D2/PnF4ceb4uf7ys6J
cYwz9DcOwYWWE7AP4JztXutaf4L+VebpLpoCnTa1OE0HutQrcDgci5BoZ2iT
BgtGPJwFfSyCA+F+jOj5yLTnkQBHvnB0TAbHUpgIcfwr9VkvQXvZEtzzZSFR
hUILKsjqUCxB5qcjEFWf5vn2pGk85lLXAcM26Lu4XcwLh34tYNs6yCehW8D+
n/3Ke/9PCCqOHs44Is+Bq3tPnx48e3b49Bk6+22flzSuCcp0EcX31/lqD8uc
jTEiAcQ/BKtxVzx5ooenDnjhxvDzbINsOZj4LAtalXCQCBR1T7L+43IQav7j
inuctbbCdPU2zwrSLVDFQZcBfQ4vEQLJgyDaRNfiLF064GgORFZ8/UVXYfUW
eS124bjM19diaaqorvUMvT1jf2rofTZvi0ZvcHkHEhlmHo0edAZsq2uwsg5L
6ycesp4oBBDEk0zhBj96S5jgbo6FQVwCJkviibHCAHA2cE9viqpE09aZpm22
bcx1HnA3Djn2faYJx0QY9izbVeZ4auzNyl2uOpjjI/MlvxdOfcfJrfMqiIKo
ghaF9817/EvJhLP6b/SIhwfEChAvDm+8mN54NiJWqgRxY6knkpP8Y8bws+Af
pR6HwzhCPESeIqyzlDOhGR9wtR+0IWwIgRQe7ALinZeYRGGVaZwWnbeNjMZt
U1g/rcegKLQliYWI1cidt61HzKNlHqzwQYN20gVKB0jNIPiqaQDNFBSEm9Lc
RNfFaeeOY7KcnOxzjuhFUf5mh9JPxXZnJOmBto27RtvfvwIen7oHXw2IO1sM
Y4/vxqWUpw7DAnYYKlL4N1/InNFvDTbTEK1C/olOv2w0PdHrF6eaxFH4jJf+
ROjrv42+/qtP0S3Pzupq9zIFI/G6tDHTIfghE67RNwB9e33HsInecW16XlPO
a13rd+uf5J/OoiPQaVOLt6dNLRbtei6pRmy9k6bulOjzGvO4wTqqM/Nmwicl
jtN0aLAxAk1FOPlnTwg9HhSZu953H56rDavcHWfiOFyBfBfqA2gPod2DBjov
5SEVGF29aP1rMR1NYQT3CtZ3wDQCyx52Rhv6sGpWv/FaXMM4oh2EQFkY5vDg
VBz88ozT+vzHIZS15eXWykr9Z8QNzxRFnWXbB4KtQ3kKiPXMTW77nmz6WA/L
FpwF9MRwmvyDkODTZ6mTTl3ebar6Lc2QrRNB5GMsb8nDFoZmcMo/MdAu+Cd7
yj9C8j1RhU2mfMDVHYss2Ocj2wCpE9BjrhZoks86LMmyFW1raN45RFu2z8E+
A8v4WN89nXHAYHY+8I8W8Y8R2zMqrFJgiXJ891U1RKbUhkkQQtcAghtmmNts
x4izMeG69tGSZRu8k8U/bI6qLtN1LYahQ9c1ERF9uic8/1AUm4vjF7q8/goF
CaJJ3D4iluDGc7j9Bu68gduv928+r5HVjreWhlI1qAyYfDQmUBlx/EsoAyYX
IxxF2GAqpwITPtQINbVBbAiEFG6cBcS52MXwLTX2hvLzx7K+ZSSI5eit162H
tCPVBmjdoPPipcoJMgsIzwrecrfKovi2onyo6+FGgpYpxhjcoasO6PcX2Sgv
UJbldnXbOGq28CC5SARCL6W7wPSwdUWObcOtJBRJsmCwBoYazhxT5/BtgsD7
2cr4PmvXm4dkE8rb0ETnmQG02lCtQO6Ct1q5paXs0tJF1vygzRg301W0jw3k
+/OR34AgufTMwNk5/uNqEf/SROK/dLf/Cv2T/DPHNd0vT3N6cVLf+seK+Mur
sPW2HlnvJimdBKUWXkO/aW++7QfWjlI07AVqcnAVWJ0NOcZxmPLpE00Zvbe3
kYIYAh50UtqB7g70EAW1oFyAdHhy0XbNFxHb1RVFT1QV7PlB8GOdgnUCpiFo
m/DMqjFXfRuD2NY8jygoBNXAUXFzN2mu+3/iDlxEdFOD7RwIA8fSBBCULMGq
3hYM7kr270oORH7s1efYp+i0/8Wz5BGLKuHQZFya9IYydjoyga7qcUz7ok2Q
h0AdJ+NfSRz/kngBcRHSGq9EEdYZsj5bNePqsP8BLdmqA7r0sxxUcSyjqW8j
4NkgY1iLMJbzCKzj07xfOqPF5o5FYpArceRLowetDlbWYGkNHr0de8kzfpg0
P3mBs+zsUDR5mr5KNzbpxgZVW7rIkeG426LoXJ4jA5dVHLtU/OeTzxH6Jgii
T9wBxD83n2P4ufsO7rw7ufmyRRBVdJp4UEG0gxBIrsWG4EckP3X+IK3xSwzZ
gKPFPjfZJg6BIQrCCedOHHBkyP6LWavf0jtmhiEe8VQgMWGfj2YTtB68VDqx
/4d/VtNIliuzQCBZfh8xj6aFw16K0qE4cU4OMy/QE8Un4uQ+P1iVZobaLk6c
dn7gnxMwjUF7TuUZFlVT5dgn6HuhTOOpKzhhvoEpSJMn+efzLEJn1RrY8eQg
0YQSyT8ddJ7pQK0M2eTJz+fJhbxpPuKf1qGBfH/e9/yDvgeeCThaB39eO/Jr
Xetz/Xv801pefj8O491nNd3koNIr1DWcKYRAA//afoQCMSrEqRClTLbWvljH
nNG7287E0af+nw46O9WhlIXE1tD9U/ZkIcQ/wvChooiDXwv/j2UXjH3Q1GBJ
K9OkHMaSx1L329shezdsbQXRjz9x6xcUVVukm2osxzbXPSWe+4i3cWI9S1AL
xHqOZdlhGHpr8sz5r0KKIqsytD2uZYYQSObHbh95ACc/8+3A0JxeodZ4RYqg
RpP06NIhQzqkiXsUwWdxIpbTI8uUDb2x4xCTj588g28tJtrPQNfGl2wKtchk
9bj8mUgCMgUoVNgevzp88GLnzrPqxvGxl3ziFslO9ulU17xMduzpbtSEkX30
v9OSzTARweq6oKmfj0C2mss7CoYPErGTTPQkHZqfP0/2O+qurMQJokvcAuIh
EKtw69XC/wM3XsyJ5TJB0NlNFn+XJzoWSAEZXwxs/oTG+ph0RBU1GPI+V3sk
NGOfj4TsNsA3AEv5+9vm0IU9tmws1GKHD0Ig1QZeyqwg1ANbdnaRPnszy/WV
+KGmMNZFICSM9/ihBtPxzYPM9TXF8QnOvqvhMvll9+6Sa6SsHhiG2AVkP8aG
WIiMoJ1/QKjqCtu6h8evxHHka9EwSlfG/ROkEeBtfOYktJfMvm1X4jiMgKcF
FXS2QfCDbrtykAyNf+Z91qfajHETTVl5T43ON+QwZC/5PfAewMYQLPnBdS3Y
tf50/Xv801tZOV70tHn37queNt8cB3YF1W2ve643Q/fbbdfbsuWMdhn6mHqj
hu7LvBmIL/J/2lBtQKkA6eg8gE5ZP2tPkJj2Os87kiSwA0HXBkMP9D3cLkae
B2EI36EroxZN2qnLbqClIvrbshPX1Vnce8fSYdq2mdYeseKgKIsUVWlNnj7/
yZ+LKq8zNF22ccJFF1kH8G3AMR8yNGf4Gd6yU2+Y8a9/z/OF5LmqYXvsPDq9
fQ2QMIPA1L5/yj94Q7Qqg9nlcCd8AQjFIBTBraX6jccZ4r7H1O/bp/vOw0PH
wYF1b6xrtaTJ86fQfrUbfVkGww8G1zF23Jl3cPrWrXsVAWMuYgIy9OCLZ9nr
m1vjSByyGSjnoJqDSgqKiIIuu/UPaq2sBMghL7vYBfQIiBW48QwbsbJPPKwQ
Nyn0Mo3VZHC2GdwBkzukszvr9M8QbY1fpojqdGmPqRiz1UdszQlbdcCQ775l
X32vfpYo3Cpd2OHIpwINznmWmEBsBIEWOPIj9KdvPYthizI30mxPHhnT+b3/
LNtdFcUnygpmV8MA27Pg0erWDFEQQiBdD8fOkGm7uP5LEDkfktcVWYapy3Xs
ifzY4YOwR53Dc3hlUez8YRg+G2FmSuucNevWwI0QKA8pREElyKCbrMi+f6P2
1ZTZn6dQUZRqy6tT7QCHBx0zcKJlH8zlvT9vEMu1rvWV/j3+aa+sTJ4+ex//
enca/3o/qP3ipQ0/Jepqzho26vbAjid5HEGnI3Q7loZYeOrfbDl+8JW/EM2Y
ZzkavK2ROHYsz+LKL3QfKk1j+GE5Lu2R+FtEkVVpqg5DM2BohnR1D/14qadz
PUFZpqxtDmz72OezSN/0LsJYu4eq8mmUYo2SodLKdEabyeoz2UMma0Bntomb
VkkiocjnNdWqttHQ1uuqUlmaTF72LdCteX5gB2Equm6a98A2w62eb9zP3n3U
ffhk+ujRXM4FBQ9kHJCwPz7LkLF6BgEEPwWoV6Fbh+0qdIq4xVPRP7liF83y
0tL26mqQIMoEsUfcBuI+6Qh6OCfutYibk/dfnDVqZp2Wv8k1KAo1Xatv6O0a
ejua2unl+B03uy6oUsVtmqRHFXcogtrVdgZw5lWPw53xBIDsp4jCrdEEbaZ4
hy2bI+xhyw+Ykj0q7ycUzVENYX5w+8M/0bqPM6XNY3geOVn1Te+oM5LMUJbf
QyZJDQSR+gVflqatMYxNjgN7gcQBXAUmCgDfDSzLztcrW7IGR8Xi6W6gsw06
w4QnW77+5kb9F8IPkPVfwaIo0ZTmB8rqRNuY6Spjba6vDJdEv3S717rWT9G/
xz8l8jS+v5ho/Jqc6PdhqN/Pc/5cULqIypzRo/PSZsvp3XZtDTa9PZezav0V
26KbS0x7g+Pe5vn2+IF9fmDK9Y6Y9ouebP8/JY5mFIWGobeHEGjjBJOP8xgn
/2ibQ1HkM6/F2npqnZJfpxbW1k9/z/f7RZEIoiCEPeJojL91lUADw1rg+4en
/p8dnLhF3IncedR+tDxbXoGVZdCKQCMElQAQCIneT1mxVja2xpEMlBD2tGHY
hZ0WDKu4UXYlcnRpBvug5spKe3V14QVqEzeGxM0ecaNEEPOnn3XCFMcz6mrL
OBhbx4f2GY4VWidHpuH0yttdSJFNaesVfau+tp5lsXf4AhBJQCIFqQzEUux5
+3Gtc0oIeGiCDjIKt/6O+XMcU0xnXhgZKcu44gDBj+MIG+JY9A9d9e0/MNV5
gTI/WOX5S+zNM7a4UTEE+vbIris0cn7xJ5qmRje0WZYh27bHto1Z1l2G4ZvF
Y6aUzlowobMNOsPYSmZT+r/IwHEneP6sIFIRx+vSWE0SKonciT+xDSz8tYnE
f+lu/xX69/gHyNN4Z3V18uwZzvZBFIQMPXj2rP/DHaGvJkNcY8kZ0KnJkjMa
Er/QM0zVp+nmImIepqPBsFYo2h9KCPl/EN8fRZyjyNe0jb5he2Ic7CMWUle7
0tTZ8zV+umjGFMfTFUanyhLO3TIOgbiXufe4/2QZ0Kf16TIYpGCQYApS8kH6
3gVkq7m29sLpj/yz24ZRFboZKIcOfuifjr47XbIZwvzp00UzhNHn3xpBIKIs
1U3DieMQO808i1GbJ2DbP9F3r5jkLE1EtbWKebhtn+4659PbT/MPXvcR9iiU
uOwOmVyJKUj4pzoVWBslQXggL+Cgs2WCp44is85wsyBNEySpbzY8NCWVW11b
fObJQqAI4RJE8hCMTT/LDFxX5KjqMk1bo2oqF0mQU3ilP/6OrnWt/wf9k/yD
1FxeXpzG90nbWV2t/bLK7mv91cIIFE5JkwVZpizLVBD5CMNXd6FcQUxHmevt
iGL78jyu/CLuZO7e7zx+fLyyjMnHKAOjFHRiUH3CP5ay0933xyBTgFoNug3o
13F/70YCct5R8OKbjue5kcidQv5hufgIqizI4QF2paWlxvJyZ2WltbxS+Kom
WpLIapvbiHbcZLhwkTHlIYvmzDuX62y8kDgS1NbKtt2h6+TAC3BzNXr/TXuJ
cviUARot7jmg0eHOkwiBxNIrvPx/IYY9yw90Jal9dR1n/uDxExPc6lDXBUUJ
eP7umc/ShaS+jjV54C1BtAnJNmRakK5DogRfVmyxzHsc+zmT1H6XpkU6dDm4
Q9oOD7av3RTX+pv0r/LPQvmlpfLSUvrJ5fpa/DMSxjqywlRZO1bVThTlg9+9
O3+0uJ4gfyvC84Z+y9YRAnHcbd7WQBDaI4jozVvl+/d2VAKMPQiB9KT/R8H7
GP/Spy32msu7E0IIlIFSDqpZqMQh5x9HLKWLppaV2kJEPr3u8nj32XT6fG/8
rNdfwVPtvitZuqBrDRxz8HzS8MUHsHGM+Ocq12hFLm3qd1zH88WIrjuvcg/X
tlfo8JwNL1lkwyUDRiCFCsfC/lixN6v8YE+anisruFhe2wZNA+RFEEbOyNVZ
yFHQRXZdRQgj8hlAcQTlIZS6kEUIlIXTMXgs8y7fRc4iCWL7MB3vW2LaO1zv
hOsZn7Pez1A1uHZUY572hj0R4zlBJyKY/6RsrWtd69fr3+afH9FfHXVlbabF
qYGqdnxajTLEVbeai3WdvdZvEd2SYzkqqzbDE4P5qX2T4o9QvFElHyf/qAWg
5OH8Zy5t98P6hqzFVnVt9ra2dsOB/RgiH/e231q50CBapHxDkMs9GA2fwslr
gHekvdk/eNnrr0Lnmx97pm1Dmipo6j3r5OgL/w8iIsP23mXftcDvVRXzllHf
AycIpaIAd18XHq11V+jHz1nwggVaAza1Fvt/RBKg0f/QfDamI8d2lXlbHWFk
JE5MJamZOD4WBLcZtm9GrNwNU3SyWYHYNuR3oTKG2h5UEQg1IVXAJIjgZ4e/
CdIQKOKgTGKTx/CPZ++ArcXfmoljCFBBngVZBiRnlDz+TO2XGDDikuQj+zgG
CCSwf41A1/o7dM0//72iTUVhT1c7NDWOzJXZL+mSKox2lNUjhD14dPXh6fRq
wwjfmV7rz5Q46DTUEo6dCi0SYiYT7EyGnc4yYxmEPchEzBMudZf29mO9uTKo
1afM5oIdMY+tumEpOnSpi3ZUCKfYwdDtdnv55BjBDwXBF2lUgLfj6XMY8r+3
n7G0Il/Vd3fss4/5P2Twa19VvnSloTDoVxVz5kF3Ew4DZCft2y9T99/UHq8N
V6gnq1Qc+UK2cP7w+D80Dv5Xi25NM50FjrvG9TY5njpro/T99RH/RPZcJYh0
IbsD5TFUd6Hah8LC/0PT1LnOI0kQY48mj1tAawt4EIY8DuKvGpcyLA3e1lya
xIWf6ippFVDkQfrLArntGAVaLJgJSeZRkuOh1eQDGZ4T9EfqL72l/Ut3+6/Q
Nf/8LGmLUXMnbxuWrf3Sd1ZL9VSIfLbBPoKNXXChZQ9Pz/mZYnvyksyOtoOZ
x/F+dKPjBHfo0P3oPO1r/SrpSlHHqLwF/QhMhfWysF4RVMqcXI4eiXMoA9Za
m/rmy87YC8n9aqnncrPYUkVuLHZ3ie5+JU6tKwtUFcIqFolAa7P5y2z6PhQY
33ou3x9BCKTExe8D82jfOj607B0YtvdUlaYwdGmPA9/rVmRTumbVPt3zwAlC
oBtPg7efp+6+LD141Xn4YlciA2QiCYKfYwbzAnMj/h4tyr7Sx/4aJBACDaCw
jbuEpYsQjo43GYY+fwNkEVBnQV8GQxX0FYxACIckX2V4cTZH4hjgFPom7v2F
TNfGFIQQ6FO5Ws7Anj96EI4dRsKz0I/s/DBDhTYbDoSk2weRj4Y0FeafE9Fh
9Zufn2td68/RNf/8uKQRt7GRduzWPAc9Hwx8MPQc9px7ZzjqYy1F9cC4Axtz
8J6A/xj8c/DtwWYXfmabDp6/Is3u6nqng4c2FzMdAOMQ4h+ERj9xW9daiCnc
5clAqASRGoQqEHzCI1zPRBgEUQSE305MlsfdplbafdAOwyQJJxkAZJJ2jV8u
MJOJ52bruTuwVVGmRobSga164qgcn0PUd147HlL8zwXFNVWHbhixzAOmsUtF
10t4Oxk/S8XufjHG9wsJAlFRJCVLFxT5qrLUUBbrskxRGLriSF9xLKzIpfXt
hm1vuHG47zo+IJb8xFKYeBJnc/Y43H1kbM4ug/GvhW+tGfVmzRgcOlNHWyWI
VCFegdii/muzZmIah7yNY2kY1BnExmCokPyTJ8fkfe7/oZvKXO9EmsTAg8jH
NATzCIzboG1gd5AgiCe5GFN6T28zMgulIZmDTB6yaJmCq5cKDtPUeZ0JUwE5
APpT/48UZoK93Pc+P9e61h+ia/75QfHdFn0t6RzX/bAThlkUDiMwD8LEe9K3
DUqfrunJiHIjbQ/P2PSSmZ5R0t8fbPYoldKb0OYTePnqChNavxbiH0l6qGmR
LVlPMAKd+n/GOP4ljF5g+NC/K2U+rW9Vjd2moXX11nyfao2eZQnHfAWItSDT
g8yATaKFdxYNPajlpqzctEOexXfiihzOzThTqozf3Ml4j7pRmKFVcqSl8Udk
tgUD63b+7Ke9V7Cuzo3NDexL9AzA2wdvF9wIhM5ceV1UekCJPGEVXsoGFP2c
aT3AjWUsA5qu/UqY7jaXoMY684mfiusJCAIRUSSJDD04d/3vSLDlE0fD8kxS
XS7oGlV9q65tVIm7duKWk0Zv0OhNKq22Tjnb9/W3y5bTbpQNvo41NHJGx5uR
PZd/2+6q4Zg4Q9/l2MYiH07+UWcx+SBTpQEREX/zsxehW2pcz1iSwDEvfRfz
D7IF/6CPHN9/iNZxNZ3hWRAxTxXKDag1oFrFUwhzSbhiklArtj4q0U+2OaQL
SPox/+dIdF0Fdq2/Rdf88y1dMOqqTG1ZegXvySAKBynymoWWMTgKwHhz9hlp
BMvS/K5ugHMltkjyQWee+N6cPRzQW5W3Kf8KOa3+inPqPxXbnUWQIy/O8Ojq
CfYCIcPBrx7Ii+cNHrK9Aw8VAnQI0vFyk3LO+r9GbHdGnNpWlKbKylxenPyU
15TEw7payTLqOfZ3Nw6nG4cTx/QnuMLovB5PhoFHYQKVFdQ2WJVKaW4L1W9n
xTcU3aB6EFNtx6SNoKYGqhJOTP1aiH9MzdTmrPXB/5PFH6STCEw9hx30p+/s
gDsvS+8YW+DaBf/Td/FXtOobRvc1Y/slpZ0aGs7YYcU21wzPpbsvFfM1A9Ct
wLQd0c1765reC1E1Fr5zFKP++GG5rEShgDQRlaUS0mRcHAld4RWYsglLfpUC
/N8rc0rlKOg2KgZX1ego6tGPi99T1TWGsct1TBECySI483mR/CxwA9P0WZ8l
mrHIcQ0FwQN5Do+N03ew6Vo4HIagiOXomTJGb9+TxP6lUhuaPej0cNuoRgUP
Irx6B8hmkjIs0Y86bBjzMQUhm/Chx7l2/lzrb9E1//ygNLmwrV/yw04cjjPk
bTu6ciVxXfDEPf+s7wfin8xA86n/Z++IO9ln72zT2oXXSfcSHtLx7t2V59R/
Ko6vgIvf8xN1A48c0nXx9Gr0Iz/0zW7/beVLsK/BFg1iTEiyIcWGBAsiTPD9
12czQbguK4w1LRytw1OTBqD94dCHMODVVIvW3YEbDrbIkiUfTtw9dM4uXbL0
qdYYOaZwV6AEuQHUVtA6QecE2qZNkPQK8gFpI2I+yFsOS6Z5UbuTljaD2joO
SYi+8pfI425dOWobFL3HPYRAMTiIwwGCny3oO3bK2kIYrcO27HFsZ+BrsK4q
zq0PVi3P1tNvWR0Kf0IVHFJ4h+/Y05eU4dc5wwzVDt+C+GfyXHb4RgvrRmxr
2v2Xsv4Kt7YfXv+RA/Lfi8KvseRTngaERhCZsAn+lcHjNE2doW+zrXs85zF/
E/gu4NoPmKbh12sybE2OeyAMHyG6Rh8whNmKHIYfnhc35bYWLb6BJwWJKpS7
0B5Arw+9LrTQj4h/vNtXHMRcD681E5RBjjYtM45rzOM6c15mDNLUH3jHv1B/
bxbx37vnf76u+ecHpcmHP/X/ZMnMjTjO5Nxzjj+DDW9WlOgoq3PjCDYOyHmb
/V3GcEDrVd9Vo8+3NHdh/f2c1jdvftAFxHKlON4Coh1RrCtODSSpoSje5for
33nK8hvdGi/IURZFhpbI3OWb2ixNCVIcCF8llVGX3bB3Qpu7Sfc4tTG8RGYI
d6sgze0iZjOPsdvKdoAHCph2McX9iOTpuLHXdB3vI/IJk6HH8Omo0wPL8Oov
TWGVWcI9xD8ykn8Q/Lw2GDkhDy8dkLcSmlHGBY1NaDugaTooqQYJfFdeBPFX
x0PstytTW/pK7LXLQ4vEWakcK51zH7Ttw9IDLfuV20ZLBNiFJLecZhdT9GT4
wxONW9xwS1M6sC6/Cr1mNGiCOUsCbBmgJZV38oYxEUs+29AbboyhHvHMIHHD
S9XJWwO81mB7IT9Y5m0/Z1xugNp/oE6X3+19sx5tnVtiyff5OpBYQGYHuQMv
JVbMQv+GKKoKXdtiGLaZxj5dt8jROkM0U5lhrbE3thHwCILHwhAI/Icc9y5F
h+OG1oLZ3XXFjiIlnF9d70EbWQsa6McExJy1H6q/qIXWugnKdpLSjq0Xt97+
yEtd61r/sa755weFLlsGnP/T8MNOFN+2H8fgKART90HX1Mp+uqYjwguUJMme
qjIzdMGWKr4qld+Ucq/y4acx+yMMP4s59WtrX/BPuKXNTa0VcNbBVQNX8eCi
5yvmRhJRENdXZHtyDPv3xmI+fKl9zQux1TWJdUfpmindU/nmrsi+zdHVIcYC
10efAD90/mAIc9W3uZP0HxXDUI1CPQK1wPFFx0kIoy1V7QgBj/0Ypy25yMxt
6ww7guSlq0+YUubT5kHHDYchHJ3EoccY2bsP/ca607/yy64zC0zBkCc7lmhB
aQaNDdZtFm7EK8gHlb2kfpzxQNMDHRe0LUcVzSjNjDrQjTm6PH2tezzxY6lm
VWt7YXa/tm+9dgZeWr13lYzXXgczGxO0ipJ+QzpoSLargkaelTtN20D8E2qo
bz82Lb9OvGH26ULgyICrAI4U6AJ4yziUoh95n7W+pCl6LN1YYAepF5RBUIWx
yf0g2gCO8U8pMM/lWdvbgtmBFEBBVhWpTk7kX69GF/d5Ggw/ig1QeUDtAdUm
yJ34N7zvzplhWDs8z1wYBHEUxBHgb/0pb/zKohoKdHOVaW+zHD2WvUM3f6y/
MKT0zrrDv+NLQrwE+RqUa1BB8JOGZGD3KkPrrnWtf0PX/PODkoRdqkzQ2Ejb
d6ruQ1z/5T3pu6YtcyenSH55bnGnhf6iJNpUpLbVDtcjn/uxb+Oxx3SfnFO/
TsLPOrx9h+Nf70e1Rrs6BDxt8PTBP4TAAPxd8Nbgom3uLqgV2uaatMCz7Cq8
oAuBPgLawIHCvSu09iHKXPCPONlSVsba9rF+G8850raOznwpQ9HtGsVDUElC
JwsDZGnYjkHzIgjE3EiI4h11A2crOcmyNTeJQLZDMI5AWb1iC2uWw6rMpY29
lutotmgyEyOX6LHraN/c/6GEcBq3zRLt8OU4BUhuhDWrgR1wclIeWSusHkZd
UNmEhhPqpnlB0Y3SgmZJHNgbX87JWnuXYjF37nEUj8SGFaVjVb2xorSjx490
WloyKOpUVNO+7mhPd7yrnvVlowZCIKH39Lm+kvz2I9uTF/FXtG0qH1hiDD9o
SeXBK+qJBPPP4afbokiqdGWHrZ/wbSB2YUcQMqEDwQ/Q5H9EjVU6w+z3hccY
eBDE6EnTkY+Vn672jp1lSvf4OuzzUblBu4VNg6DOBVLb96JgLHufv3UsIVsF
IhxFJk+D5Irla3+HzFmjs2b3DT3ReRhRELLoYWRr6LWVrb971651rd+ma/75
li4edZVF3cq0X1uKGmpJUyuLTF+Jfw0/CzmiPE9GGChJQhWZTnVLLSawq+cN
Oaf+Q/LPy5d75NDJrYoqN7V0wLMH4TnEDyAxg+guhHrgze9bf9Y7pepKq0z/
mrLBdczlftDFwJgAQxTUvpnYtsOU544tbyWptro+Mw7xYCPrPlimOCal/6od
izxksjYDW/M8gp8C7FZgWoH9IuwhBIpC3dn/ng8KcNguKYq3EecYSf+Pi0Qg
hHrWOe5fLctfPVdHloqT+T99Nxz6Sc8P2bX40LY3VJd+qLaIwipTOXWWcMSV
HgkU8EqvoLoM/LiDl9vQj8OWw5T1OGuaZVT9qCC/KYricvivX4RGbfC4/2Pv
fCAT//84/nGc+xrnznHuHDMbM3fMbMxsJEVSJEVSJEVSJEVSJCkxk5llZJLZ
RDJJiSRJiSRJiSRJE5nJlJjM6/d+1+7/trvbbffndz29fLxrnz6fd23r8/i8
Xq/36zUQCUEuA5US1Cq8fczlzphNa74jSauguewYYGCEgQ5OFWcVYTlF8XvG
r90Kih49Mz6fdc8tJ1eoHRILKBxA21Uq7h8qEAKD+WWaN1mcpciKdFWLqe2x
9EOm7oKuPv1D4Acpl2Of98Qj4NEDmNDvH13AEVmjZ07PPsbzNtgJzD9qTDsK
B6idoHnPPyIzoOevFVWf4ez2xD5QxECdBnUWVGmcMCMN3Vag4G+Xxqc2hPSI
djZzNkdxCxkamKKG3z2viSb6nZrwz71IuG+XeHfkARcCIalvl7dj+p5X5WZm
Ch/71C/B0hLevnvXm59HP9W7uAdFdWpob8J+H0dsggChSwggBKqDK40dJPcj
dEVgO7qrsgzd0hU4QX4Iai+oD0C2c8kzNjZEYZ4nIU+29U3c1XrzfUFFSx8j
kDL3WcsnVcBmLXn2hwkEPEk4zUIfGaKgMNSPIOc4+UY5WqrlgOvJiMNNVREM
HXwK3Ee7h50/iuwF7/DuvQ8EHpc06FNnk6ZG2X7e3hyc2XttU7OiziS+2JN3
UBMFuuLgD7SyIjESFGaOyqnSeM05CXtJJyJtyd3nR6K0XVbckZWc4uwOJ2RZ
31Ew7fVrj0CnVbgckIhBIQeNCrQavP1PKJwxmdZ9h9JWQQsdI1yYYKiHc+V5
nV9MUvwfr9bEE+V/L7dezB7OLqXfrp8skgaL6wOpDIQiYHOud9NtCBJkcZ4i
K1NkFTRY539jif0v0/ExrVzhDS9lI58Pwh7ryMwA6GKt9gfXWcIeVwo8OTx6
XSNeZFnynsCAM38QAo3jXxIbCPTAlF3vLWRYa4hzZGFMProS6Ct4i/PSYw/e
MOLLmWg6LOOQZbj+F/QQ0nhV+qAOgZDu+KN3rB2j4kqGVRaUmLe89m/X35tF
/PfO/M8X8ZV+94z+LY0bbZ/MzyPmGSwsnM8vNEaeHySbX3hU1qQuMf8McKWy
8apodGH21sCFnr+vOZC1Sab95J3geF1bZtoHvF0Q7YFoB7jWc6oyTywJBf4c
4hzTKcaebcCp29vjgoqnoC59ljiB+OeD/ycOJ2k4R5aA0xDUDiBlr37D/4PE
2gmPEUiRHWoq2O2jLoE81RP6f6D2L/8gKgkXxKHPun0ID92SY68iFlKlYpps
EpGPIhriuz+66TiuIiIfWRJBHS6UhLaK2xLGv9Q6LUKixzfo0VFbCos979iu
7tE8SvqhmuxSrNpFFF3iptfSqBUOeyAWgUKGnT8aNeafJzz+a512ybUjKCUU
3aoWTnXQVQ9OpK0SOxla2f0sBkomJx8/sz594345G341m+ILgMsHFrtLpf1l
5Z7CYXq5wr0YSj/nHwvin2ye5gtQ+EocahRrQayBqbn+k5kOWzlAwCM2g8Ry
lfzMUsAG55pf3rr8mGlvYf6JgiaH4cdQw1tNHhRxEN+9HOCPia5usU3A3wTh
Ngh38JZ3b//NP6CSnzTMMXDfdtzAVID7VuBiPhNN9K/oa/75dxCohkhjYQFn
2qDtb1VqZiY/O4tY6NMnLT6Bp6COdM0VcJ7C4QUcX0LgAvwdOCjBTvj0u1xM
36MNRZBuKrEd7SVRaENTohpPGeZzmqG9oSi85fgYW0dCf/4L/tkZuYCMHVAX
P7t7lR+ZDCnnVgPn/wSgEoVmFFoIfryQ3z0L6WLftdIWIRDHnRJ4i8JAVRSq
C4+rvIPv9fzwDqKyWEVd6Orql/omoK26+HHNOM+1iyhI7D8U+w4Fns+q6LJ3
cwh+FBnQVrG7Sd+6WnevuG7BDYWepzFuayWi9un0YdOyRbhikyxZRNrANwIN
VEqeyTjh80YuIBkoFdgR9EagfiaTzZj19JCHX4hJmnnpSUlUy3LS4Y3DvddK
yRcHIZETFGqORq/SGXU6o0GjV8iUHwA4oT8ti1cV6Sbafv+r7l3Hx9RCgdM5
FY3qCetG8S9kxlKVHkvS9twUqR7kJlCYcML583eXU/MD4mWeKeuylTjnma0A
hrRL4X+2po8qrjMVfZYKiNlNhq3Jcw2lQRz20hZBXx75fzI4C0hwcNOk7lM0
VYNtxswj2QeZB5t0H0S7wLu+XOVDKe1Zv8jScekeEL1vYCrBlQyv6961k1B4
64Zoz5a43Epcboa799yyZ6KJfov+KeD5oPj09BBHnRZxyGl5GdsSDjz97nl9
KWdS7q3qkhc2hEAn4Ebk0wJ3GXYTA6s7p7zHE1G0KZopz9pqoUvDW0F0UZhA
98ic7R7dXKZZ3QJvRhZv6Rpg7X/MybEO8JosefLLnBx1yG7M7CEEYicdwrJH
XD0UFPZ3ToPm/D76qSFu36ruO9tHzvZt+ab0TT+iIPZenO2MMba+t4kj1x1G
8KOtXiBUQ1Od295fOgquBmMrgZi2dJv7iGo+5h3UZQkMP+i1lv6oY+wZBiF1
ERAXfZwYs87mDflCEIpBIAY0uFYMW53nuhw345aEQBy4pubPpyJtxKmUAovZ
4XFBJACxCMRCEPDhMZczJRYuOUwbhzu04CE9fEQ99qzubc0br89uWVvzb5Ai
G6TY+kb42h2uFc8dlsbK6uKZvn5pbIEBsV9t+P0vv3fFE8xyhds9F49WfqnH
+c/RBNlzRNYY1hD5qKygtuEtAqFnC5eP35wg4KEKa1RBjcwvbrA/ZtqT+DmG
/JyrBb4RhGZsBCnGcrQQ6kjDoEyCKgOqFMijOP+Z7bifSpu3iCROMfU9/hZm
HqUXVMfYFEcgdWMi+lqdAnPY4AzrnHufSTNCgdq4e7t09DkrR1sZRqDTzwoO
ODOq4xNTEhwFcJbx+gtXAfZS4LjpyBNN9Lfo3+SfCwQ/i4uw/CHreA1Wvqw6
+CdEXTeD4t2EzFvV4vXvl/YMbKJt+NR0ULwhufMnRNYmacY8w1pn2ppMe4tu
qaJnxj/i7kefyg+nbdm37vayf2DujdigAcpsl+/9souE7Mg0o+UsOeTrHj3l
2EoL2il+25pLp8z2rLkdZ8d7eBn2QdwPCR/EPBfXVUO+q0SBrLrYNXcxpL1z
+9cjGUq2QivUaYWa7bxvbt94dWNsJQTeE0UGA4+lh3uF2C8x4BnbuHSkNHoF
A3Rmg8sHoQQkcpAqsIllGIS+PJq1ynNh5sHNuFPYcHpt+BsIRCYlKZQcndZA
FMRm9VjMcwa9hZ55JRVMa6TzJs1bqx4ZGrxRfnXKaw/IyTNEXa4ceCrgq4Cr
uH439q5PGilpy33zKdguwD4E2wDMo9/v71IwRIvFmYUit9kSnPfE/YHEfbC4
7Vw2mJfHdZYQ/Gg2cbXJWSa8oQHxrPHkXZZ4kubLQCAH/vvma+ucOEPW5elB
ZAXpJki3QLIFxOoxQYogBOLvX+IlYMc47CXwAHv7W6XR70MUeYllHCLUkR+A
+hg0IWwqP8gOsAuIrv54N9HMjCJTF4KRf0aMt717C06Fdla6SRo0OaODy0ep
5ur3K+zEn57IHpJ66wZEO1Vwt8F7Cn60bWAXtCs2+B1Bu4kmuj/9g/yDE2ze
vcO0g1edr1+tOh9XHVxa+t2z+1IIgXbiMndOdVDUHJY0BwU1IqKHO92GIkRS
RTcUH6vib4hjBMv+RLj/QhN+Y83Nbtfnd5vKXE8ab74w7KsyRVX2y3VDokBx
zihacqhWnLrlXd1buwLx0mqg8M4VQNgTgXwcZweVIpA7hqSnf/cK/J+K4/RL
IiXX1kwisJw6flNJLtRzy9XsKv9syO30GdXW5sXlTQjE3E7xj5ryFI55mc/B
NsQINE7wVhVAHMK50BRals3tI/iRKUGpAZUWb2UqjECfeoHI2jh7p4suqYok
7kGgK2PD6SXJG5t/fdDGeoRMSlEoeSolTyan19evXiDaMz4TsF6Iuc+F7O/8
NCicIkvSR+Qj0oHYgA0NBJpr9hR4E8rMialzFdzcGSd3DbEfTJV/cH/ITQoE
aJEoI51hZXOcXJ6j0b2RymfYkkuRBvt8VFaYY8A8B+bYQLzuE89qL8n9aTrM
MGCaCmI1iJTAFQNVVGWjsQVkDlA6QbUHCiceE2sBYj3EsNVZW22244y9dYrG
ZHXsF7wvqqLC1PcEDhz2QtiD+Sc44h8P9v/Q1Sfj3WpJOoYfDCdX5Y9GAwmc
3w8CxV2rZ4h/6uz3pxg3cH/fwPSU92FPZ1oVPLUUYQ9hTw+CFxAeQPAUfDXw
pOGOhaN/i/6E+9m76e+d+Z+vf5B/zubnceQL0Q6Gn1HVQWRovLoKSz/beOKB
ZPUJEQjZA6Jv73qvWuX7mfoz/hY84u1NSbzPVaEX2sgLTYSQbj9VOQz1trnT
t5xdmDs9Q6MzfgnHFZWOg2UX2A+zPYqXUTJn5GRzPZRD8JOGeg5ayFJQRQjk
hfu57nBcQaf1ZdL3Lh941cm/7TXWzjrkkzalXidnE8vcdg/NxNYbqDLXdABh
2KNcT0UcHqgLOPpjPsNr/I0dHA6TJ4HnwfkwNEaFw8e0o9CAWg8aA2j0GIGk
ChwI+yCaqcDZGyDUwcuLKmCoY0MIpEpjFxDL0bmXN3u71hlRhuiUrwSJAeQW
UNhAYQWZGcR67Aj6VHTbnug4oy6cWc7xr2kXcGu63dESP/QhaEo/sAjuIeT2
kI+OKB4PGY2puM4SbjUi1uBWa5h2mDDNBOLlCfEkOcuBt3x4K4AFLsj1INHA
kzenNMkJVwti9PZ3QbUPGjeoXCDfBbEdiHdusjZJNWSRkTWJu01vg5diyLts
DXB0wL6OLb8WWZZnaFtcK4id2AWk9GGTH+KH3Pf5PwkfqVtijTw/Y8+M5pPy
R/f2DVCPUs7zDOiOG7jLRgeXY8QaCKD88Wq7n1OHzhD/uDrgG+D1pxGEQGdw
jPgn81fxz0QTfa1/jX98r9+M+Ofde/7Z+Mg/K6t/oP/n94qiKHEsIEZXDR+o
g/CI63wi2CfoqoXd5Kq/ujnEF03H6HJpPR+OEYh/mJInO4YTvEDsQ7I0vXhB
SZ9sRApxKOWgWYQOsiw0olDwQdySxV+kDHue6z4T+kAUwK2LflQ66aOA8009
sXSWn4POCgzJ6LT9S0a7S6tXSdxOD83E1r/QFK6pckM1+Vg7ad5hXRK5UOZw
zAsXeCxi+BH4cEhide2Azqxx3/MPIh+tASOQUov5h//JRYluKXF2zyUBnFiC
sOcD/yhT2P/za/iHwimwpEOhFsOPahPUDlBvgdIGUhMIP68KyNh0I/5RZtum
Dv4l7ozaoo2T29EzqtyvmO13isRIUtl5hEAcCUwtNl+s91+SB8RUEcHPNAve
CmFJAssSWBLBAhtkeng6OyBeFDkaHPyS72DyUe+P+GcHxFbgXtMY9sdEFddZ
6kueEQQWENqwCczfftWGKEFVFBm6E4RAwm0Q72ET7gDPCnTN1addiFAH1bFn
RjEiH93I1KOH4p+d93vl/aQsQZyhL///CHhKwDN0FRDCOQ+qrFqI/GG3vazK
3zJlYacJB1047uP1p4E2eEvgivYn8a+J/m79a/yD1JybH7x9i1FndfV9/GvU
eHR5+Q9MgX4I2fJOR93jqH273Btd0+TacXKmMgDaKOhi8Ey6O7cZXfFVKMlz
56iK4LiXKK7SfIbXgvEOU7L3/p9xAWdktHyPFK+vHqfG/p88nCDLQD0CuYPL
sD5mY21XBUdDaQQ3rVaksMli1/TJukWVIDnmfnOaXYTqPPRXEQUAMJGdD2jt
xkYmuoKmYTntKtNfJixdvVN7hOlIcd0VBDziUE8cHogCXd5BnbF5lUxLo5dZ
nHOh+H38S4dDYHIViKR4pfkHUY05nF57iOvJqHNXzbhxeZnoN/J/7lFUXpUl
GYp0ILeCags026BxgHJzxD9fuSkER3FptKyrDiznnxR3OgdtdSAJF647/G8T
iZGisAo0bp2YDhELiceLGYLwEoR1zD8IfpalI/7hYBeQSAWIf5iKM74BJHaM
PYpdvJVsgsAITMXg2+e7ZSaCAlN1wTeBeBNkO9ik23iMWOjbr5VkKLIcXd1g
6ntsEyBjGQZ09ccalaUYtVtmwVA4csio31fAVo/9P/kI9WdmPlZyZuZiYaGL
vvmRPSLgyZVdEkQj/Fm/Y0dM7ilpw11rDnZr4GnBYQMOy+BKwNZB+achcqKJ
fqv+Qf4pzM425ucv377DCDQuvDxOfn632B0VHhzr/zLqaslu754ceS5CXoj5
IH4E0f3ubaur6JoW1wYSxD/HoImANgYvNUfz28m1QIuWvXCN2th7Ro0ktrEL
6FKdL3NcUVGgpMz1cQ+vAU4ktl3CRrS+4sss7Bz5IIYQKAHlBF4dn0cPd1uH
dFuWf9BHwKPOY8eLrgqaEqhyIPuqY4Y4mFWkG6pcW5n9sqZxM0IJu161UguD
yiz0ltGtNgIBhC0X5+ROeSUbWbL1BrpKTXh0I1TRrCHGVpy9m2PvFdjOPHM7
RTF+rIhHpqbpzBqH1xeKR/nPSuz5wfAjwIvCPuxG0sToliJ7py08wgEvREHy
OB6gh184f6jsMkvQ50pwvi5PivNV7ktUbpkp7vLVGHgUdoxAqk0cBRMbgPfV
qkHO3rHAm5AlqprSuaEFpjaOAGpKPWns5zrOvhfdUOVsXfBdIPRg47u+/ZJb
tE4LkxhJ4vku8cpFvHYSc/6plfwr2vkcF94JYVEIb3kwSwepFidCE/+FaeIK
S3nO04PQgt0+IgsgHGIpL0m8n+r0SpO2ODocR5M7QbkPKjcoXJiC0DOc74CC
DVGSLM1RFBWqskaRlxERffrTTIDSyDGGbe7I26MYRb5Uo4Hk08ycn9Hp3PxV
DuSYfx6PjCAGX10LrMfi7bjcXdQG2ub4xWYKHCnYQjh0WJnAz0R/vf5B/kHK
z87W5+d748LL7xbx9u3bT+Hn/1KmlMPZRgQSD0MuBsUoFEKQ9UHCdXZjtImm
qrKMXSG6wz3ECKQKIv45HPl/qpRUd9xIwnPVSB0sp31lusB0+HnuuDhUUWS6
CGZGRXhAXRzO2D3Plcad1uHBFX3FDoahneaBKbnF3qmL0MGzoK+B8eTqEqwt
gzINwvdT4x9EZPGKpnxuaOIdkOkblwiEPky1FsL5DLnQzHllEZrzcL6EvUDn
q3BKaudX/Puz2lJFFr17rtEGKUymZmjMCovT5fKBJwSeANjcAZ3V+GJPij5N
M+VYjibX2ee7cVcF7t4Fc+vkww78oyKNU2OL8DVapML5uuOUXf49JbaTWGka
v8aWDYQakBhx5g8yiQEQETHF16T0cF0B/mFMFMxKo2UEQoh8RIEsZ+8eqgHS
TQ3uNogOQOoHWQCb1Icffi0qtchidblc4POA962LPGPrgH8Yl4TLxOu9R28j
U6uFV5TzGQZeDjZNw8k/6INlC7E3ksTPUkUlurTNVAzYKmAqh3TZKVnwsSYk
jdtgiQZs8SVL+L3JTuvcOE3W4RrwajLFHqg9uFg6QiDEQuJN4P50T4nI4UY+
Sm0UmJcIgS7HxXkkOBzW4TUz9J89OkB2Zma4sNAeR75eEPDqMbYPa0C+8oHb
AhJHVLaXUbkLWk9J6ylqnWmV1nU/JPbL9Pfez/69M//z9W/yD1JhZrY+N9eZ
nz+bnz+Zmy/Nzv7uGT2sVD7DZtl1eBl5n4HczEIzCRWEQEdwY+8DsixD11TY
5p5gG8T7IPXAM9nuG5PvrTOxelzaHkW+xhkj9gGilxPxMS47w9oJcPdjAl9W
FCxJIjVJuCr056ckWm3IjGjHmt9FM9msuNBAH7VR9GH2blMcxM4fQwPMp2A5
w3ijq4IyA6KRd4rt9EmjRV21b+lih9ImjNan9zAmfVD2aKOeoA2qLOjzu8UF
aCxCaxlqS53M25RvRpFISoI/u9Z+hEApKr1IY1TpzBqNUaHQri/MSNYmqMYc
3VphWGt0S5liwDf4zJ2I8LgmS/WJaf9/i5WXJHyxVhhAacRbmRazEOc+8lvX
6SEyO0PjV1mSc64CY894/TtT1CWxrg//sXeOuPtB/kEUcSZn73sLLt0uijrL
3hwg2pGHQBUHTRJvFRHMQoLPvUA0WpXDuRDwQSTCFSDFYhAJMQjdIvZegOeJ
iUNF4rWbmPU9fpeaWq4+Wz6ZWmxwJMDkdymsq+DdBjdJFhQowgoyMj+/xr5q
90ZhFZnCHk8GAiX+5IUqPPgebXATdFmbowPRyP+DyAchkHIfZLsgtAL75r6r
36/UMTkbptTS9NMic1BjX9TZ3RKrnroH+EGqzM7GCaL9eAQ/bx7D7BS26Sfw
ksD8s7h47avMPpE9KEFm9t5Q9Gqiif42/bP8M1Zoevp3T+EXCZGGo+7xQTwO
5Ry0inD6aQbyLS8ky7I0dZlp6LAtlxwrPOYanskdr/X7unLDfNq3DTD5WLpD
BD+KxMdrK2PziLUb4LiiCIRYux8XfiuP9NqQRRe2aoJmmQcno4z4pyH0YdpB
zIP9P50r/488AYIjfBcvOIopsy2ERl/k6CIc0pTOPxw8d0yqxqm9EhNOONDl
1SLTxeB0ZP/lrmmK69r/4n2xdsqCwx7iLkkYxD+yBH9t3b9OCiH7gddgl0VQ
GKgrstgb9uht6vlGd4aBM1Xe8kBjBbUFI5BEc28uoHVGDCEQlVehCZp0QZsu
bFN5tQ1m4n6O/n2iGaq8HUw7CHu0GdDnQJcFdQLkwc9cQBRKls06FwpAKsVV
r5UKkMvxWPQtFGQ7j7nuiMCbGoXDDojXPuKVn85pUNkVEj15+2tJjDRT0OW/
X02GTY/Hwu9AoFV2iCquMpWnPBOItzD2IArCwa9N4BmBJrt7l95PFT3cQBRU
jFJLMWohQkn4SPdyWKQdgggSRGWKgNePYPY/mH+KDQ3Qw+VlXA9/oon+Df3j
/PPvyBCzb1X2jyAag2IWmgXoFKCdgUYEcoeXEX3ktoL2JEmKoihSVTVkFEXp
MU8rODqWRhLKVE6Tr2gKVVWmKIsk2bt3zO1gbhW57g7iEFUWY884/0eRxiUE
WdtVqskhOk6pC53xGm3n+4xrxzhNt/KxzWVsfy3nI1UjlE6Sdp6mI2vHqYXr
LhycvbrIj/OLEHShkyqzeKnXD1HQj4p7kJMle7oGEK93nywXXpIHs2wMP4sC
0NpAbQWF8T75Z6x1eoTETJJYqXXG3dub0jg1Jv8uhYAYpsYH/kHko8+DLgfq
JMiCOBHog+i0KpcLEgkoFKBW495nahUGIfTMh0AYiZNhSM44KuBrga8D3idZ
3IytA9a2l7HpWadGNmjxdep3cSmNW+NIMPDIjaCy4IJCSjOmIPQMVwqdKBVy
DCgwbno5DqtJykxVl6sfrf+y4i0aMxTnN73kz5GdIA4JIv6UaL8mMPYsIP6Z
gpkn8Io4mSKa7/sPTjTR/70m/HOT/s+irtqg2ZrfdZ35A5CKQykFNWSIhfyQ
cHZ+ZJ3VSJw9N//AK/KHxMdhtOUf/FTnbJopydws8Nwd0TFuTImwRBoBoQ84
Thzfolt3Ef8oM83xGu3PatScgrrw5aU5vr+WPdrIe0kpz/q1p2M6CgLvAAEP
oix9HRc6xsRVwAh0X8LXa2mXo8YXa2RPVhsCX0WZA0MbZ4M/WSk8J3WmmTDP
xQi0wAGV+WrJ0r3Ev+5LNE6dLRqOI0RCJRCvvMS7PNcC/C0QOkCw9Y2WVXRj
jb3VEx2AIoyxR5sBTRqUMZD4gO+82md9PUSnNxDnINpRKkGjAa0GUxBiIYkY
+KOFdWRuliHtIeYRGnGTU/GoyanQgFt93U3rtAid10Lva1xNWmMDjX2EoCbY
1yzGNpfghItrIF+M+oF+3gzig0iCLEVUoslaiHmYygHa0qStNU7kjnP6VZLs
Sm1ZuxMh0BMi9YJoTj+6nH2M4Gf4mmg8J2KPJ9eCif4hTfjnH5HiUGeI2e2l
PYRAXogd4/6kKTRA8GPO/P46ZjRzkmEvsHfqnL0TrusUbVmOj+uP+IdRaaSo
LffM3U/WaPcQtwwkkR9bo03W+jl7DQm6IhfA0MQEZR6nG9XwirN7cQGReDmm
rM/TgsiEL9ZiKzynDp7TLhSZoeEEF5d+tJiYWiu9pHSnGTDLwFlAMh2GH54U
I8c9zOA+RONU2eJLRD4SLUh1QLw5frRce0q5fM4EiQu3r0Jb0S6moJtE0WQZ
5jp350J8iGNeiILkIZz/LHABw3yVDY75h1bjsC9EIuzzUauw/0elwiEw9AyH
c4n2oYtPuGpMPrJNUDiwoYHEAgL9Hd/aBj2G+IcrxU3kEfOo33cT21Mvxx2r
Te/q+5ago36gIBwVCbxG69wESZAji0pkYXGDd1urWa47LQ43FZmBqgCqIihz
l3ec+k9L6pTZMra9lsv1iPA+JWIviOxLIv+SSD8jAk8I95nnd03sofX33s/+
vTP/8zXhn39H6mOjLmK1ZHc2K/vbjYPt5sFmxWVK/Sl9DJ9IvFPKIN2aoVtS
FP1n99Ecp09wFJPFSurCqaFxabxao92Vxq4pZni7aJY419WURLDzx3iCM4gQ
R43bXSH+kfx0O7JVmo8u7nA1mHzw9XobX69fMeElE57Th5oKbp1GzPmJt9H/
lnNPV+vP1s6eLp0i8uGILunczxb10zcKHOopnwGCkXGoZz87ue/WBj2B02MU
mHxwv1ELEIulp5SLV1yYFuGSxSr/VddO8S4uX3PtQUiKGFWLEKjG2erxnSDc
B8E+cLeBafm8DgClwGQ0eTyc9iyTYfJBWzTm84BOr5G4Waa0h1BHagPlNqid
2NBAasd4yZDeJd60RglQOVWm8FSgwC4guQl7gXS8hWPzSuVgbRhb+6TrxKgk
8uU1LdG/X1xPRhI5Qdija4D+BDdV0TVBc1s/3oeVKWbaKjo83YNtgnD/RxxN
EQf/EY5HxNHAu5nf/G3TmmiiX64J//wVUoV3DZl7KJ+nONJrgmZ9zG6I2/VR
m8r304t170P8o6o0NlBkcLMtZIrr1lRxXMf8w4gokJZG8rJ4GZEPGiMu+tFz
0UxRzl5DFMC0o6/jXOvlA1hyw8I2Lroo9F385HvB12v5QGDA8KPcBfUeNuUO
vGIh/gFiJacu4esgQeziLIxHIeJxGGEPndP4sF5pLAapzKP1RSyQcEA6MjEb
U9CvEZoMS3ghVIHcgB0jxEz0yerJCwZMC2FOhrtWaUOgDmAEkrhui4KRlHGK
JkszVBimJsPcQlua7ktkJZHiVEqOyWhxOJd8PggFuPE9GjMYmAYpvCJT1h/z
j2rnin/QQIb4xwjoo77bGyQz0jROmSXCKdAiNU772ZLNh2yLDe/yyO3zoeqO
ctQeXQSN7+28NhZVXWRZerxteCo4eS49fy47N7TBMsDRT+sQ95jTt0D5m6pL
ao91ppgZIZCrvY+Yxw/H3qHPfepGz3z/QcJ5Ya4tr12oEcrVh/ffjnmiiX6B
Jvzzh0sd3bNUAttnSedFbu8y7xxkN1t3z2X9Zdoq2HfKN4dGPhGCH1liqCnj
SkHo1hhdF7Q1TEFfi7V9yHUd8zxhnifE2btjxhFZd8zaLvIOOtIozFjg7Q68
c+LtnBVeqbqPmD/72VL4Jabsin9Uu6BxgdqFB6+Y8IwyJJZyxHr4P1btuXDw
UoL++5wEsU/8d7RK/qzYDnUtzaGeIeCR80AlALUQlAI8lrCBTbmf5UW3C9dm
FPaEyhH/WICYSz1ePXn+Cf/MaWFeBzNqeCWBKfZAfGutoA1ZiKSII1u7YT8S
KUGhZGm0CoPeRNjDYDSp1KsSPWRuni5pj+Nf8i1Mkgh+FA4c/+JrgSZs3O0N
rlNDZGaGyi7ReS2m8JwlunDI3vhMs3nP/FdVB6VwKYTaDwQgaJoK23Yh2APJ
Afqjgjc6mDZgs49Ct8hsQzCePpQLKFkVF0/lpTP5LfvoAjpjxGRN2zbzWwh7
0NaSvG0FxBeKlcXlnqoD+j4YL8A8AFMXDMXu95UPmGiiP0YT/rlJvzLqmioL
K2eyRl9R6372raWOOK3VoPMiewA1L7S80DyE+j4Ut9q/olf1HaQ5Um2XNg/O
9o/hKAh+ZP7L29xWrN2kONxVl3CzUXR3jG6NLf1R49EayG/Lp/gp0S0JlqPw
hJd4oWhN62HWBGj7UnE2xcuLlMAR/9TBybwCQ3LK04LEii/TiHyQKbbxw//W
TognXoKaf8YfvJLBG0QXXpAdILrIE/O1Tw/CIJX5DJBxMfloxaCT4C1CIPTM
r3EBUVh5Br/Nk12tkCJmIsRybYp8/pKDEWhGifkH2YwKXorhCaMtT4AsAoKj
u59xfT1A2oiSySnEQuvrH8OQ66w4VVhhys7QR4oQSGrDNk7+YcmHP/k2N+gJ
MjNHYZco7IJF8LSdpEGNPYp2SUeRr3HXdTF0ef0U7TuPSZInmOauwAlSLygR
KJph3grzNgzYb/Tv+Qcw/6h/OHj7DUUKAkQ+J6A5B/0ADD3Qt+G2tqxqn0YX
1CMWUh39gAMnkBEUzxQIeEbvY/yG7KNaFH+EM3miib5fE/75vQqmuMUTySmo
BrjFjx7wLZW23sMUJPZYjLmjnV76CBpB6EZgEIZ+AM6OoL43vKaJ+W+XyqNA
8HPU90QgmIRoGuIpiMUgFIQbfTVcd0Eau0C0Yz7H36Gb42/SHo4QKa+vLHg/
IlZ2CIrvCTs5xS89E9afCqpP2Bm5Aef6Cm67b/621tlxmrDKkp/z9TgFSGrH
huAHX68Vl3RNmzfupzbuJ/u2NrXSf74Ozzfg2SoItOiafklaCTJJVcGYf0QY
fvQS0IlBJfx1/LNBj1PZJaaggxBIpAbihZuYTxLLhf9InWcM7PN5o4BpJSCK
e8a7JDbS6jyOHkrDDzIZEjdD4ReY0g5biVe+I+OogCntUXj3GUBKutbKQXI7
Q4cGBwb8UQq0GCc/n/GgyPz+41A1JY4d/fOCIgiaOLzdhLcOeLuFEWjGiP+8
8V94H/+Fy9M/1YPsCwUzfAQ/Xdwp1TwiE2SWIRhvR6AfldPHilckjUt0TMuo
BMXu+xbH9gswl8//XBfQ35tF/PfO/M/XhH9+ow7DrHxD3MWdDY0A1vFXFoDp
An+JgSKwbSkfuy4Lx9CJwkUCABmiIB+c7EPRkPuJm+2HkTVp8nT2EPxkIVmC
XAUKaIvGCIEQFH29P0m7x/MUJdGetvoV/9TR1eEBp0phFYmlHYLkJaiRR9QY
QQpobDgJVqr7rgp4twtdr6nCElN2xlUDb7T+nasBpqxPPDtk6E75W9jnozpG
8NN4ugavaPCGAW/o8IoCEhMI9UA8zzBIFS5tIOFgn49GhJ0/aIvGEjbwaN++
aNItVc7uhcADoiMQHuIGHHcQmZGmsAt0XoslHHDEQLz2EtM+4i36rPL/MbvP
eIh8YIrde0SrGBugr+J8KnkMeO6f9clcKxInTeEXqcIGTdSii0+oguoG+/6q
FbxX/mgjf0w6SdIuCgzsCGqwocIaZugV/w/UHqTrahz7JeIfZQi0CViwY/hB
21kzDoQZOti9ieBHkR0KfPfmAHL5mcmq+ASjjnn0bzRuO4wG1v69umUOIpxE
VdLEN2vW0Smc78tRbCL+qfRV93iuiSZ6aE345zcqmuM1egq48iSPm6Vvjb5Y
jO1LlSq8ay769oZ5P7S/4B/XZd6Q/VXdxL9Pcpd0K2876nmSEC1Btg6lJlTQ
tghZ9MwxXF9iiOPKCY9PlDmc9mPu4X6p6NbY0MZrhMWhB1zuRGXh3qM4v0WP
81s0VmyYf37a/zMWvl4LSjRRky5uI6MK6+gZkjjJ0HZ4dpDsA/Em8d9y7xUV
Zti4CtAcF2aYILdjBMJpLetZFqUpYOC0ZwUfkw/aojF6hkH6RltShrXJ2wOx
D2QhkEdAHgZpAEQ/XOFp9C5G4SEqu0LjVKnsEvFijyIrEItBYjWJKIggF4j1
lLEJyPQ13L5EFkX881Aru1fpgXVWbIOdWGPescYO3VjlbA14Tlx9iOO4PtE9
d7Be9JOaYUonSm1HKLUAObm/9kNnoWkrLEtXuAcyP6gi2AU0Z8Ex1jcaeC45
k6cHyCSxjsB/P+1lx/LGuZmG9OwjlozdMmhguwBjtim9rxN5wpxYWYw4ZwAm
uCrHfnWiMzBkT+61fOdEEz2wJvzzu+TYpyaKgpOhEvA3yeYn3yT2cXaA4tiB
IMdxmjiAagDOItAfxb9O0UP05O+e/pfSHCkR/xyeuxMQKWL+KX/gH/SMb3g9
rTG3olx3URw6VWZBW8X3xTj5OQ+SaJ/jesAAGIWZY/BOeFJcclluAKUJ21UF
QvH9nGKNGUIXaxInha7a42fWBWGaqsYydgXbQMxk/lvuv6LBLAcW+DDPg1kW
KLdAasUuIPJKlLaeYZGbPPqFkAkiFqAtjzZgkr9RHYiqz3F2LxD8KGKgzoAm
C+o0KOMgDQL/ywYgdxTxeouYdRFz+4oEaIrY84PgR1vCzWpH9bp/RXr2HcS0
thH5iA5w9UWpHyTe69uwflB4Z+VuJyIrMnRDjbPZF+3jFCDFMciP4aUCnok6
BD3JP8rzDrLsvds6zlyr2tzc5bhf8+Iibtn8uXxxbqomGfl/xmGpnZGhgfUc
9MmK+G7v5Ws5fcxgVpBuSJugvcC+pnFAz3YOxmpf5U38ZU1RJ/rHNeGfm/TQ
UVfnAQ3xT6M/9v/Y339rOUa+IEPrQiHxWNRRp6no2+4m3VA6hDoyNNg+Sxr/
vOCX0i23Zyyu5m4I/BlIfIh/ZSAZhmP3ifOmFzIdcc5+XuBriMNdaWwgifSE
xy30zIPOdoMWo7KKTH4bIZBQedWBXThKfn7QCoRkaZamKrOM58Sb5ON3nRck
7PaZ42BT72L+wZm9utGeK1Hqepq+UWKSa0xyA23p69/+TBiWOuIcWRjDjw7B
SRlv0VgexbGw+3kL2hjDXubsdcToyh4HVQabIgnS0DecP5y9rMDXFAV+AyAx
zA3eLiYfRRgXoEaG27Aeg/BWBLqzKKosXV9hW8952yBwYuM5gGnu0qyHNOtd
fg3t+XnclguRz/IyLK/gLqVo8EmjUk+IHS0KS2fyc5xDaB3dT22OnT/1wT3H
pA6j3OO0INWQlnuqE9B1RtWMCmeKSPFPql0+0UTfoQn//EaFM7xR/o9m5AKy
je+kAC8mVWdr+MtE7ttURZyG7KG1Gtg8iSKz1oL6+ygE9BAyRfRbeZvn1IUQ
KAGRFMQSEEXwc9Ddt6Utt7yQsRlmO1OIeZCx9zLo4S+YLYmepDBzdG6TJeix
RZfInoo8rzQhVe5MXThH2/FuVEWZZehzrcCzA/fWdg9IdHaTLRhyhcC5uUU2
QiCqsky8CIxcQGcvSfCaBkoHhh+5DUQG4L5PQNpY8pNXwpTVOGU1trEc+OY7
WpN4mbYm4h95GHt+EPwYqniLxvIILOryjSq3Vbu+m8MPiWpM060FjrPNPwCR
H0QIJLzA3evRrdcntDC344h8pPGhMosjm7jE0/Vd6O9NVEGVJbvgqnEwkXjn
f0SrjNtwaFKgzWJTJzECSX6qbcuN2pDFKMoMTVuhG5oMwwnD2ELjdfEda2uW
Z2cx/CwtYexZXYO1ka2uYhB69+7Dbv4EN1YSlc4UHdD2wTAAwxnoqn1lvHQN
lsgiYXU2o87d0cV6EOH4U/xwQRgri+MVSbQkQg/vdqhfpr80i/gvnfbfIuI6
/e5J/Ss6CrMiWV7xRNIG1SjnWT/E91OqQkvyYR/pkV0R3NbE9rSJfXVsTxG4
514VDGuD67wUeEBw8LMhEq1PjRBoM2fbq+8cnO0f9T2IfPYaO5vZHygt8iu1
QYuRGRkqq0Rll59KPa8NEV310tDCGarGNq6O+Maa4JhB4ACRE8R72EQ715f7
ozAKLN45TwxCGYjkIFLgAfeGG+INUZz4z0m88BPTqcdvm2IjSMzYhAh+VEAX
ndz5HRGM8JSk/MYECzvwbh87f7QFIO3Ahr21qk+8X9Ytg0vJNw91u6iGFN1S
ZG7WWY4WMqa9iqDo2j3p9pDA15CncLkbfWtU4qmJY52qB/PwUQV1tvySr4Px
B0usJZ4wmy+l2O2DyEdfwIYGyigOhN2UCPTzWpeESfIESZ5Eg585jocgCsSj
IfEUHj2H9XXY2MBbhEArqxiKPuwWZHtj3HBOkKyIs01priVN1yXo4RdHkwSO
EfkYGnXLacd63rWenZlazTvMyuljuoPsgyjHHWJvH/6qupwTTXSvmvDP75U3
wg6lecmSMN8QIxAqNCXJstAbvgb4uZv3X2SVtXnKd4PYj/NDZGG8Ff/cHbHW
pzKEdNakyZ6xIuyxpczGsO6eJvuAEhwlFKkTQxOsvatlaLYLWPJ23rlbwh2Q
ekDhBYUP5KOOD6LdL19OosaZ3DO+BMRKkGlArsVbiQqDEIvfv+6EWGROhsov
MyQdthxjD1cJLNnwzvBDNQd4h02CfvxEmHmh7szYYH4HFnbhpQlImycb5uyK
0g3Y04hMPaps87MItKEKkLUxij5B1t6WkMzZz0uifQQ/uMRTH6wXONHd0MY4
JI3f/2IxEifNlPYQ/EgsIN/EjjViPfWEUnvBg2kNbsCqy4EujweKCIiPgGX7
dV1F7iAdQfiJRyXiGTx5DU+n4dkMTL2BDRJGoNXP+Adp54DuCbF8ce5xioe2
7uCXXyMin1eVzZjbJ5vD4ThDCKcbDvqm9t2Re6KJ/l5NgOe3y3PM9MfYwSQX
GcKhX3ZehrXB38fMo0zgFBFkqiSuYveTCASjtWDqQ6XScx8rqR5eTMeROFTQ
lAaW86sFLeM0rLXI5bK/N79dHdfq0Yw7Pnjx6i3e512SqMwyRwhiBch1oDKC
2ggqA6YgiRL4t1IGiZ2i8EpUQY0mqFP5VTL37mWdOK6SJDwkaN5HnOiUtIgQ
6LXh8rURphTtFW10VXUI2MFoHCWb6UcUdNfu6T8iqtnHO6jIEriggaX3Pln2
Eod4P5S4tOZ3ne0j9yB4cBn2DEJo/FNn5FcQT4qMGH5U2ziriliNP9ooTtHb
r2SYeVQJbGPnD3/vft4m0nBhAUepkN2feAclI0H4iKn0o5fdqRl4Poft2Sz8
92rk/1n5NAXom2Ju2uXRqKFe2xoOnQDuke2N1271evc47Ykm+ls04Z+b9P8d
eCVrEmzHudiL4Uebx1ki+hIeoIeIiDjb2Gsh9KXkyYa6cKYp9VT509895YcS
Zy8oCZe0laG1j7HHOTJKFjbisOLvzzsbqmPQhkEbBU0YlH6QuIH/SWeP1Q0f
nV3nijDtKPWgMYHWAhozHktUIPiOlcdr9ACyn3kLNEuYd9iUJ3EXe4IVesRL
/icqTEnKBCdBsKME2T3y+RhGxWHMo2QzLYCyf/pTbT2/a2K2AO+wIosPxyUu
EfnYR90fTGegqcKMPWYrOl1dvxdiAUgHIROEtA/i7t7dPw0aDn69558d0DiB
eHdMrCeJtfwUuyUcrf9CJjoEnhOYlnvwe/TmR8uylpZGycnLsLT8aVrOp+qO
05jfLY7WcF2/zwcxHVFh4ESZh33iWeDx69LT2cHzecCG+OfNlfPnR3CL7/Eo
kwnTSQsBzz7A4cg8o7/2zYuBtlT8/kNNNNH/hyb882+Kqs+zt3tiP/b56Io4
URbnyhZBlcL8w3VeioM5Ve5UX8eZMKZT3CdU3/jdk34YIf4RBfPqwrn57GNB
E1IK1iKweNiZ2cxf+X/CeKvw4iygTxOh18jHNHZ97P9R6LDzB8GP2oTHYiXw
xA8+f5qkRbxLE8s5zD91MHdx8I5gHBOsMLHhIpasJId/1MpKPyIf88gLhPhH
fnby4DmrFJOX6y6IAh10HTe0MAJZ+niG+iYoc/DG5HO2vX5IxKCYgmoKagko
hyGHEOjOZ6Tyq0xpl68DqQUUW7hTPDJiKUyshIn1OMvaYW/2OVsDlr1LN93D
Qj+MNIhkEPasrOLkZIQlaIAevv0Mb9IzMxcLCxh7MCatvCelpZsOC9ihlxWF
TtUlcBDPXI9ehf6bLjydPX06O5yaHjx+iQ/19m19du77pyo4PFAk4sZGHUG+
C+BgZO7RX7vtvKvJ/Ykl5e9Rf+n97F867b9FE/75ZTpIPPjt9veLqs+xNk+F
h7hQjDaHnT9X/p84jn894sWVmbbxBF9Jrxr8DEeXrQdcGv7bxNw+EnhTskRd
VwPLOdgvcf7PSqC7eHgyt51/rvJL3bjRuXKU/yPZx84fhvYzbxiVWWJy23wJ
dvjItdjzg+BHqgaBDFi884ebOVXcYKmAp4cpcv8ZDZ4z4RnjAvcZP8fBJkSt
5KPmxl5q2eAc9bHSjBusjOBHBZfiQva279VkWVjtytugOgN1+/Lua6iZ2wme
pyQOd5VZnPOjreMtGr82+qfEZnc/iIAnDbU8nBSgnYVmHEoBSDs7d6rYiPN/
MjRhjS3vC3Q4+VlqxSY2ATG3T8y7qboCTV+iagtkVeLO7+iDSh9WZiHsWV+/
sq8yk+FTTEJ7fljAtbJyCwLh0qCBtqowqhdNEBaC2CGI6OPXKeJFgpjqzy/U
5n4AfpB4LpcsEtbk89azs+1R5Ms1gp+t4dDYaEiCwTt+ChNN9Ndqwj8Prf0o
P1aXFwfoi9/YAlMDjGj8uycFJFWMYa1xnX2JHwh25Km8+VI/eGW8fKE9/09U
kIQK2spgHA/6UEnWPmomJE82fvfc718cV1DoS8vidXWxp2+AoYkDSdPWxDPV
EcvY5dnxsi+xE4Q7eBU8U/9lsgSJmqQyiyzeKU+Mc57FCrxFOMTi98n0h1rp
TRXVEfwITCC2wwsGvGLDKw685CAEGurq2FmnreBl5oumo5erWwuswKowQ5IV
N6R5vARsKG5Wb1wIfxBkZuui1oVy1JPOMM4augDdqFbVD4tmCyAEuirxFDqT
RPpoy/c2psQ2W9H5nn/qCH6K0MlBKw7lY0jemX/WmGEyN0vDLVO7HNWoX5ga
2ApgiO8/gNtCBIL4B1EN4pmNDZyW/CEzGT35Xl9iEt5z4/1uKzfFsFi7Sb63
Nm3zLB4m1yJVA0HYCWKbILYIwkEQiZmZO0xY6PXKolFtoWBun9j7vc3BwHbe
NTTqyuT9NxOZaKI/XxP+eVC5wrx4U1HFtTisF7A5hM0+2DtgqeLb8F8hgb8s
CtSu/RFFl2FYqwQ79FRRf22CGTvMbsG0DR4pT18a6rrq0HbxscHPzmhVFOIf
Rbr1a2b+y8S0tgiO9YnY+UzlfakPvjKGpdGKJFwS+NK4Vo+iRNe0mPpzlmGA
yIeuOdkQJ74+CJmWojIKdHaTyTtD2MPinTM4LQr97jEFhrXJ3b3g7QF395pF
UhvcJEN+zjeAZBMUu6Dcg2kBvOFhBHrOBFkcZAmQREHg6xAznhlq+B2vtCJp
rcs76/LmqqT6lpv1HpJvOnX8qiynflRMeJyzbAUwjXDoLqKa/YytKHs3zXHl
kLF2UzRrQOkzWLI7zvaRH5JxKGWgkYVGCmoRyB1CxF523e1cgFvGx0icLIVf
pgkbNGGLJmyi8Z2PdotO5uaGC2OwWRuBDekKbD73/3yGSesbQCJhQ3uOc5hv
SASi20MvDdsL+6G1aJmaP6OXB/Ryn5rrrEUrc7vHd5swb39feHQoDYUQ8Khz
WU0+v7Rn2PBtbvhs9pMJAk30z2nCPzfpXgKvwaKkNNSd46qGOyOOwL0Ch7DV
htvqAf68WDsRYaAmT/VVRRxuUJdB+VW5lQ1FmCC5ngizr/R9RD4Le9jmdmB2
+2La3lcXuuYujnx92klIXwdp5N6aNj6EuPtVob8rCvYFvu+632fa2nzXVbes
JyLnlMzzVHEwJdtn7VytgtsQJciyHEVeosiLJMltPVk3KDEyPUNhFJCRaek1
8g8k8VI4Jaaox5WDQAXEauQJoyrw4FlJA9jE3i8piCwoMZVDgRlkDlC5QOPG
hhDoFRue04FYTKPPgb1XJGbdLO1QYAdCsP9cE31lTr+ypJ6q/MKtmyaCa1Ll
rmpymkfM+2lbOkP9/D7X9Blidntxz9X1+yERhmwE8kHIHEF0t3UPFT7XGKEN
VhzZ6s/llt+iyuxsZ5zVgzAGR7VGwS/EQsufpUAj/ukv3OT/Wb7J/8N3+6bt
7mVfipxpMaoDVgtYTaAVu6REzdg6FxwF5fG8ptjU1U71tVNt6XvvSjjOXb7H
LfL5ZoySZZeBEnTsXpT2oOqCmvOy7Og+YNOZiSb60zThn4fTXogbq8sbOHww
Tjn0jGwfXVC6YMv3NA90XoYjKArUlTncTst4itfajFtOq78iF5ajNiUrv7HA
vBPeebAZmjC/hxAIXplOdNXhOB8G3/8PcOU6ZabNcfofaNo/KdZOTug7lcXQ
JHEvctyOPPWNl9CMZe4uSPw460mTwYa7ZcVwZwTuV0V+7l0Cf1UcaYtCLQQ/
LPGArwKxDojl4BNm46UEF6uZ0ePsdGUCV2+WfP6pU4QVpqIvMGH+Ue6B2o0N
DaRbMEXuEQsxqgm7CGjyJscILzXROUdj0dNf8cGqH5a9/beuNs98/awCCU6+
KT6/6iS1NYKfj21Z7hYCu0nqY5M+YrPlnTvNA9f5sbsf2DvzbVX3jYnNb7/4
D1BuZqY8N3c6RqBxZ4rlUUrPu3ed+fkPu5VnZ0+uyf9ZG/ewaNyQxiPyh1XZ
8kogQ8m1WfUh5wTYLaCXu+hXshpKK1NFfe3MfHppPcctvizof7z1A2vYxR67
PuvfOs3sQ+MIznxwfgTdA2gjEPp/dQT9pYnEf+m0/xZN+Ofh5I7xx/xz+SX/
7JyBNXd+//UMx+Id5uSpnq4J5v5nFVcQAslSH78kSZoga7spOgZVFrewNLXB
jGDpBHRVmHHAK2NLFquoC11dbaivg7bclycbQv9tDpBfKYapyXEMebvA3Rk9
3EoKvB1cZLiM3yZO4Klj3vvQZ4HrDknCBXmiJo1+pECmtSVwj7pFZPDaN0MJ
dAVQp3ApSKHnh6dE17U4VuA7QLCDt7eI7y1J411lHrvmiGn346XCs42exABy
CzyiFp8LhzNaWLDA281RAec8piA0yU+bVZEFBYaszdWB2AbybVA4QenEA7EV
uO/rTa5xI3RF+5ncN7tZWfYCKQaUFJBTsBGDFd/lgvP6qr/HcU66Kmrj9WKm
923pHCNHkGUA2uLJz1ZN/EIqv1EXtpqSW+bMtiWzbUxuaQKmnzwmRVZmaH5R
VcP87Gxxbg7hzcX7+j+XCwvtz5EmPTOD91n4apn84uIAPXmDRMcRZbpo7gwc
I6/x/sic6N82WVoNpfT1M1v/qmXglXvuHPTV781xUoZclmrEeVlG8BOAyxAA
Mh/0PHCy0y/81Ccy0UR/jyb883DaC/FCZWlxoP0k/oUoyDmELQRF0arsIU5K
t/sE/rIyhz0/tk+jFxegP8GLjj+IrA2xtxuCI9y8UlceJWe3wdhEqAPyJDxT
FfmHMdFxRhwqIHIQBbK8g+hDTPhHRdFk2Zs9gQuXcJF4cS0X8SE8EUclEdCU
wHgyWmTdA/MZXmStLgJ6XhzMKbNtbfUCcZGhBYjoFOkWSRll2toCD/auYP4p
gaGMKUidxrEwxEU/JIbhlLcFoj2QeHC9aLQVueApr6jPhy2NtK2dt7auIgv8
w8JjfmJKVjJ0MJQSbyNT681XdJhh4U5VTxiNl1KYM8C7TVjaAUMFTww38IqC
6JOM4HVOgioqMeQdRDtCC0jsOAsaDXg6oMuuLv1r3DDBsr3URd7utzeiQMsD
swKMMrwNwOxBf9Fz/bXSE2DG8vxSRzpyARlHXiArgPkS9I2BIpi6h/ZhX0vu
0SqO9Gj7k8ehyiss/QXPCoItEDrwlvuwcWas7MxMaXa2OTfXmpurzc5lr8tM
zs/M5mfnGvPz5x/KJC4snH3iI/paowhXVlc9QZwzTsPbvSrLmV08DJlPL8e1
qlwf0vOG6I9/8J1zVsc8llrUBTXEPIh8IiMLwMUBtHcGk0JAE/0rmvDPw2nr
iOVNC2MNObqIdcGKsOcStvpgR6CRPr3npswfxHQEBf6KMndp7Fzxj+MD/zRB
nvms2xHDXuK6OuIgKNMYHnQV0BTxWBIE9u4Jc8vDdvq5riDa0m13z0e9R23I
oyxbV7gPsmNQRkAVw4V8CZbnqSLzxtLRVTH22C5whT1rH2dra8rwZrOqyp8i
LkLP4B8N8EJ+BEIb8hDD0uQ6h9JjXBBYm8POH0QaygQONnF3b2tl/oVomvpz
fm5OO1i0wco2rDjgnQVmNINpdX+rW969bDrhxAmt7UGNoHqfKRqvTcOZTZh1
ANo+Wk4/3Wi+ZsAsB4ilEOYfMczq4a0NFrfhnWPEP5kv/T9IJF6GIizQpS2W
8oKtAY4GWKpL4nWCIf+44v4xf/uVPvLO3SbF4V0YVlOwmoblBLz1w7Tz7I3l
+rVpvig7mucXTyQnQ2UPNH3QnoG6eiZLlD4r4EBRlJiGHtcG/E1cEJvz8KRx
uyiyMks/RJMRO0HqAuk+SMb92m7tPufOP5Qb9gulZ2YKs7P1uTlESvXZOURE
t+/PdR2K/BFFMo8QyHJ6gSjI2gNTp//WHZi27ZpPYfsTv9DueHlm68ZmK19I
HXObSqHdi9IhnAbgMjzy//ihvw+NrdMH7k070UR/jCb8c5PuJfDqCvOOUsJI
VZY5U5eHegRChb423lSgJ7/52tYP1vcYi2738Y/y0viZto49IR/jX+gaVgFx
+LM8Saoxydgscl2nIj/IoqN1Q1Hc0Zvr+kObItH0Ze4OSH2jXpbpUS/vNBBc
7zNl9o3lVFvBdRqtA8w5lh72Bc3tdd/Yy4YWJqIPwQIcy+mCtjqgGQosews3
ATkGRRRnAaGt5Bj3gaWbqt85pQ1JfIoZnFa2lmywvgdkD5A8sLAFM6aLeRO8
VrYOYXgElwdw8UKVJESlq2wr9yjhah+IF6Gp9eoLan+aBcT8wSNK6Smn/VoB
swaYt4Amh/uS4KJMfuDsfNmpc4ObJPMLVFGNKq4Tr+PEfJWnxyvikfENeIfH
fMdztW9+tzrtOllE/JOEtQysjPhn8fD8tSkpuC7RZt/PQAgUzvASRUG6KsrW
RKmyMJzmffaLUNXYpvedYV0gceGB4Nao350lPg6pMjldpW5stpGhwdf7rPOj
DM0Zz4aZR3EIKh+u14QGCISE13UM3o7JvDV9rG/NgCMH21lwJC7sDzL7nxDP
7RV6g9JISpkqqHNVda6iSOZemzYVyYKh2du8xNizN/ICbY/iX7pK+zuPLA84
tWmvrZnYg+ohdLxw7oWuByF6r2AqTgoBTfSvaMI/D629EPcgIfDnxMGiJFiU
+jIiZ/C2IMLpuEj+4tJVqsDibUVirxV7D52vLE/1NFXcaNJ4iiNfo3aTZxzX
l8mNVFOKYSuwthscZ4e73+XunbG26xT9HxHq+loMU4PnBFkA1EncyBL38s4D
wTqYkiVf6CqKDK7bY+zg0n/GNm4yPuNoPNfF0MPxQrbxxQJdpa19XCGHrE7S
9DmmDa80F3iwg0XgBu7OJcP6Ax2xidWtZ9zonPZ0dRvIB0DzA80Hi7swb4MF
M0xr0P01oCvKM1lg2lR7oum+sMPSEawGsC17gXh2RLyMTK2VX5C7OP95NfqI
kpniNF9ILl7JcWxOFhqt/9oDmvHGwATxIsDRgNCMA2HSTWxiK6Ygjis4JfO8
sSReOqrzR8PFECxFYTEIa0FYcDafyrziHeCarz+m+5jhjbD9cQ7aunyfNfgm
S7Ms4wDRDq4MOeoMi7ayA1wZm2e7/mh3liQYUeeLppOOrXdhvwD7AF3oL0wn
XwbvyNI8SzcQbIHMDSo/aALYEAWhh6IdYOk/Q0dHROqr61OwVYK9Orgb4KnB
fgmcabh5XdxvEtd1IDjwi3xhkT+CWIi3f8Tz+CWhpDpXM7UH6NMYlye19UBf
78ri31tvQXK4pQjt6TI+Sy3m6OZ2L0q7g9JWJ2MsBuX+nQd9R79Lf2ki8V86
7b9FE/75Ndo6Ym372JsHzNt3OxuvE1laxitqV1ffF4ldvv1VX4jhCLCdcYG3
KI605Km+InMhS56LQk2u5/rFrWRdBFEQ3ZqjW3JUQ+KHzvWLRUf8M/L/qOKg
y2L4QRSEWOgRP/CfJCYK9uQpUBdw5rM6j2vgPNfGFekmYqHNEf843/OP5Rz7
f9ABEQJRdXm6uca0tpjWE4alQdV/VSngVhFriH/Cs5raigM7fxD8LLsw/8xZ
4YWy81pRDY6CCy/ViRnbyZR++MoByz5YC8FaGFaO4e0+QiAf8Tb86F2KLQVi
fp9Y8hPrYYKafkTP4fo/TmBtndFMN1awIfPzLOUloh3p1lUtIKUTrwsT24Bg
bvE8MYK3858m+mqzNuPqzbovVnwwu1V+oQlyDAOmqk0S/HC+K01V51qx2wdh
z8fOID6c+CS4ztlyZ/EPjpTprOnkbOvy6td3VYqzPzTUP/NkUmQlpq4n2Bzx
j2/EP0EMQjIP9v8gNPp0Z09BE+vbKuDqwFEPjnvgPwNvEzxFfIY/XexdN//g
WBJKKNMlbfnE0Ojq62eaYlMez6Efff9xpF6HPLCrjh3o0l591m/I+TXJQ9n/
KfxMNNG1mvDPfelsew2OKBCiQYQOQdodjvBVOf2Nm8rpf1OMrWPWbpTryfAP
8/yjPNedZm6H7jClP000fZll7wjd2AWkimHyUcdxbgzB2CdYHvZeiX/YEvrP
RYG+0N/leRoEd0caLWkrV73dt8cLuXGmxGeFHDcUYbIqQVL+sNdL5tH+j73z
gUz8/+N4vpzvOc6d49w5zmzM3DFnY2aRFEmRFEmRFEmRFEkxmRIzk1nGJJMS
SSYlkiQlkiQlkiQlZibZxExev/f70273b3e3v3fb99fTy8dnXX0+7z7X9nn0
+ktaMD/jeN8p0h8tB8tbQHHBh03s/HlrOH4mKT7j7QdxZinin/R7S/tfbf+1
HeY9mHwW97EjaHYb3phPSe/cpDdehqDBELQYgiZpdof00c201JmWGsNUomp/
NQ+LLmlytSCxgnIL9wLCtfAuUG9jLxCCIu52iMSzPVd43xji763F1+bMG2P6
lSYitYNwDTj6AVVWgoNrZDUv8f1MXYdvw6NA1EEMP/oY3mpCd88/0v2Irlyz
HZ9tE1ku45HlTsLjYel9E6KlygpMbZe/BtJtUHpA7T+Pf8l2QGgDuvJLNHM9
IvM3DFnYQMCD4GeE4TQ6hP0e+BARxY9/mS30MMTb8Qj3gpJADFGQPJqRRTOS
YIy7dc2UfQCxyyrzbihD28hkvgfn+5poovvWhH/uRKNdMoTpkGZDgQslHhS5
kP2Nq+dH4YSfjx+JXmpEk7Rxn1hEQd+207+6aKtuhtVHt1z7D+ODFVWTYZoq
3PUj0S4u/pIHcf2XeA94m2ekJTPTFmc7ctztIme7wN7I0MxB3k5IHEgrknV9
9cTcw5nPliMwtUCd74kDv2sPdAXJXTpL1vEPbesFz/NOmZ4zteatw3nr2Wt1
65koS6LtOaHjhmMPDF8oIm902Slr95lhOLuF3T7I0M47CzyTV8euuWV6eIUR
XaRer/sfXdrG/LOG69+1RC9ExD+qbRwLG2cBkegGEm/9qWT3ucL/RLTzhL+N
w2R2HC/j6LoUcRzORNDhXfF0S4IAQ9vmWUYSJx6IptkHXQS0Ecwbsl08H+QO
JY/E9ZWa/WTkJMjHQ/SP2LmMf8iiBF1ZYet7AisOeCHske9gFhLagW34Jit4
k8j8yeAaTMw/CH6QnUL4AHxV2IkNHgH/jMXdcvF3fXyX7wbkM9FEE8GEf36u
qwde+45lCNEhz4GGADpC6IqgJYAq/7oIdDgOfiH+WfmKf9DO0jJ8Wuj9slr2
/0c0bY5hLLPXOk/4yWeS4gtZ6Zk48w8naGpenrTD390X+ZK4+U+6qc531bmO
PFG9E/gZyxC3WUvOJ/Tt51zva3H0jSz1Rpoisf2kla3FDb6lkbEfljcG1X+4
O09F/heKhMQPb0ynCHuQvTacPJNVSfRbtTumiets5RGehWEH1RYOfqmI+JfE
AtzPtU1UWYmpac0xghRJmac7EptH0tVToaHLUuaWOQguJDAQ/PIk355RVWEb
ugh1pDug8OIoGAIhuRvnP7ONdznvVRaOafKltcOBgyj0/lLrdDIy1lvfPZki
zdEURZauwzGd8iy48p1rBpbuiCz5JudtPSLzlHWIcyrgPAAvQqAhhPoQQDiU
BwdCoztc/0QTTfTANUGg2yhj/ARuCiRZUOPDoRhOJHAihb4YI1CJC/v0qx+q
MzNz+uOcxOUVTETz8/f3Fm4vmqDClBz8sdNR1EkS2Uli+f/h7v/DDZAYzo0R
2IdnlsP+pc/nOgOCvajInxT5U0JPnHunLaw1gVVDDCMQaXntCc3xL8OJtqQF
09ImXxFyqeM+bTqoy4S0qSCJ7mBaq9zNA/7OSOgGgQu4jmOW9aqFZj8TRZCj
S+sc9bHQjKNgiIJkhG+HrweG7DzGRxalqdL81PLmJ5afKk6zlUWeMs+WRalo
EaAEQJ/Ya/APRZahq0psY5dnxcwj3vo8GdZ0QpbcZea8yBdQJFL6St3aP7ko
37MPwdzuKVOXECxFkqHKS3RVg6Fu0VVNmry8zP9++IXFJ3JmVL66ITm0l8E5
zn+ugwvBT+TAcoeLn+hB6ZEmEj/SZT8iTfjnNmpYF8FDxZGvpgD6EjiTwUiG
EagrwoGw6DUSgUrT052LPvlf5z/Pfxr9vE/sz8TdbnO3rlHHdDPRhXWO4lSg
BZEBREYQ6oGnvu9zAm97B93+zO0uwp7vWsCtdv4chl1IEzDro1ZzetOS21rL
b69mHOjH8T+J3RtS75bE4+BvWQCnmqcZ5jJzrY5ttULVp+5kARRhni6pspSH
XC3GHtwLSH16AT9jkUWpNx/N08sb83TnMmeXwnVSWDYAFYACLfPq8a/zM8qy
NGWJqW2xDIds44Bt7DN1bcRFd/J2LsTfdYsRAsVT2mLF1Oisdg/NnQNDtaFK
/aoP+RIvsMT/1YTQ9YhsK6n0VvXh3mrixJY6tccHa4GWCXHR3a5/ookmeuCa
8M9thPhn6KZAnPnZ/yOFoRQGEmgLcUQsSLvW0YrT063ZWewFmp/Hle/zeJYQ
gp9Lm8peKuZabtzPRx7FzXzkMZDecFj070UT1jiKkUgP0lWQr2GTWkBsAv59
NXc8F7onavJFa/94+6u0kN1xYdfRNaYg3a0Uewa136T0/p0ACoWfo4mqdEmT
Lm3RxHWK4JJS6JJn5cW09O1H9fSCGse8QEaYBA75kGNe94wr4hgCHqqiiIwi
u6+hUQLXnsgbkO5HFbGkMpFGLCTdjyAAvuVh7WGpI6HYzandRS2ynYwKPXIX
651oookekyb8cxsVzJ+6zhXMOVk21AXY7dMTYfgp8xAUnaB/uo7GTWJbMzNH
s7Mns7OD2dnOzEzq/fsrvpyxmuG7+rIwqDK4AByZJg/KFMjuofZrhZ1gSfsC
HcjWQLUO6k1sSjvILNgRdK+ShPY1ucIF/3gJBHIRwZG1n4TA/k+0xN5fYv2K
d4t+cjtOPyuxsMPnCBG7AFpcBD9lz/U+qH9YPKdLuOcVur085/X6kNsz5t3W
hn+wExy6/Mffv3bVK1rzi80e4W3WtrEvCta1iSNTeriaOjbf5lATTTTRH9aE
fy7V1QOvZftie4eMESjJwj6fAlH8FWXAHuVmp06+f5+fmipMTSWvTD5jcR1N
SRAPsNDXcJUTMmMd98NBCCRw3WViKhKVX+IoTsVGUNhB4wCdE3TbeEdhA4kJ
2PKrtuL/UTup3wzZFPuDqlTG3OmNR0O6P4+GXD+Dn2VB/xVxt6oi30C6D9Iw
iPzXuyBMZoPLHQoEIBKCUAg83tmdLCm/u1z0kVsRaj9BP0szkB1FaUX38p0c
/KFps7jmOdgOgycBwRSEkhCKgd83uK3v6Gu5sopo15AHaxU2GrDZAEcV1tMn
tx3hOtFEE/0ZTfjn9irbl1rbKwMXBbxU3AXISx06yX94DXRTgrdzIIti4EHk
YznA89zNHTzPVJ0BceCOT0cTVhHkiIygtH3mH+c5/yAoYstvEocKVDWpgbkI
thm978NqZNZ4uSuDv+uWhaPaQsnSO0TM4xhPtTjFabGqy9Ji/6RYxgOeDYQO
eC46fi46QeSpzoE6D6osKBJXPgirzeeDWAxSKchkIJOCRIIp6K6U3Vkqe1Yq
3hWEQ9/9k9ifUCTKqnTtzk72l2RNGd1dRwx8OYiWIYWsCIksRBAC3dUpHDFJ
uKVHH9cObPfBdQxutO2Cs/bw+kjfXvXp6dF4hP38PHx80OUYl+qRJhI/0mU/
IpF+0N9e0aNU2bLQWl862FzubixV127SrueWYlgyPGdPFsFhL8Q/q2P+6WL+
UaXRfe2OT0flF1nSA4EWB7xU65h81Jt4R2oBgQ7owmvfQIM1bfbUMmvwLmxk
VnYbFE+Xstdb3mleunKRxyfdj6gzeUO1bmp1kOkrNQQ/t88M+bVY+gPuKvAs
wDH9MI1LlmSbB4JNPPn9tQLeauC9Dm+NLTA2sUdOkwf5Faqj6PQKj3eGgEeh
ALUam0oFcjlGoGtpYFkCBxm2vufwcph6XGJDkwsN7viR1ezWRtPLChs58TVm
eNXYHKKPjbk7MjR+77Nifr4gD0pqt8xRsgZOdjMQrkC6BYU2FBuQK0EyDfs/
BsJuJk9BhXC9CVsnOAENfUzRdwzfANwIh3KjR9NH6CrqzoyH8szj0oyFRVyU
gUfzPD4Kmmii7zThn/+GaKYEd6sl9o8Q7SDmQbddUxuMDdAUcBY0b+eOC6NW
OEm6qMqWHwl1IDHjLCCc/7wK6McbOH9cGXmyb57Re5a38ozgIScO3ARMOU/f
O/pLO+1LnVdCt0cS3JdFYvJYXB6No33O5j1276erG1zzSLiOa70lTpBsfz/u
k6nvCDZAtgfv1Hh66dwaHmA6swrvdLjpormDh9GrfuedWlnZZ7HaQiEGHkQ+
Oh02rRZUSuwIElytSP3AvAhbFPDQIciEMAtCTPCd92E4yDFx5s+JiMh/lgjs
i6oQ13m0z8/YpNUdRdujaHulNff6iJgh20cfoZ/G3RiaJnf18wXZxl0H72n+
6Q1kDGm2KtbgqTsH0TpkO1DqQhkhEGKhNIQDQ9ftT2Hx8n1ldWZoQbRzihPQ
goC7KQbQfgecBbjrQWh/T1/60uOi1GXckR7ZuCnrh49/e3UTTXQrTZjnPyOW
rcTb6UiCOOFHkwdtAecCIfgReoa/fzEhurbEWTvmb4JwCwSfZxlYclsbjT1k
3z2Zws3RhCWWtMdV4ZovvhbQDkt6ROZeOwjlL6tfi62frDGav/feMfzgh09h
+BSBDwGY3j2dcfx0/bztHb5zl71xv7deqqLEMZ+KN0HuAqUXm8KD2x1fzBan
yNPs1WPxNij9MG2ED1aY38Q2Z8Us9Fx0uHqAXUCqLHCdv2r4Q6EkWazOmH80
Ggw/ej3otKBWXZV/WsYF7PMJMCDOhjQXW4oLUTb4Gd00g6hzR+QjJ9r+KDVh
rqWocHTN6p7XcBo2juKGs7imH5Y1vDikOMIds7XlS6aK01VVBD8iB56CofQQ
F2QPt0MUPwwEQvzjKFm9fWcKQmVINSH/2f+TSEDAc7B9+1NYfQLEPwjaG+A4
xjlofgKB/Mew14QtxEXjp5WjtEGJPapz0fb2J/0rOjhvyrGIsWeFaEp2Ppdn
8bpzeSaa6KFpwj+X6jEGXunmFNOa5263hHsn4gBIQiDyA3/3iGW70kxPpqHJ
Q1/nd0C6BzIvtsV1I91rd51EvJDwQwpt0f7XLyFz0zRBiS5qMMRthqhFE1SW
WdHrLtvq4/sr6neK7YX11KvV1pwHFqKwnIaVDCzEYM4Hc7vfzzv4w2LqcLtj
PPHKD9p9PO5TE8T3fXTHH4d+aKoixzwQO0EZgBkTfLB95h8bTBnhhXhg7oKu
jFOAWPZf9a4hk+NMZpPHO5NKcdhLq8HOHwRCCgVOB+Jyf+9YO7MvY88Pgp88
HypCbEUBoqCIkXRa4eBRF7jhjwZAq9ijmrMSR88oq9tNELFCxg6FNcibIKU+
3B8PirUOwFD7PnN+RRRl6Q8F65gGVeMLso9ngX19QW4vXcq9Vguvd5MbByl7
+3ptFbUehT1j3mmsh8720rBfhEQZkgWIJyEUHLo28pZMkd/oSnrHsu7gN8n2
v5Arq9hv6vJgbcNWH1wnsDcOfhXBFqxro66VowILenwYnnvb4Ex843P9LcXe
vx9g/pn/pi89mXLel3XCPxM9ck34578kminBWMux16scR4Oz2WDZSzTjle4d
NE2RazuVuEARBHUENFEEP2Zm0CHOefehEINKFCoRKAYg7R5+TzjLzPDK9bHn
a3kKqrdy57w18XqtPYe4Kw4rOSDnYCkJc37MPy/USX3ltq2SbyayNM0yHAk3
sItDEwL9eOJnGN/68cQrItBBVeZZpp5gE+QenPZDWmmQWEMSB0jsEYnae8Ku
6MZZWIHfZNQsLfnp9BKb3RUIcPIzwh6lEhRE8g+fD3R6+dcvL2s/weYK+BnY
51MWQkMEDTFUhZDj5Wyk3h6JuBGrECAA6HUh1lpB5jxaVbUdFojbIb8BZTuU
zJDR9MOsmB3xj+UIYdv3kVOqvMA2Hos2v7og4xHwxAXh30Xkx5jzrncT28OC
CypuqKGt8/SSjka/kDmis2EEwsXvEfDGwB8Gr6/vFO8tl+rCw6F8BGriOiDT
HGNv2LXliErcOWW4pc8MLRVYr8FmFTZyp5b9ph796yGCn0MBccEVhLdNQbjd
rpnF9bcVf//+8KIpK/b/XPSlX374fem/1mP8PguPdtmPSBP++e+JrPZRdN93
/v+1mKa20AFyPyYffQpmDVqaZ1OU9anbccNxOgddZCloRqHkh7tvdrcdl74U
rU/rA8+Nhamd0/l9WExg+PkUgYUATDsGRG175/cHugdRpFmW/kBgx+4OdQCP
+9RHsMdD5cN5L2N3B1kaZ+hqHMsRaSH2L7NLYo2eCOBfEfwrBBIXXslx5rPI
N2Bvln5/OkqSRsuzWR0ebyQUgkiEw15c7pDJbPz2tXX9p9ONFfDSIcmBkgDq
ImwVIWR5eRupsUsiXBBK4qavMyD+yUq2u0b5uf8njRDICjnDKKFo+2mBVdsQ
jK1TRfJ76KIqimwCCOVuzD/ogugI/lH6cGYUb+0mF/lr6VJuezuGmMcPnRAc
IQtAdw8azuG1EciaMm4W1rYrNmfNvlWxrWfNharg6BShiA7AhJ5CbI3oghAP
XltbMcluWu4tqYN1LQKh/abOV1av74vKERrOMMe0oxx724itCiMQTr56TKrP
zBzOzWHU+Tr/Z+z8uX5f+okmelCa8M9EZFmMZe6JtkEZBG0CDBlYsFmYwR1Z
eV9/lFmFQgmOkCEESkAtCJmtzh2Xk9kDwn9ZBhLNTpIGX65Wppyns14c+Zp2
w6xz+NpYsJ+cGWq/B4CxRL6AKpXVlar6ck2F2O12WhHFcK6v+UTswB4PVQDH
ehD8yFwgXMehsfHTqMocaWqbRC48558h+Hkmg+dyeCaFf/ij1wp4xj9k2a+6
kjECMRg1JrPJYrYR+aAff/ZkdSJoqqTXOiXbQVWwZ3bvPE3E3lQKU+3KTLs0
jSkoz4c4J2EkpddJOBwDUuKmrFbt0QxR3lpRsYHzfzyGYch4FtEPw4qOl591
WA7B2DhRZeq8ne//rynSDFPX5q2dIfxTeDATaoLY+YP4EEERU3erTHu5z24u
BbaOcz7ohOE4DqMYjCJw7IeuC6qr5et1M9f7Veaw1hLTr0Z1hoA6kmA3exIC
RRD2IFCzAVgBVgEMhDvoJloPCR0xyU5S5kzKNiPnEa52msgzx+211QRr6QnT
YC/Q6JFFwYrT05WZmSNc/D6PmQeXgBHFX3Mf/vbSJprotprwz+NSOstttkX9
E9lwpDg+ld/JMcnyBMvUFTjQ3efc/7O4bqX7nJLCvvYgZT7LFeGoSPBPHKp+
SG22bjWy/FJZffynbDOJtUkS+59qsy9Xay8t9fe29mtDAQdiekeq9K8yZy4k
j8YR+ax2DqxHJ7bB6Vr/xHzroWBUeYGprXMtQ9EmdnFId7DnB0/8NH6TkEOa
85PmSyQWPJPAKxW8VMFzBUzp4Y0CJNesy19a8pPJUQRCFEp8acn3s6dp02FL
M79x3Nwa9SRFt6LmEWftwpix2/nQP5w/7n08bMzhEjAvfU9BKsVo3SILunzC
CyQVri9Kd2nKAFcdl/AzVknZIa1si4oOdmxteVeNyEcWKwg9l7cOpylLLH2L
b8UZ4OhqyHbxZUHwwzFdNdP+Z1KHt1bLQeewgIAnBqdJAGQxOAvCgRtq1sat
Wpmn8rzWoZQAklUCftYRehMgZCLg5M7UyTCgxSNQ8zzaSJxU8xj9P/AZgbqz
syeIgubmRnNz/dnZ0tT0317XRBPdVhP+uVQPM/CaL/J6RxdOdR3xp1U9PLuJ
6/47MfR1rvVIvAOKAM7/mbcYKbvr3KhLXg1pe+EMtJElob4PBfdJZDXr+P0R
byQS3U6ibpE4XhIv8EwRfSoN2E7OEMxo8ldK4ZYEw9piZe3weIOYiLpFJPGi
I9wSgVbEcao8T1fXWPoDjumUu4pv9Exdjyz+pqchaT76L6P3DxdeyOGNFuZt
8HENZo2g8F+bf64iVcy3Ws85TjsuGHrQLXYQNx7HNC2XqrJ5OloawfLpcPGo
97FanAY77nOYC1AKYWorwzgusUc1DtQ5rLVFtm1lNbdlq7jWGx6qR012qRY2
JCJfXOAOczbdPzs1RZqhKvJMbZNtGvAsOObFXR2xDIdU2W29bYh/zAW/o5/x
Qmvs/4lj/88JwqGd06K5dKs+noh/Gt2x/8dMeH5sn/nHcAp3Ofy0lqAfVjhw
LCRyflTEGdVECpCE4KJHptbMTIVEOiKRRoQdTe4XE/1XNOGfx6J4it3uiYk/
pwbiD/gq8b0V7Ws6vds61amqLMNQ4Vr7wm2QumFKLf9k1VN2LJzwph/SYciH
oRCErHsYXa/99LZ4S/FdMVmsNuNMkJbMpGXLm83qK3vpObv1L70i9v3+xvev
zPPWkp9xtj94+h89fTcxGmPnvI7ptn4JwEk+GZqiRFfVaMoK5YcbPVmUIX1K
PGF0XkthRg8fLZ/5xwBv5SD6qjURXdXgmM4ENhBtYBPab7IYkduhy0ZsB9Ud
GPjw/TtrgYINJ/AkV4/3ZRn08SADLB8dzlfKMxevSnpW8kFKNUqrx2jlMDXt
JSt9Ju3+miG+bkys66N2deCqE6zIkiRmQlWVoW7Q1XWaorgsDN/knXwruc+u
T7ut9bDzrOiDdhAOQ3BEBL8q690rd9D+iaIpTrEmPBxe5P9YPv8SaQi/0J0p
hy5yinGEIHMg/DJq9kwMHV4jwbjDE/0BdWdmzvv/fGl++Pgqvx7m99nf6pEu
+xFpwj+PRYUSnwh46Yk/2uNvr2sECOlO4Q5cQFR1jqGrsEwdjmXAtQ6nNeIP
RtmCXbnR8GwfBJyHQUfbayvtaEL3Mt6Iu72P4EdXPTUfwPReb9Z3MusbTrmP
3jpaL7kDoQ3Yup/24qNbwkJv5+1acc51tBCCpRgsx2ExAnOurpvwAtmOTzW5
K3mQbiyavEb6ECZRyi/4Z++UGHvmTHj7Xg0vRcBdO+8XTVc1uWbcKlDmBPku
NqnzSx+hq0vq39XlovbD2i72jaAPQcEK5XUo2iFjOd7X1rY/e7/QiQ2Z2h3k
nHC3s0JfU+Rv3v5Qv5Zq36FP763Vwo5+ZuesuDsqbZ/kba2YIbN3yyMHwsxE
hltuiA5OvtR/nYKqfShN5u7YLZPfp5YT9F6BdVbnQpsHTe5xmd1IPjL4KU1P
4yTncfPD5a+aHz6q4q+JJvqZJvzzKOQP0ksV/nCkIBw+ls+uexvBQvqzGxXw
/iiyIklT5+naMjKqKqMOmHURqym1Yc44TOkNQ8wmd+nu5EQ/ShTIqvNHCH6W
oyNaFhhFoOeBkoSlEMxs1mQOEP3cT8Lbrcqio9ndo8UwkDNAKwA1D+QULOzD
LjEdzHLQVybvZTQYZzsv9LVFgQO6okma9pA+xZ/Q6i94Z2+k2O3zVgYvBfCE
3qWpcRUVRZphG05EG0TnHB9oAjh5WOkB2Q6I1q93XqlvR5sJr7WLTjjyEv6f
VcivQdYyiht7PkXOTsAP2q4e4rv87d7jVloUaCuSI3UeNEVQF0B5n2PWZB6b
MrSpTewasx5z0W8uBU15nzZ+N0MrQlFWLMXJlviIguodMbJiXYig6E4O/p0y
fko5Qq0n6I0EvRKlpf1/eibg7YWdP1+K38mfi99XYHHp0bmAJproR03450+q
H6dBmQVtLq7E6fDgyl1hEf8Uy/z+sYz40mr+1v+j7Z/cvI3bVSR13mV26I9i
bXgl+0Vtebg2AEoamBXgNIBdwwi0EoUPOz3FLkg3gX9ZcIaxFhV6Oso0fPSe
LSeAWgBGBehlDEKLEZjaKNuOTw3Vq9aO4cXQGhz6N02PWbYSf+dQ4P4m25m1
kRT6OvL4SJXFSPDOevDW0iXNBUgLSRK5gpjnX+bRv/QD0kqF9OE8MERTVrlm
nDut8oI2hJsIIUMUpHBf2wUkcm2qYn5jKWk/qu9AX9Ha1x5GdQdhTcsrLzg4
PhUByeY+6EqdW3022I6kONhRZkFXA2MbjB0wtIhZHrfN9PmNZF5MQerwFtpK
9+5ynJY3xAjFWLE0J57mhhNsT/CR+WT+pI6+bv583vyQ6P+8NOGfif4LmvDP
pbqPwOswSYcGBwYCGIkAxNhOhNg3fjWlc9xGSzTCrh79V91LdGegKFevNhrq
oYrjCCD+0ZQG894uJQXM8jn/MPKwHIa57Y7KDVIHCCyXvJa1nhJ6O8oMGJo4
7EXNAa2EKWglCZ8Co3e2gr5Sl0evlDrCojb4rFMRFyQ8bCIO0E1JnvNAHABZ
BHdvVsTxDhLTFhP5O4oUaCv4vMYWzGzDtOP0vb1PmnbjQNinNGkhTfoQQWtm
qs+zrxnq5tf8o48Q/BMk+OeryREs0wHPCrzf5QVJ/TsIgQzFxFqntDFoCjPb
gpSDG1lj7qHzaZC1TlT5ltQfu5VzQ7BXlSfP9HXsSFo7AesQLAMwdUBbBUn4
8DZHnujhqzs7e/bhA/b/IOD50vxwZRL/mui/oQn//Bl196lQZcNQSFTFyj/3
g5ViBLqawhFmhih+J7KAxkUlKrRfb171CA9WLPueyJ9VJFuz25Wl8Bk1DYwC
Ef9KwCfv2fvVotIFkg3gffb/UJVZtrnPX8d5xc8Eh8+Fh7IY6CrwKYgRCJEP
2qL96e32c3VAun+lomkEPwIWSPmgEIJShO3lq+OXbwaSEG7drC2AtoS3qgwx
T3a3LIueIvgxdWFtgMHA0ocPLpjePH1jaPBMwLdg4xoR/HyBBLqyxjb2x/Ev
tR83D9SMWwntnPeRZuqbiHzQm5LsgtSFt6JfzqqS+nYUEa8mGdJlI/p8bGVL
sWQXJ4rCVFmUKoujWYE7yLrp/wlxTdajIn9LlcNuH/Qe7UTFuO0MsxAiojX7
TLfCOajdS/Boooeg6vRMD3f++XiOQEufk38+fcJJ0Y9HjzSR+JEu+xFpwj9/
RqdJ+ufpkwqiGFZ93g8WxNC66h0kHGWlMpximV9tCBstUa0hzJd4/sfjwKdp
Cpy1vsABoh0Q74Lwq5s7bzcqDuaVme7sdu2T72gxdLYYHH1096esVeUuyLZA
uAYsdR9wqVqBYzlBkCB1g9wLr2TwWgGv5CNFErRl7I356Bt92DuZdrReGhK8
nSvljdCWMzzGQMoDpRi0MtDJ8Pbde3g7BS/fDXRlMDbB1AJjA3QlIHF3nqtT
ihQYGhh7EA8gMLCeYiqYcZy9MbfoyjZD1aErW1TpN82TKdIsQ9Pgmo8RAiHm
UbhxC2WpE5eAsfR9uqbCtZ6JnfhNqYLYlH48UB498guJXJuIgmRBl9S/K3Lj
KNpugOUOsZxe5rX/e34QezMh9DdVWRz5+pp/rI4FX3A5mVr+prhpov+cClNT
pZmZLkKgDx9h/hPGHmTz8wh+Jv1/JvoPaMI/f0AF1/JZmgFd3ufuu5rP/fAV
1+IfJH+AEY4x40k2slD4p/c4edBpLIRtnexmv+w4rm4clVZrty0fvqXoujLX
dorIR+YFeQA3GpL7QPK5mJ696ePtRkT+7Au1/405/n4t886Sfa1PPpV4xes4
8sXWntews0wHeFSHB1T7oIlge6eBN0p4KT2Vhk9xlCoJshiIfD2O46pJKgxK
mc86lQlAIwW9HAxK0CtgegbezcDr6ZGhDqtdWD0AcwcMNSAJPc81aXQWff0L
/9gI/tFV8dmX+ZFl/uUD0aiyPENd4xj7fAv2+SDjWTD8LIvD4/el8IEmDNo4
6OL4rSkDGPMuysf+sJj2iMBTlcWOtVUwH2AEWhuCZWMhECbnC9RWg0x8htWf
P8nSv7LI/4DwjK0PH7CbBaEF2j4kFaemytMz7ZnZwdzc2dzc6dzc0ewsevBv
r2uiie5AE/75A8rvLh8l6FDnEGk/4+iVigAhGY5/XTkL+opC8GMqRRHz7EDb
jRvnHu5Cd/usYW1fqYXyfYgsj7MtRwh+EPmoo3jKhiYOqgieOCb+7KFh2t3c
7ZBgL/GvePtfsfOJwEFiWDj6EVt3ylQdkEV48VRVnrs2lOwSozpioE9iQztv
1fBKCtydCt9VQ8bdLjGs1xgazqRUeMwTxD9qCegQ/yD4mcL883YKXr0/RsyD
yGe1h7f6Gvb/PFVEJft9TRE7RhACrR3jrbGFE6HFod+MqqfIcjRljaFpM7Vd
hqZDU1aXeAGqMsdexRPkSeTqM87JCwG84I90CVCFsAuI/8vqMP5uWBYtqTJt
VbYri/5mRuq1RDV5uM6s0NeQJ041hG8Nvd+dvcVkmtxuUQmG139ubkz09xs8
+lDsn9dwHGC6aLCDtg8vtTg3NVWdnkZWmJDPRFeTwWB4+Ggx4Z9LdeeB18Y+
dZBjEi4gMfFNWYa3pyJocg8jtDs8EZIuE7D38i7o+eE0BIAM7SAQcgxrP3tJ
Kck4qnOHHf6gcQfpHCJ/RJkqaosNbfG8XQxdW+LZR1IPbi6tS4Mhi02bxD4c
9OCPWhGmqZIiTVZFRhF/mX5F11Q4Fsw/CAwQHhjQoVLYVaIK4oQZEjlBt0Ro
5uB1F8wgFzj0noiLk38QAmll2BH07j28enPy9FVVkwdDFQe/EAhp8yCPAkmw
J9iry6In6jwmIkMDl0ehfWnkhLP1e6fTEj+0IoqviBOIfMaPUJV50qyfRK29
4MMbdGoltjcyREEgcQH35/VP4mAWkY+uOjS1cDKSqY3Wc5fOItZ6jO1ICbw1
yf4BoiCdacrt+ZjNLB12yAT2GD834dRinp9Ewa6pL9PVl5a+6a7z8BBoooku
dHZ2ZjKZzJ+FUOf4+Pi75yCukEqlXz+ysrLyZ2BjdnZ2DDY83m/Kiyb882dU
9KxUQpRBlolLwA74cCSAHg+q7JMk/W5PJPNvm4oRx0nVC8f7AFHC0A760Qkt
U+n7uMz+HrlX+bZRLUiGbf6NFyCPpnWlprk9sByerR2B5eDU1DxiGOq8dYJ/
YqDPgDEHhhzoUqAKY/5hW37jM7kQTV1imw+FW0ScKILJZxwnkvtw2jCio98e
ga4rc6x9tBiu/UtTaOpygkmpcBmHIg7I+CAXglwAz190nzwrkv4JyMKgTOHM
Z7SVRUDgPiHRrOzNNN9dFQcOpNGhPDFCW5G/x9v5/YT3S0V6s05ayj3jnLyV
w7QWZgy4ifR7NWahJ/Q2U9+69FUiX1KZbhlbOAfbdkZk5pxgP5W+fpcIxLRH
2I4kbzfPd5cMpte7u1PJ+BzhwBzXIZ6PUMf+n+GEf66h4vT0aO4Dzqv5urpq
XF2OEOiBBcIetR5pIvGDXfbGxgbpW+n1+q+f4Pf7f+SK8TPX16/Z7OyaGp+F
wWCMcUuj+VXzlgn//DEhBKqFKL04bZhinKUZwyS9E6Lc+VkUoR3jOf8M9vHs
SGxhzD8n26OmqRz77vndMgeORURUTv3ZiMDcjSQNxbXFJiKfdaLx4CaRMbvW
BxI7zLEOJC7s8NEmMQLp0zgKpgiCeAfo+t9zy1hkeYoYVTYY5wkrAzgQhnbQ
j1dJkmFbDgQOELswdEm9OPtI8LnxDnU5RScX2LQ2l9Hns055zBMOvUsieVjr
FZ6zi5hH6DkT7A15zh5jDfujGGth1kaSu13g7ZaRcbfzTNv31/bqoqtrJErt
pRAzz6wRPqzCnBmmdbiJ4jPO5e+LvemVRUq66gmCn4t5Z2jHOgRzF+4kENaa
mcHtfz98QEY17tEtfqXySbPAHvYExAdmHP8yfI5/yYadm2PzI9LJ7Nx5rs7Y
bqoGvrzEaAnMPwh+KOcNdpaXCf6ZFJhP9NA1Go0uRQj0yPy3vxqIQ9CDoVDo
XnmjXq+j49tstotl/Pp0E/75wyq4livelfLeSsKxeOOD0LVVjvUEF1I5sQm+
6h4jD2zrs8HP8a+zfcL5E4CRGw42+iVN4pvR7fk4/bTLJ2jn4l6mJ/aVcHrt
7/I8554yWTC3B4h5nIB7LyPbRgg0AhLDxzK3+Bun0j1QhnAUDBmCH0QgPPtP
B1tcKqoqz9BVOJYjwQYuD0eGdjirxzRV4dcvZK/2BNsg84FyH6ceqcJ4AQiE
eGh9hChLMdpKlkEpMsgl+kqOsoR9ZTRTAgEPy15h2csMS46i+37KFc3kp+j3
rvUWfhRT1/6H2rjgHwQ/cyaY0mL/z1NW/9KX8F0RebxqaIxspxg1nYQhBLKP
cKq2Ktu95ZK+zUtZgE8LY49EMclolTmjvpD42Ci/APOhsJy+g6Kzh6zi1NQI
XRb0h/3T18OwFm7mq2lMTx+Pj4aO87X/B/EPuuCPqsB8ov9PXcoPYwj58Znh
cHi8k06n72k9IpHo61OP/VS/eP6Efx6dGPoGz47dJjIPjvsgw1XSnyeMi112
dWzPVIqsE/nPe3C0B/1d6G4OKuYfnD/1HAsOBUTxzkUuh5HYV12lnIe73RL5
z6RhHBWS7oPQE1KlS6u94SZBPhcTSDcALIdnJPIuy4xWfiJ04pwWsQvQzitx
/Cl7d+/QtdP6Zaebb0VV5hABMg1tlrGHjKFrUOS/+YWiaYu8DRyAQ+SjS2EH
lC4NmhgoQnglf1eLPC9T1+FZ4QVv+FaOx8e/UsJLJTyTwJQeXkm/D6yPxXdH
ZdGSvjpcO8F+tm3CEAghnDS1QZH6vuX1Zs7kbtm9B5t7nd/7n4/HLg50cx/n
pSwt45EHxE05uU/LxxnNEue4zYe+CMe8+sJBk1fL3arX0KPQAKfrzBPpOstf
5mEtEgh0fZWmpzvjBoOfvsr/GR9wfr6PzjXRRA9YU1NTCB7a7fZ3j/8IFXt7
exePkMnk+0OODx8+fH3wbDaLfiwWfzr8ccI/l+rBBl6pyixn7QTRjiKAXSjo
Dq6JYo+KzAvCz0PGZf4tVdRtyO9bGil7L28/KFhbGWMhLA9+30oG8c9ZdxzL
0BLOnwv+Uf46l4NmivFdPcQ8yhSoc9hUWXhn6ykSeVPr3P/jIsxJ+H/MnWPS
wgZNk2cY6qzVHtty9JwXesH3P2NvRWA/BuEIhEPw+yHvF1oW75NlSYQ9K9Ir
RZ2YpibfgcvNNHGcem3MnycgKfdBsnf1096X6Joax3wo2oS3SpgxwQcbttlV
eKeF58Kmvj768SXc7YAklFNlO6YO2IYYMjfGzp9D0JYHIl/q4pmWqGa3bg2e
bMfAnQQvsji4/Uc/HblRnZ6G77r+jp0Sn6c+JULUXIxeyTAbeVajwEY7mbvO
4X+AquBhoBfhqgt3Dfk26TrlmZnW7OzoI9FdZ+xnQzY/fzY3d+frn2iiO5RE
IkHk4PFcUr6CHu90Ot89wmQyv/5xOBz+8Lo70BjJLn6s1Wrox1Lpp2mZpJ/r
PpY30S3F0NX4G9jzoyb8GIYM6FOEHyPwpZAcSep1KPd3NQmvNuXXpnwIh8Tu
S771l5KMbo1DlO0oCQTSE1s1OsBx61eZ89ztpiSEsUdfxb0BkaGdacfgvf1A
W2xYDs++zkixHI4uCsHI8jhVnSWR7U9otjCEUpDIQyaPOB1SCYheC4GuJcw/
Gzj4hfhHnwEDwT/aJEbHv+7/QaLIswxtlUSLvxC136phygjTJnivg1eyw3+Y
CXMPIc0lXiC+OyrdL6iyXUNjhJ6zeoA9P9pS/+vkH2NAsVNb2z/dyYC/BOEy
RNE2D0FEQT9bzPnUSzzye+V86hOy86lPXxwdob2ViI+y73l8Yz1vptbX6Tpj
+CHfNl2nMDVVnJ5uzM72Z+fOU63m5iaenzvXg/0++2s92GW73W5ECK9evTo6
OhoQuvinmZmZ7+ChXC6jR0QiUZJQIpEYv/Y+FrawsPD12WOxGPpxNLrk++NY
v+CfCQLduaTBn950riimsSXYwBm/miiu/jZmMQJpEzgTWPxDq2PhjlXssgu2
Vn92tGSIWk4zD5s8IttHdjGV47TLL8QvKUyjGwrc9T6J4XmuqLy34okPuDHO
ISIcPBNKX4GpjcFzTUpTqJtafURByEztAfpREvrSfVHlUm6W1v2nXgQ/JSjU
oVKHagWKWUjHIHKtQNjVxdBXOdZD0S4OeCEEQuSDq+8j2G/G3/z9y/+AqIo8
adHzDyP1TNB4KT14JTt4IW79y80ggFwb4BL7H8XdCvB3I+JABgGPMtVQplvy
eE0S+qYAfz1j8B060uCrQLQFqQ5k0LYKsRwEI3A5+R2M2/FdTP3GSbkE//x/
12U3ZmYGOF3nE/aDfVeudbt0neLUNDp4e2amOTNTmjTYmejB60dUePbs2cU/
RSKRXz/5/ujCYrF8feSxk+q3b+Q+VjLRhaQBjzaXXG1VrIctW79jPWiZ6jcs
lGYYmjzbqdSNC6l0Cez80SUxCyEiEl5zhvhYmTCtlGS0y+xBk4ew56TN71U4
6JEfn0k3lnibQ7EHSPzYC3VzagPmvbAUxuVdyHDZdQ3e2/sv1GlJKC6PZZTJ
gipdUsSzYv83vw7Gfb2juhGCQBbfiMstqLeggRCoANk4RPcO78UdQ1VnmMYq
136EEEjmI7pPB0C6h+u/mKbWfZzxO4n9IVUqryvXDbUW2l76HNLHLdKy7x9G
/Akn/YSdJNGD24QDDfGP/vJXAHvDw3UGBXsxoTcp8MR5ztB3T9gqrQaPtxHt
NCDRg9wh5A8g14RkAfbjsHfpMevTM4cXebk4I2XlPAVo4YaJvv8NFaen2+fp
Op8+X5nlc/iZn8feoYkm+v/W5ubmX8eJC6QZO3+ePHlylSdPdE9C8KMrpBHz
bI4G23CGbAtO1k8OVlvVGxyNpimyzG1015aNC6nCGITkflwFxl69ahed7xQP
UHNRejnFQJaL0SPeSyIaK4owx34oRieNwj+C5AtNc8oOH/dgMQSzPqCm8KzS
pQAeks7f7fKce0JPUOTdF7gDHMf3bilj2LBZXvcPvSlIVqDYgFoTajUo5yET
gf178v8AvnR5hqHCtvR462f8Tez24diOmcbmPZ3ua8nCcW2xam4frh0Nrcdn
1v6ZpTf48WlCb1oWqxkauI3PBpHM7CBSesw9UBcurwL7tfQeGeIff9+RAX8N
4l3IIv7pQbYByTyEfub/KUxNVWdmjsYI9HVT4o8fO//fd3mEQM3Z2SFCoPMS
sPPLcjyJWE000cOQXq+/updpwj+X6g4Dr+pUzNKpb8HQjZvwgIeoikIUZB/0
bnA0sjz57o3+49zG8qJPtI1HhIt3sBODY7nkfnqHohsKPMepLACaFJC4kWeK
yhvz4YwD3m3D1C5QYkCOwIL3eHa9tHv8m3nrWr/GnrPudpxhCGUgVYR8CQp5
yCYg5jvxWNOW+3sXFFWapisyjHVkdH0F/Xh/57qQ2BfS5MsIeC5yojDVnILl
AP+X6eI7a9XQxkFya5B9rV97b3Wqsj1DCw/UsA6JfoYHoC0PJfs3dBhuZI3u
lj0G7gLs1yHRghSCnzJEkuD1Hvw08odu9JWZmd7s7Nnn/j9o5/8cfoAYA4HT
dWZmD8dXhpiH1f2/vywTTfTQ5Pf7C4XfdESBCf/cs8Rety6ftg+6OwT8BAjz
EeXhm6d9Q+mqAzrHqhEVKKRnTtK7OGmuRPpYJc0V2auHTENzRXbz5ntXEcNc
PeefNBhK8ESYeq4sP1HXnpv6Ly2nz02HC3u9uc3iW0PQD9md/vdNcr6TKWpc
L9hc3Z3gyB+FcAwiiIW8gz1HZeNe38VfkTyaNNbb62fwYdtODnuZuRinnGQX
E/T0/ieP19aMOId5N1Q90HipMb01r0/ZdxXJpqY40FVPWasetm6bITHj9NoP
N4k9WaIaR8Hs6W5EwZUBfx6COQgkwBM4cmzkTL94IbrXV6anW0ReSn16Jvtt
XkrXR4Y4HRI/7V7OWi8I9g4kIdwbAZk4eL0uTw9ZeWIYVoOYh5WdpOs8Bj3Y
ROJf65Eu+xFpwj/3KmnQq8un7P3uLsE/QcLG/LMxPNSXrjGQFP3VRd83F95u
Mz7GOMulp4uHT5eP/l3q/TP/JyI4DGOJs34o8YAqBroskNghEjNI4idIojRJ
kibxwzO2xDujPwnNMJQ8kPz10bQ+jSlitGbWNsvr2w2Hs7m1Vdu052x3vmy6
qs42HnPNf+3my99xK+JpU7P3YdtGifm51YyoVxEf1kQHFVopvpL075wVfdDe
h6Mw7td99FpveWuyvzVvioM50sImiRF6ysuy+Vm2IM/gpm+WfrwW027kjLt1
q7e34e9v+Q4drqZt85fw8wu1PWRIMaDCgTYPunzo8OGHmXEcR0XkO5bH8dAQ
dR40ebwjv8ZA2okmmmiie9eEf+5VEt8ejn+1axfxLwQ/e0T8y3rQUsV/4yf5
Wr3Z2Y+v1ukfIkJKU8oayrgg4Z4I2F02rUZdumFw5OqiapJMS52/dSzx4RQg
dQLmNoBEdpLobhJt941296VivQj9LHSjUPHBleJK+qDWHDNZkqurcZMhpEOP
0JezHFpHwDwTskHIAi794OYLlhfYhmO+DUSbINkC8RaI/ohviSnucRXAV4NA
DTwlwT+x1FuDasm3wy4lJf2GEg7V0FdCj9Mu0AoRbjG0D/04nCFkjON+3Ude
aD5X6EgfbSRa8Bm/IJY1JcqeSNnmy2tscelmCLQaVtuS+o2sEYGQPaU376tv
9u4a7hUMP00uHhg3EmM7FUFfCF91S2BY08K9I0UCtEVctmZsEfNhK7hbgvQa
n/eJJppoovvVhH/uVYLdLUUkqMun13rNzdHACSMnTv8Y2o7a+uI1nD/hd+/e
/KNcfO9iLxWlzBO1ANRiUIlBKjjls7pMSo17w2/z1xBNn2OuVrmbfeEuiD3w
Vtd4q628UadfSNxZ6BXgCFkGOhEo743iuui1nTkMcpHH6Is4IOWBnI/nkEq5
IGLfZKlkSYptGAjXQboDij1QekDhBtkOiD+XyLHWWtyNY876DTPGLxWFm2NL
Bwh7xHqQGrFJDPBssS0NRafW9Cv7bl49Kz/taOGYd3DA6R4w621ytrAUTYRh
kABIAfaaRWDggQZpQTe/5GRw04h81AbQmEFlGsp0PYGixhb+Pqh9fxqGaVBh
w7GQaA8uJxom4IG50BfA5/7PHEdFHBwh2jE2cFWg5QinMBmboC3h9PiJJppo
ogeiCf9cqjsMvIq9LnnYr80mTLWCpVOzdOrmRkmbS0oDl3TO/JmS79+/e2pc
mPKwl8tS9plGBDopaGWgEIGIc8ygtHg/7fFzl6LpsgxzlbXWZlu7//L8/3L3
/mHaA5CLQS0FrSS0YlD1Q2are+02htSlBJfWE3NAIcRop5HgrVIIMh7wmdfu
FEpXN3lrGH5UPtCEQLsPmiCmIPTIE3qXvw3iPZD6QRYAqQ+EP/RNuoGWGSGm
uIfgR2oCxRqobKC0gcKCf3y23J62Gpb8Tm4lRSvkud2uoH8i7J+y2weMUm05
lvpgH0XhJA5nMRgG4cAFFRLZtkDxskUVmW6os4DRDno7qFeHEm2XJ6n9rclQ
5Z1lnPPT5GK3D4YfJTEnRYFZ6FiEI2KIPNUerrMhCYGmAKYWhp+1Ac7lNndA
VwbFb+KiE0000UR/ThP++QMSeXalQa8iFlIlwqp4WB4OCF3XrvJ+89Q4926H
upgWMA8UAtCIQS0BuRD4rNOV5SrH+NMWl3erFcU+RZ2galKkBb0hbreWXduH
IS8kA5BF5oEkgh9z5tqtiBjkEp95Kudj7NHLQC/HW0RB6J1e1wW0LAgzdT2B
HeRujD26COhjoAuDOgCvRHicujSAQ3iqBDa0IwuC8NY9h6i8Ikd2KtZj+NGs
g9YB2k1QozVYsDvo/apmfsdOTwbJ6Sy70eYfHPN6A3azS80WF4LRj5swZz0L
4nm1HTdUNw9TpJX1eYqXKSpLdEPNGuYfZFoLyLR9rrj6cfH7OSZ/QOtZsz6w
sp5huao8X1Pgr/O+4Z++AEr4/4ms8XK36yL/iSoDhjqu3L/w/yAikv2mNHCi
ie5FjzSR+JEu+xFpwj9/TPztTcHuFs/x++mTl+rFP6r3r+2fZn30lQKfdSTm
AjIea0SjdARWoCsvaxB8z1IHV/VR+2puy1ZxbzS8Gw2PrewypW7ST5lFqQpY
I7kAtBIwyMGowFutFPOP+Jp/AFZEccQ/fCvIdjHzYP6JYv55Jx/zz1AVxync
+gI2bQaUMewLuqXoghpHfiY2gNKKyUe3hQ2BkILgn5cS7bTN8Na2Ph8Mk9N5
eqnOa7SpuepiODnlcM2sDWbWRi+lGUc/Y2tFjTnP6xnT3LKTzI3zVG2ZEdQW
0FhAaQShskfj/oma/e+0mV/1HjjW81xXW+w7koVP5JFjWfhg7AWS4fkpHf5F
LRh7vcB3taXh8/EohgYGIW0RB78Ee4d/fvF/Xbg7EJ7wNY9zt5DN32RSxkQT
TXTnmvDPH1MdV68TY7VvVMiM9OqpHiHQ/Kx3ZTFNW6lTyc2VpfLchxhLe57H
wnPW7m69V5LCa9SELIa43ZBY10dtKt8N85CYlAqPMZDysP9HJ8X+H50M78v4
gLjoWodaFoQYmibHfCx24OQfhECaIKj98FoCL/jwhN7SpMBQBFMFjBWMQOoE
dgHdUjR+lS0diHQYeNTrGIHG/h+ZGYRaEO5syIKu9+a1Kfv6gtdPjsap8fRK
KDa1ufdUZZ5eHb7RdJ+LUobMniaKfTtUXer9x7UPVBeZn+IomkL1QKQZ8BRd
Gj//kbx327VeU5aY3tXeiIInD5HgmQbhJOLHOGiix3JfnY8jX20eZL8Mf2dY
EuwNjECS4BliHmUaD8mVRkDgOWKspf7w4v+6huNf+YUF3DJ6kZiU+n8wRuQw
QoMCC4dKezzo8aH1fYXgRBM9BE3458/oZJb4M/jpmynP1z0IWZR8+VT37uXa
9Jvt2fee6SkvW3/MULeZ9pRgr4tuMYoUKDP4jiOL3sebuEfRV7JsWkvIxpnP
KhEmn6f02kt+/5Xo9KX4ROIHwRWydOiSBlt9xjfAvwv9fxcHTxYPRJs450e2
i7fP2Cf/UBukuYA6Cfqv+EeVwP4flqV1m/VTuDmmuMVTnkkMOOaltGKTrwIi
Io4cV9+L3Y6XCs0LtebdqmVm3TG3uTNj23qtNUuD8FY3eCEtkRhe0bbxy3sx
5t59WJ1b2VlkhsncNLIlZnRu2UUz5G+zzhtoI2f2HW2nIVSFZBSMcTAnwBQD
3f6JwtMQ4ttckoHbAX0lhiXJWs9zt2v83bbAfcB397jbjf9D+MEdIz8Q8DMe
Gb/yeZIIQqD/rhdoEKNBmQ0HfFwbCGJsaOdI8LfXNdFE32vCP5fqbgOv/bED
fGER/xkc/wHEY4NuODOaLE5TZSWaokqVl8niDMOaFHp78gRoijjcoK8RtcaF
R1ZrQ1mK0ldyHFqLzzwlzXn/pVdfCYdvFfBOTWTpxEEWBtEvh8fSpW2uFoRm
kFjhOQVeUOHJfI801yXTw1RmHG1JMyHSXFDkBkUEd3HU5bChHfk+iK6c/7NV
NPt6G/vD7choB20vHl9mxai8PFPU5MqHQi2I9DjsJdAg+Dml8Svj5zxd0JI4
3KcS6Uul+oVcjaBLGgCRBzgbnRVdon8g+u5cNEP2zaz5/fz69KfNqU+br+cs
VO29JxD3vw3WCBjPHEWLv+/MQKiGx6cWErCaAHMU9L4j+XaZh8inuL3043Fo
xjDDkmDZskxblm655mfRSQYfDUIMbF7a3byxP674+/cDfDHHY9SIeamU8bx4
YmTqf9QF1EAkjJD4kI+rAnFtoHw8UhlGIujyfv/6iSb6g5rwz30LD3TGMxPH
3wHJ52Oj0d/Axbv5G8jbqckiuLjY2MaJpquHYOrijAt1HoTex5RuQVmK0ZYz
TEqFtBx/zuu+VcKUAabNoC+BNg+qFEagn75WUOCoT0WrIN8A5RaonMDg9Z8v
9p99OiBNlRaXNucX1kj/Gj7RrdyNHkIgeQhTkCIKshCgH9m2388i0bmlO9W1
0PFWEvay4MuBPwt+tB84Ok/2JrNTCIHowjpT1GVJjljSI6aoQ+V9KVeP7NPf
0FfnhJsr2iDLmuc5mrytFtteoehjH0VbvY7wx5OSVfsUbYKqS5HVf8KjNzgH
dSJYgz6uS0t8+jOj4cNedzMOvhLEG5BtQ74FuQokt+qi4PAuaue+0oFtCdxU
CDMhwYY0BzIcSLEhyvr9Kx+eclNTx9jr+wP/rNzZ7/4DFI58VdkwFBLwM86Q
HyfJE00S/pIeaSLxI132I9KEf+5bbewD/4C9PRd/A8d/BseTo28nuiUq2Oso
kng+uOUQj4uyDvE0dlMbE9EbS1FXyJmadUuvg8zc+gs50tfSyoKfNL1JoqSe
i47eaUFfBlMdTA0wVEGTA0UMhO7LX0iXNnk6kNpAtQ2aXWCKgC8BkfhELOjx
WGXI8CHFgxj3I8X4iWLh2Do8x4nACch4jlOWtXOVtTnypgAeJOqrQKSBSSBe
hWgBgslvp6iTWQkqN0fl5smczHdH8PuopQLnHXP1g8ixpNgja/xkTWBZufdB
YIMzaT57o1ZHd6fq9PRXoL5yfqdeWtaops2WT/6BMwmBAkTLEC9BLAuhMOw5
a3fZsrtqWoBdCoafLBfKfKgJoCqAIg9T0D7zDk/0Z5SZmuohnvw6/oUvKRm7
f9EjH2+YBPiQtW/7NIjTMf/gyJecIB/1Q+CfiSa6VBP+uW91ZmZGmH8WcOQL
O38o2FbId+IDZ9pS5/xT+4p/Bph/Znf772wl62Fv42y4CaNNOFsfnqwd3mTo
6lUki2bUuZq22FRnbzLX/kJ0U2Fe6mGslYWuoWwf5FGQR8BYwy4gRfRy/llg
eBmyDk8P/7CLLyT9V0p4yu+KZCCVglTYF7ArUBJCXghpHoTZVMuKKCBTJLXq
rF6V0UmjyqusyhxS7datMXCVYL8FyQPIIutACiFQFvwXLqDfKhlnlovcN1TN
NNs8y1ub5Zjw3eFU2qzzr36J7km9sfPnwllBPndWKMVvNcrp7YrV03Psn7mi
4InAXmDg3KnbtR75HS6gv76Mo10pDsaetgi6YuiIoS7ECJT4y3B4M1VnZnoX
+c+EP+088D0//18dGd+L0kZFFpHtIyWwR0mYHMe/2pMs6Ikelv7z/NOYmTmv
upqf/yvfudDX6kO0gPmxG3z5PA3yjr4DMiwx3m5DGj7TFPGggdVD3G7F3IMP
HpjZ7r4xp7aIWWOIGlx46AYgFlpt3/G8MLE/qs5UDPVDc/cUMZjlcGRqH9/4
aNNM07LMxbYkRa6eLIT5RxYBSQDUGUA4xNu6/MikJe8TbvmV8vSdAaZW4Y0G
3qjghbAr5Pd4jDSURVAUqvSv172LriQjBd48BIsQKkAwA74YXJ79o0zEDZWS
udUwt5s0B93VsMbBXYFwB9JHkO9DvgfZOvaE+IODrSu+u6CflogxizlOs8Y/
6AiPeqJuS1ApPYj7wsG5s2LxHNS/BGsW5eK3a3H9Rs68VV7brloRC6F9g/9K
6Hh1DTdXcNpPhgN1AYafQwkcSKAlghIPko+Sf4pT06UxAqFvQOOUqvlP6Lce
F4X9R1UNkHtJOtQ4MBAQKUBSIvlHjKvAso/PiTfRf1v/bf45HH+lHVddnVee
Xok67jDwmpmaQl8DzxHoyzLwn8HDu/gOyN4sCPbasijuL6cb5z+XYdrRebuW
3zg72f08dMxLIJADwHp0ly4ggTuoSpUR8NiGsAGwCXhrPQFz59pNm5G6QcoM
XbUi3WQbfUJHXuI5kAYQX6GznDBtDYELV0X9+CqqPk5iZV7I++9MMLsOcw54
bwYEQq9VIzajQF9yQV4AOYHN+dEVowZrggpEWpBsQ6oBiTKEEQIF+t84cIR7
bk02jcjHNjhaPz1ZPxvSnWxhWBQ+dSJkakKiB5kDnAmTQodKwt5e236ttxnZ
p6cSrFyanUmxYhHGDS7Ufag1M3OMPqXok3lRrLSych6lJTpOG4Oq1YgWmSGg
uo8F9BH/eGgYdSp87P/pSTAFNYSQ50Hksd46i1NTlenpzuzsYHb2ZG4ObXFR
2H9XRfdyKUDpJuhQYmGHzwEfl8DXuQh+8rvLf3t1E030jf7D/NP4Op9h7HhZ
Xr6TrJvrqjA1VZ6Z6c7Ono6/CSKb+9CbuRsHOGMtztrI8V0tceAYUZA8BtLw
6KUu+lTh2RgNXQT5+AkEcgNsAawddu/kvGNJwyldpWM7xmS1Q/ianAQCrQ0Q
hrWve7STOA2a3GXhKkO5zjX7+BspwVaF66iyrHmKZp9lu9xzxbRWnwgqr3Uw
bYOP2zC/i3cQAr3WnD0VNCHCgThXq3u94V5wp5nBtpgIYOWOzh04cYQ0kdE3
ebzKZNzUrG+cDZ3EO0Lvi7rJ5AWEsqQsDu4iroSK1iE2ZqfQ8dZ6Wn/Dy/eQ
VJyabszODvGvzKdzSv8M6s0/cstu2pYGOxRc85Xh4PyfugCnAI2DX57HWgU2
VnZqqjQ9jVgo+f79317Lvau4t1L2k9sR6iBBP0vRT5P0wwj178LPI00kfqTL
fkT6D/PPYJZwuVxkHpI/F5/+jeYbGYRA09PoK3Z7ZgaBWW5q6g4PzrDEWOsZ
zlaZu1Pj7dQ4jiKJY9UVcrb+4TaBPR5i6Dy6la+fDU2NO+uRyHW45NGssXFk
P8PBNRdxrl2CsqzHoK9dz9GU3lo6SRDjpUBMlqwyVJssnYup99B1HrJiZ563
9rMXstfbYi+8McDMOnx0wrwLpu3wzgwvVUOargC7NHDTVYa3lt1P2wkGohfE
P4cE/xxAtgmJHATCZzsXRxN5PdpCzkpcuj2CHseuM8Yul+cXeNr28KkzAXtJ
2IuBy3/k2C7/kdFrf0TF6en6zEx/TOnjRp1zH7p/yl9RNi/U7cuDXQoE6BBn
4cqvJBuiTPDSBusT18EjEwKeqmcF2cTtM9GD1X+VfxBg4CD7/KfzqvNx1RWy
cfHp/H+w+JSi99FMIYoOd8kR+zzKRMxQq9iO+1uETwYn/4yGq52WKnlnjYG4
23vyaEZf6dpOYJxo5CK8JQ6AtSPQFq+XaBRbX+hFadhtjseLy5Z5aorISBGv
BkUkcJBGG5d/SleUAfZGW7gHysT/2rsfiOb+/n/g8+Pj/vrwdf/c3H63m8zG
pEg2JoukSIqkSIrkiqRIiqRIUiJJUiJJUkaSTBmZZJYxMzPLmExmicxkmsjk
9Xu/z6muXf1v7c852/PhmLPT6ey9c3W1Z++/NOjmjV9Fy1S4SP8eooqxoL7n
ODahp4my1t5/9c8Vsbhio20fHYbo5IpsQd6B+eCENrev554v2Lm3O+h0TEcj
K0Ju3Ba2DeEeVi/V1SzVLLnHVn2Ta/6plbOJOdvIm6WSL5dS6VepLjWaK7U6
oFY7EoL6wP7klHt1LrA1e/6NpXu/xTOu803rrxcMDysVfCA825bLw9NvzC8E
APBDuZp/2O/t6GOv46f6n4qE+p+kJh6UkeaVpXbjVo/laMjtHLs4n7gKjV8G
R3zePmsqJ9Crn13u2LP02rxjodhsnMeeJSH8TN/RyPnNr8OXA8A/5d0u5z0H
zhooyiJQ+9WEgpYVtKWgHQVtKuisiVxv1AbXTvmalsOde9RrpUEXDXmpfJPK
1+P6hYuC7nXjocrdw/+5Z06GWG7Zv1uy8als9r10wB6ttLV3uzRv/71sR+fu
Tv+pbeLqclGoztoSUpDYdWri+lI7rJ087Js6Gpg87B8xdv/k7snLhGN5IbSz
dmfeopMtsm7S8crN+/Mx/YB7pNQ/ob2e1rPYE5zQOYdz8E8VAJCCXM0/loKC
oFr92JmB9/95mnxe6NJw/9n4ixxoeG1ZXWnf3vxl2u8+Ouy1HPVYzL/2f7zM
1etXWd/p2Lf02X0jgRs+AP+GhYSHYX+459j16fdWDp80LoRbN/jwLra1bZFz
tcxtLA8dVcUdde5+Bc0paFtBh/+go/+hmza6bqWLZvK8/HepGrXVTZ81r9yw
i3SbSbcQLlu+Llvwl05aVF3zEZq+pAlvfHjc1DdzPLhyNmEMz5viy4e0arpf
3rqaW3L/0YDVurHO7tiQ1z0djYidmsQaremb8JDn8zeVk8ZPlxavdrfJaiL3
IXkPyLtPLiPZliP72S4aSFFsWk/LFbRVTbs1tFtLxupslwjgDYq3ZLtQqeFW
qQIaTZyPPBVX3dI9rrqVu4NPX2taWmhdX2Vb42Iyy7J/BYtA7TvmLvNpr9XT
d3rWa3X/OrA1LX/SRFI95mxajrXv8A7bPRbqOabuIz7C3bGi92wZlmoUgWGh
8mf/Lzr5WxhF+4viHRRpo0AzHb8cDVQ9aq+d8jTMX/6ne0czbC4eM5eM7hX2
Lwk1Uov3NHdFvPvQuKl32jIwbx9ddI+z2LPoGps+Hnxdtvbtre4j86DbOR66
mIqEp27CbGfQ5fi1v5eieyYn/fuTs/7NTbIckOeELk7p0kaXFjpnWWiT0r4e
B8jO/XQZrVbSXi2Z6+m4gW9s5zszWD5sVZC55kihuGQfRuLGfm//oNOmTP+e
lWmxZSRXw49I7M8ZeR51VVR0q9G4Utr3GIivO7/ZurnXZjxo2zY1rxk/Pb+8
b79x4brdyGPPgJMP2B90U7+DP+0UIsb5gt4/qCB3A4XbhPDTRX4d+crIqb87
Kg2vq/vtL2dZrBw6rh53/qtl7r+di8quOWXH6FOPbPa4eEszZw+PfXVGjF1j
+72ju+9OX/NYdXaw32M56rOe9NlOeizmDuN20vdH1kaO5+Yvto1kOyL/KV07
6cZJERaBDsm7TdZslw6kJTiq5TU/u7V00kjOZnK3kKuZTpvI0sDrgj5zPFZK
xkr2B45DobhlH0Z/Keh/FPQPYUery9VFQyBbci/zvOAQ+nMG1eoLtdqjUmW7
OMDVjDmbV+75smUOPrfzaIBvw17qO+UTHjLBpbKH3Sre2+e6lR46yaenYDkF
KslbQUe66/Wiiev7Yf/L8WWzm/Umb5c3PhyjWaHZakPovMMi0DLLP+x1vlXI
5pXltq0NFoRaN95ZdSM/jJ7Mz51vbdPJEflO6YqFHwfPP6ED8m7S8bh96fNL
QN64ndLTWiUd1pOjmc5a6byNfG08BVkbyfT5Om636+V0VGMSww9LPv/3aftf
Be/GoEMEglTK+fyTP3ZsbbZgz1lsIPAw5I8PHp/ztQmaVm1tOykb8J4qtVNn
zatxFnUGnDRyTmNBGrugYR9f5IsdbFyMnM3pI9sVvJ3rvJksheTWk7+S/FXk
rKSDMtd84WycJsLxF5ed3qjfd/9y3gxGaEoYhf97RH6YppzRN5q6JO7Q1uQJ
dlzGem6oL/zQ67v+lfkyDJlnpz1rq7cHe3zx93MrhawUPCL/DtnR/wdeuJsp
o7Uq3uDlbObJJ9DOI5DnS/nHPa3jlT+ndV6FUOfDYs//U9B/hMd/CXFIXD0E
IEWQf94ku4ZXk6vDFem7pJEojcdokm2b/oZlZ0Ov/aHfQwNe6ndT90ks28V8
VDvpbVq66dzjFT5DXh6BRvx8tdNeK3Xu8nTEzvGvGCI7lafT/4xsq+iolE4N
ZKugQ8PFunZV7JAco6Gzl3M5btvajwI9Phq5oWl6GpHG9tmRfc9PF6vqNu8P
uU5Hfa6RM+fnZ/+YxdHsD/+KUT/LIETDwjYUobTMvfyBvp3xUev8jG+DRSAj
2VgKYhvbWbkxTTqXM1wYkLjr6TLe/rVXS7ZGXu1z1kreVp6FLA1k/KT962JB
TzuVZK/3J+af/woR6N8K+lvBB7Cw/CPMRg7wc8g/OWDruMV+1XNNY8Q/9OfZ
J771oePo7tfu9a95e8tYmMauaSREg37qsd1nu7Bc1YitfjbQus6bwPqsvBaI
bSz8/DJRy+pjrY5nXu9ZLtvo/4dl8t++ZVV4s/hyU+tZLtmfKFwTKnemb2nY
9zL/rBy0iBHIHRsK0FiIJtij63bo0P+jseptGyv9p5axwNl0JDR7F569i8xE
r8aDaaxY2zms9wY77miA+D/rJPEarUlhf+jsqjN9r/umgf3JEcvclGtlLrC1
eLXLtrnzzQkHwg+85BvTXc8Z+MRNpjo6buQ9f1gQ4p1/ammp4uPv9c/ro9u8
849HoYj8H6HN699CBPp/QhYS639KtUmsnia7v2dFMi22jCD/5IADd4fvfjDO
PyL5iG0fdZ3x1cAGLPH+zWD3tJCKJmM0ekUDP1qbPZWqx+z1s+fNq7ftRurc
5yO/OozUvHxXM+F9Psczq5trVWz2/m0a/rd5rGB/TLXcXyBOschC3kQ43u94
I4GsHLZsWtv33L8Ofd1H5z3sccfR+ZOiNsxN952Yx4Nn8/Ho84oYSxRnQWjs
3POTK3/A4mgORllmGxFiz6ywqMiskIJGb6gvTS/6gb6d8cHD6ZGT+VHrAstC
A6apzJcBpM8zVOoZ013NGmjlafz7Tg1tVtNi+fnIJwsPOae0F+vlt3tVZoXC
q1Dc/h+hzuefQhD6hzAKLBVrRgM8Q/6Ru0Vj/dHZr3PeRDItNPesXVB/QGhW
OqbB7atecU3SGaLxGxryU/v+RbaLzFUMHlWP2uumfA1zoYb568aFcP1skIWi
F6c1zK907JqHahWjgch0TKjbEpdYveGVP537b89lPbvVsGxqXjtqXTW3LOz8
dHX1zp2tYY99Nna9+jQjtLgixiLdT0e+vcbZF1ndraFbMf9MUcLSssSb9rKQ
fwC+yDNc6h3VXU7pYywFzfEtNq0/G/pSv2XPgt63athQKA4UCqdCEX4e/86H
wJdSUVE4RcsmAhDyj/wt7TSYvZ3e2MAdryjg9T9+6vPRgIuGzPf9q/6uxPwz
6GP553vLUqRVxYC5asTGglDl8Ml757SsGTt2DntOXEPe0FgwOn4ZG724GXAF
uszfnl86Od2HeyNnrvmH6JoQfnaJdoQgtEwPM9HvrXH2dcfOFj/v7cxi7YTw
rzcrPLL9oYvoTzsyAaTbUoXC2KDYrFVsNyk8NO2mKevt2Fe+kUUg/4phW6HY
VShOFAqXQuFTKB4KC2MaTTBTS9FBnkD+eZO8Gl737O22YHeIRh54FdDcKXXa
qMsc69686Bw/ap4RPjgn73gXoF4HHxGW7fJ+W8vadrvxoNN03GU+7bY4WPJh
iShjr87yj1D/E14Van6MwrbB69ruJ68v0vSi+8eN9rO2UKxbiEBjQvJhj8Ph
eO+JqyVNLwqQEr0z/7twqNnz663RKhfVuqguRIvnNOekd1cxTuSa0vrm9BcL
+k2FYkeh8KvUXpXqpKAg3cWGfIP8kwPWD5tYBDoN9vjjQ2Ea2/LVbfoblhz1
4we1wxc0es37P7OdPqdUGr+S0LCw2ry61bKx07JmbFxcy+RL/9rb6rdZJkL+
BYqtCslnXegCNHN7PexxpOlFN/fqxAh0HukKU+8t9d9QXyDSdeptTdMrAqRE
4LR2eqdg90znfKgNUvM1tV1R2wU1h2n5nOY+//40kNffs89kWmwZQf6RrMtx
HS2W8z6EOzW8G+H2R2vobJibd0/bzN7O4/MuW7BneEvXt6ptGi/sstz0nMbZ
1nV807Z7XjeHCVu+rXVjpcu0M2A/Gb84Y5lnPh6du7+ZjgRHzpzdptQvqfZs
a79uz9JgcTTbPK0s9lg9rYfWn/ZlAkir0/3K/rl/rhwXnoQrgtR0Sx1x6rqj
rgh1nFNTiBZssfHPrwKQEcg/6RDWaPgkFcXFfM2apAYshCf1fAAFiz1HT2vo
WOrJ9NEaOsu7DSwFGU9at09a1w6a6ucPGldOWjadLVvulk1X44q1euKTNblS
rn1ro892PHzmHj0/G/bKePHQ9q21X3vbvccHLAUNu0+HXKf9NgsLRRl46TVj
DQtCm3vfWD4JIFt8JzUjK/9eOym0RSpC1HzPF6/pYdstdQapOcjzz5d6AQFk
APJPyvHpKYpL+DztWh2fsF2r/e6c7e7BUl7zw8KPtYFcLeRt4ROoOpp4Ctr7
fA2dRNUTWzWT31i4KmSrofNGumymUNO3Xui1rsP9IY9z8io4cxuevY/Oxm6m
Ii+n65GRlrWl9u11loK69o2dO5stq3m37kPUVEW2Wr4BvCNwWju0+H+XjzTm
izI/1UepLU6/7ulXhNp91Oij2YOQ/KZhh1yF/POmpBteec1PcTFPPno9n61U
3HT6b0Wg6wkdX0PHXM+XDvS30UU7385a+WRih/VJlOorTo0Vt556irQQtQtL
jnbynUiSXW07drYHXfapyNUiPawIc+Ys8yHc99M36RowBekT3qskey0PxlfN
/EeCPQbQEgdv8J3UdE/9PWUs2DgtPrkuZxHokppD1HxGDceRSmt0bNnSke0y
AjxC/kkhp1JJhYU86rDwYyincrZV8B0egb4xbfvtdBnPP0f1fAL5QBuFOijU
zoOQg+WfOj6lRhrcuOroppXol1Bf3Sts3SzIJFcR1GM5HLvwL1B8TRgztSV0
G2YRaC4eG/G9PWdgw4KvdfO2c58vAfbrkNrT2LMGvuFyp4IctbxK8L6N/zzw
rZ2irRT8aQ0h5J5TU6XfXjew+H8nt/6zZi3c9+mOr8rZtu/XL1uKtlw9WSmV
TDsSy7TYMoL8k0J+lYqHHK2WBx4Wfioq+Fb+lH++3BEoPCV0/jHVkb2JfK08
Ap238VYwayPt1gbHUr8CoPegii4ahTofFnsGiAaFxz6iLuFT73ta1lb6rJaJ
y+CSEHuMwoQ528KcgfMPdywXvf6WxqVA+w51W6jPTv0OvvVaqcv883cGP2Jf
1NNxNa/teWgXsnG3sP3iKSiKkWjwBvtB1Zmttn/+n2Nr/29mp2B+Xzm7p5zY
+m/3zD+zXTSAPyD/pBDLP7e/638MvPKn/Cn/sFD05fof36g2PGegzSoy19Fp
I28FczbzZXRMdbEqxWO36mR7Vr/p4qRGqOf5JWSeQXGpTeIrb3ZTvP27V2td
X+09OUqs/zEKEwauEM3Gbl53hK6bcbRt3fUc06CHRgI0ekHD53y/14ZaoCw7
3yrnHX6umoVqn+6nisEeHpVjbeRJV2ssyNfRdoXdVHV2XNM2/FfXxN890//7
a/x/TOtpqbUG+AnknxRyKJWhx/4/WqH/j4GnIL1Q+VNScvHlyUud/SXecd31
vIG3gu3U8IogUy01Km6rFJ5iYREcXZI9q9/D8s8D79HRIXy6DQrhZ/Cx/uf7
f+Y3Lc53H+4/9f/hnX+eFu26nwgFeo5eTl3YuHjeuc9XLBu5oPFrmojwRxaE
2JGuzE1zmIOGbFs/vELQWB631tBl06v884uiLeSqS0k5QS6iPVoaLqOJcpqq
pKkKvvMOFngsxopjYwWSD0gW8s+bkm54davUQU0hj0B8/JeWd4RmO8XFMc33
lq3xDJV6x3SXM2V3LAUtlrPNr1PYNQoee8rKeKxi4UpsVktFBPIcVF397v/T
KySfPuHzrj3uS+Y+tG9vdJtNQ27HxOXFTCwyex+diYbHLvz9tuMXZ1YOmxqX
LzpN1O+i0SAPP5NRmgjzWiCWf37lSv45P6iKu+vooonXs52nt02/17Q05t6b
vbIuxlzL9272OHt5ktyl/BuG8FE1nTVQrPWP9q+Hdgo2xQ6rUlpwkLS7Xh2N
Gmi6kuarabGGb2xnpjLb5QJIEvJPap0qlS6VKqDR3LAUVFjI27wKC6+TXbPP
PVgSGNUGx3S7BQp+KbFlTexZJPas1gstaz9m3S73HFVfe+opnDD+K9ZG541u
U5Kfce1bG12m3d7jowG7ddB52n9q7Tk6aJibeXFa5dBe4+J5uzHea6NhP41d
0sQ1f2T7fafUkRPtX2FrDe9Cc9sq3Fuh/3AsXZ1nevcXx737i1HHOp1vUWiL
LjcouEpnc9fJrHtiX9L7dyoiJzXkb+DxON7Okw8rPEtxpxgIn0dCv0p4zQ9L
O8u1tF5Hm/W0UU+rtbRQTZMV2S7dJ2TakVimxZYR5J90cCiVfpXqQq32q9Rs
/+cXPFerhfzzVs9qln9Y0Pox+06F21wVPK2NuuvjZw33Zw1hR537oPIn12xZ
W2nf3uzcNXbsbLdurL53Wv2Mq3k11GnigWfIy5MPe+yz068Dalq6+EkBpCBw
WMXDw0Mbb0zklSc9wk5nmiLQsG2LRZ0Nutil6AHF2bZHUZaClh+8yV3QvW5w
b5dfH1WTvY68DbwuyFVHx9X+DbRr5JFYr5bGDTztrNeTsZF2GvkjS0ErtTSL
akCQJeQfWXjsWV3y3LNaGFzPOxfxmYWukq1feuFow2DfrfAeVHkPqxx7lSm5
5ldUjx/XzThZBGrffZjeKl+z1G7Z6jaOq5tXZTxfouhwWX9rrxWmUfr1NLbu
aWAddaS8/3CXcX7MvbcYc23TNUs+FiK2HdLDDoXXyD/hO0jusu7VsrOt8qu9
ihtTZWS/8mK73LaQ+kGIIFmnzYX3fToaL+dtXhv1PPzsNdFuE2018OogNIGB
PCH/yIJdqbzQaB6KinkVkO5pZkUWfviwspSNAssiFoH6JlXzRu2OrdJ8VnsS
qDs5ryHqjz50Z7toSWHp0VZLngbaVJBRQdsKIfCIY+sGhYF1PTz/pLojUM/e
4qhrZzHq3KarhPxDLP+s0tm496ervx3NpKCxFWTH1lwY6dPSiIHmqmi1jsce
FoG2G3gWYolI8u1fAG9SvJLtEkmF1NpeXSrVuUZzV1TER76XlvKN7RQVfX1Y
mZTtmGqnVtU71rLTYM1ZtN4fqyMaIxohGri6/ZXt0n2DnSUEUxU56+mimcKt
ZP6Ljv9Bln/Q4V9/1v90U7wtnurxU13bc8OnWzNByxr5d+jGRPcHdL9H0U0K
zt/Y+4/ebYIE+Nh5V2lkQKgCmq/mbV5rdXxbquHdoQf12S4dQDJe5x9EIMni
EUitjmg094WFbGM7XpUq24VKjRN741X0l1A3Mk40RTQjPLL94TiPDbJxu1VB
p3UUaqY7oRu585/k+ifZ/5dO/oc2FAn9fzqEQeUp1ro01ne4POrYmb06WaGz
DQpuUohloYWofcy9l/KXg/zhbi8+EyPQqIEPfp+p4s1eE+Us/Jy1S70KWmp/
zH6RTIstIwg88nJcUOBUKj0qlT0V3aqlw+5pjtx1CfMuTgrhZ1Z4nBSO9GW7
dF/lnNXRfhW5haFSfAydMFrc9y9yCvnHqKB42+P4qYvGiPV7S9l+UZdxrte0
NHy6NX5mmglaZkLHk+eHIw5j5+bLkXcA38Ij0K+Sqx7tXb+OBvTUr4v1aqUf
fgDeg/wDWbe8Xml3NyfU/0wL4Yc9TrD8E6O31wwKm6v4QKTzBj66Shp8i2W8
8esx/zzPltNFjv/l7V9rijtnXdxVF3PUBs3pGjKzdtzev10yaS2fd1fPe2pm
7JW9+58vVR/VCHM1FBd/fZZyyEP2lkJvW3Ggs4Rt3jb8qIC8If+AFBzbG88u
2u551BkWItCkEH5GiPrOL18uGH2yrH84reELlkVb6L6VV6rEWtPRnPRdnnnd
za7Q8znUTPfiglld/DHWTluKqymFd6/SvVNxslaWpgJs2DotlwNemgjRzDXN
sY3t+PnNfBfvP1YodirTCjN2asUZO9NUQgAAiUD+eQ/aXjNp96DuxNF0ftl+
+9DztADrYJx6L647j6wv/xXuTmoo+LwipxAwqJOnIHYw2843yqNi/+dgM0Xb
6LaN1wUFmui07jp1CwHMOSbXL5d27zdMtL1PW8bYOjs4v9dyEOjz8im05x/4
eiNrRKsxWrqiOQ+PlG/wqFQkrlgnzivOBxWW8QGGX5hUM6LR8O/9c+4pPhVD
oVCPhAQFANKG/AMSsW+us9ganWet/mA7iz3nlx1uf+uR9WWk8RnLyVNHsdb2
1eFe02yveaF9a1RoZurk1UHZ5l7Ue9cMN/tVZK0lVz0fAs+ykKUmtp2yMcLz
7qmtm5VD2rHSgY3MVjq00B5LQevWjpPwUJCm4zz8bAgLz7JtLUqLAd6Z/A3h
x+XqxEVVxEmlyj9dVyXMQk5R8eM4RF5fpKXiEnb87o+VX4StJDXr0wH8hEz/
mJVpsWUE+Qd+4syVyv+exv3aA0s9S0FsYzubxurX51wdVFZPdncYp4ds6+Nn
e5PnB2P+/UHndvpmVP4u94Let2q43qq426l82KlkySe4krIGr4mjkfXLRTPt
OsjiJbuPHF46ZfsW2u/fLmL5J0QzQuXPJrudROy2rN/S4vlb+eekoCDGJ9Us
eZpUs+JpXRUDrwJ6J/9cPk5FLkzFKW5CfZGf/RphKehx5d+n+amElX9T9d4h
zzmUyseMzX6oxA3gB5B/IAkeR0PkspXinU9rOmRuih79UHvD6kSvbWv84nju
xrkQc81F7OOBowH7trB4mVTYZ7SeeR0fEZZSs/bJ7ZtVKx2w2HNBnhB5L8jt
oVMrHbL8cxQa8NNkjBZZ7BEiENtWr2nOzSdTeulUqYyy/MNCC2/8EicVFxdV
MbyXW+xK5YPYXsZDztM85GWGE4Uiyn6NlP45P3mZ4XGKToAfO+NttU8d1djP
J9u0qVn9GfIW8g98l9tef3vdJsSefqGvTv/TYvGZUD7Z37S71O81T954Fuli
mYJLD/7pa8ewx9SyNZuZMmRL91LHnHNq62b15Hf+OWOPbJ8d+bWs2vF0226G
Lmg6Sgv3tHxHSxGaP6OJw8AbcwgcFRQE1erYc2UOyy3i9jiv+Buje85/V/6U
PeUlvg6vV6G4Z79G2PZifTp+KR3GlMEPWZ7rKtmP02MFo+GxghERCJKF/PMe
tL2+ybxffRVoEap9BoTxWaPCNiREoLTXArWsbRqmh5r213rPTsajvjm6WqTr
BQpOhl19roPG7cV0FyDrZuwTa8HFQ9pxkOWMHOfk8pHDScdm2m2Y+PeqpX3X
0318Neh6GPPRJEs+jrvRw4u++b23a8bcKlVAo4mLkUb8m1r8QCkqDrw1r/iF
Wn3/XP9jeM4/Bp9CcS3mH3ZcrPwRuxLx9em096lYnxfyjVel4j85Qnj2q1SU
GNQTF0DUYSk6SBLyD3yL/aQuetUqLOUwLCxRMSFso0IcSnsVUOvGdo/F2mBc
7nSaBy8947GLqfvQxO35YMDecbw76PaluwBZN344PO+a2gyL/Z8P7WSxkZmF
n63I6pR1jOWclaO2LcevXU/Pvq9376xn29E1u9P8wQWFScU10cLf8/88FBYG
31lU5Uyluhb/DBfHi4n1RWVlDoXCy36NvDrOnxajkwZ8j0Op5MmH9/MpFdf6
cbOfruf8I1Y8VlQ89tX/QgWjTP+YlWmxZQT5B77FaavnPX8eJ+p5kX+60v3q
TctrXYeWAddZ8+F2l/t44MI1GPL0+e3tp4djwXD3kTXdBci6IWPfhHl4zjm1
erGwdbO6c7exHV1j+7P2iedzZo1NiwetSwetHyefZ24lX1flUtjOP5xa3KZU
nqnV4ceWiN/dMEwKxYFC8eo4HxcW06DyB77BqlTGn3+QnvrYOxWKgNjBTPeq
/qdUe4cKRkgK8g98y+lxXcjfLDR19QsR6Ln9q/f+pj1NL3ptraHzRrpupkiL
Y6+g6+hk0OOfuI7OxGj2nqZv42PB6z6bM02vLjWD231jB0NT1rFZ++SsY3La
Os6eZuzVXSqVR62+0mgeip7m+SkqutVoxOOXGk1crEoq4sdvNJqMFQxyQ0it
FuZk0Cb2STtRKFwKxSWPQFoegZ4HGPKMjZmmIEnIP/Ath3tVbnv9dbBFiEC9
Qgrq59VBsY7UjoUXWdYNMVcdXTVTvJ2vGUqdFw7NuVX96+Co1+oYcJ0Nun0D
Dk+3xdq6vpXyV5e4/o3u3rW017m95lAqvSpVSEhBQbX6eRFe8XiQ1yNpLtRq
d64szgsZc1hQcKt5c0ximUWhcCgU90UJc5WXlLKMzWejAkgK8s970Pb6Hsth
jeu0Puhril63Ptx2xKPt4VCLLw3hhwnbauiyWUg+3ULcYlv3hUfjP1F3GPc7
9w46dk1tWzv1swvpeHUAyCSbUhkVZ/h5zj/inFRlBpZ/zApFQKOJCHWMD4WF
MSF+Z7vIIGPIP5CEw/1qm6XWZa932xuctrrjw7QsZe7cqXjw1tN9m9CzqE/o
YjTwNNa+g7zfS1w+e33Y33Ttz/4aGQDwpqOCgpBGc//c1bnseU6GMrGpyy7U
MfpUKo9SdVJQ8MXLyvSPWZkWW0aQf0Cy/AdVdFYvrPP1e1EwYaeHz/Z8/tUk
c3ZaF+MLknY8rRfWyRckBQDp8ahUQT4ng7iQiu5xhLsQfq7R1AUphfwDkuU7
qLp11QmrWryq/4m33bvrv3IRj7U2dvncW6lP2HgjGt0hAgFIjkOpdAnTUsWe
F9IV+tiH0ZceUg35ByTLYSwP2moeLpqI2oUI1PMYXahD6BT0uUNjxZWvkR46
hNgzJEzYOCJUIvVlYLQ+ACThVKnkM3Oq1dcaDYs9oYQ+9gAphPzzHrS9SoHL
VBk8rX0INNJtq5CCOuiujYKNvF/0F9iPqqMXzQmzVY8J27A4W2Mk0JTu8gNA
0o4KCg7/+99slwJyFvIPSJlts9y5V3l+XB2218bd9d5NhXdDYVtSkO9L0dR5
XBs+b0qYrSgx/3TlZ1/ou3kDbVbSXg0d1NJ+WjquA0iKTP+YlWmxZQT5B6TP
tlW+Oaw4mFEczih2JxSPFUHxNgp90gpmO6wOehvoVuxBPSgkn2Fhp5fuOhyW
/Pv0XyqnnWqy1JGtgeyN/PG4nh8BAMgzyD8gCzeOOgq38KFbvP9Pj/DYJcwL
9JGD7Qr3Se2lv0no7fx7BiG67+D9gvLMzWwZbVfRST15mum8lQKtdNZCziYe
gQAA8gzyD0if96CSAo1C2ukRWrIGhMde3rDFR4d95NhU5TyuCXoaboPNFGml
m7a7yxb2NDMllw7bQAktl5Ophgcelnyu2+m6g0JtPAKdNpARVUAAkF8Ub8l2
oSQBba/SETqpoZDYjadPaL0aErZ+XgUU/3wY+9Fu5am52mOrPbPXscdTc/41
exH5xrS0UsH7/LiaKNhG4Q6KdNJVO/lbef5BExgA5BnkH5C+S2sN8VHwnUKd
z4AQfgYf88/tJ/U/IPKOaqNL5bRbTaeN5G+hy3YeflgQ8jbz9q/1ymwXECBd
ZPrHrEyLLSMIPCB9/qPqG0/900SIz9MYChMBBX7ajcenUj0UFj5Os5bTLmbL
YmtCFZC9kceesxZyN9MJr/y5mNBlu3QAABmF/APS59ip8B3XRH0NFG0VegH9
4lu8nYJNAcuPGm6iGg2PPSWlfIJ97dOi0jnKM6HzzehjqxW8teuwlsx1ZKql
rar4gkE8wa1SxcUoWFLC7wN7BADIUcg/IAuOvUrvUfW1s478jSz2UKDxzlN/
8bPwc6XWUFExzzx8pcUyvomLDZW+HYF6D9ZG3abpkG0u4pqLuKcv7T959azw
jOv80/rwgiG+VE7L5Q+Lhqtpvfglv0pNRUWPUZDdBL7o0ru3AgBA7pB/3oO2
V6mxbZd7TJWBo+qApfrsoMq2Vf6TqzmUSt7sJS4zbTBQeTnf+ErTeh4AXuk7
XB8/O5qPelboYo0u2cZ2Fm69PylDtnhGSv3j2rPR32/zqKDgnt2NkhLSCVHw
edHt99MgAICsIf9AfvKrVLy6g0Ud9nHPkk9FBd/YTpnwof9nX6DOzbkRl4mF
n3W6NtLdLj3sUHyLoqsUnA07s/UWUujxbpRqeeYRo+CHaRBALuT7l6x8Sy4X
yD+QnwJq9d1z/c+L/MM+8VkYSNB7sDbhP16mAAs/JqJDYdujhw0KL8TOsvUW
UuhSrX4jDRrKxfwTYl8FAMgtyD+QnzxK1ZXY+Vmr45UeYouPWPlTUvLiE7//
aHPCb1mhwA7dHxAdEZl5/iGef+TZBPYCS4O3b7YGov0LAHIU8g/kJ0tBgVet
vhKHO5U+9/jVsvDDx0D9qe9wfdR9sBDzblKExR4T0T4Ry0KrFJy5PM1K+VPL
qVQGNZqH51sh9gYXw8+fVWEAALkB+ec9aHvNeexD36VSs8/9u8Ii/ilfVMwe
bzWa12d2GRcGrduT58eL9751ut6i6CbdrFJoNuIaPt3NfMnTwaVSBdit4EPA
SnjsKRXGvxcWeVWqbBcNACD1kH8gn9mUSo9KdaFWX6rVQbX6g8/67t2lgePt
ca95+tI+d+Oei7imAtZhx14mS5tuPAKp1RGNJiZs1xoNi4jZLhTAj8j0L1mZ
FltekH8AvqJ9bbprZ7HvcH3gZHvQamRb7+FatguVescFBQ5eLaayFSizXRYA
gDRC/gH4utblyY6NWba1LE1kuywAAJA85B8AAADIN8g/70HzK+SYy+5SGtLT
eDmNG7JdFgCALEP+AcgHDwM6mjDQbCUtVNNiNS1U8X2AXCfTv2RlWmx5Qf4B
+NjGSfvRRa8jOuS+H2aP2S5OMm77tDRRzmPPWh1t1vNtvY6WamimMttFoxuN
hp4H3WPFeQDIFOQfkJ0Ne/dhaMh6O2a7G7eER9L6WruuX6eRQT+NXdJUmKav
aPqCJtL6iinnaS+mYT2v7WGZZ6eB9hppr4mMDfwpS0SpFhbzTHHxizXU3nSn
ERZdfV5xns+4+HLxEQCAdED+AXnZOetjycdLM+c0f0Hz5zTnoen3Tg4Ks9kk
/Vobx+3W6/4gTcZonmiJaPmBFqM0J68IFOoqoZEy3uC1WceTz0Ez31gKYk+X
qnmPoBQ5VSr51NnFQk0OizTi9n6VzqVaXH9E+7johrj+CNvHihsAkBGIQG9C
86sEbTp7TqJjAZq/oZU7WmfbDa0GacFNUy/OjIpre5WU8vqEZBtW9j3dnvjI
Lc0RrRCt8/W+aI1oMUwz9uhgCt5PRoS6S++Hnup/dhvJ1MQ3trNRR/NV8X5d
ql4oxu45u886YT01nmSEMKPV8Ym1XzkqKIgVCpU/v1ccE1ZcFdfdKEQVEACk
HfIPSIRztezBWkO+Bgo10VUzXTQmfnVuv20/MOih6QhPI1t8AS6+bbGn57x+
5je+hkVxyWPFgrh9fx3Phd2mA1/3GY3e8YuvsvAlvOgG0XKEZlx3w+JpS7a+
nYsxc3Tacj/LHn92A9LC21l8zTs/C/1/WOYxNvBtU+j/M1meqlfxqVS/V5A3
lD+uoFr27gqqTqVSyD9PK66KK86XC/lHiyYwqeDVpyyLyjmOyvQvWZkWW3aQ
f0AKzjYNZK/lyeeulaidb/E2uml5PmHZ0nkQHDqj2VteCWMUFmBnm5E9DdA8
+5J4ml+l5hUOz60q4jrmTwu7f708LP+YvN0s59zQrFD/s/Fc/3NJU9brAXbO
mmvQFJ485RVQy15a9dCKg5YOwi8ro7LurLv0elDPI9BcFW/zYslnvoqFn/vU
Vf5cqtW/8w+75zzMVPA7/057lk2pvBbr6MTlVg1PK84L50d/0GoJKXGV2C+d
/bOWftSUCSBTyD8gBffH1UKFD0s+v4i6he0XfxpuFk9YPu7cOx9w837Iz/U/
u2znhla9NGP09IqnhZ8/VcXwI9YqPH6war9VJKO90xLs89O40AT22P8nQjOe
+Mi2vXPhpHf/asJJSxe0eU07Ydq9JKOfNpz8TGlxdxS7f5WE+rR3Q3reF2jU
QEN6PigsdUJqdZx9XLI7rC97rPwRb/v7sdOnVofFJjCtTqimYxlVL1T+fN5x
GtIqJKZZlnx0uqcaVKEpswRdsyCnKF7Jdokg7/DKH0etUNvDMk8PUZ+wsZ1O
irWK58ztt225e48jI36ai/D+Pxv3tBGl1QDNW2/Hni8VeZ1/Kj6qiPjAymEr
yznHoT4WeC5oIkRTARp33g6ZfCyb0YZn6Dg+e04bN7R3T4dxMsfIdEXGM1qT
ZkOYp6M41FVy1V0a6ir1tKe4RcOrUl1pEvozl4l1bsI9f6cxy6VUutXqa95l
upinILYVl7CTA1hxPqse+7GXlP6umjMITZl6IZ0C5BDknzeh+TWTgrsVCfmn
94/8c9v6cPI4THvJ0rHt6bOER1w0xVKQMPhr5jgyuuXseb7UpUYTFxti9GVP
7V9ir5LvtX+JVsytm7aOPU/Xob/HfNF74O8xOjrZ8am9zk3fsJWPQdu8pX2i
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
    "], {{0, 768}, {768, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{768, 768},
  PlotRange->{{0, 768}, {0, 768}}]], "Output",
 CellChangeTimes->{3.748424621365862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Print", " ", "some", " ", "statistics", " ", "about", " ", "the", " ", 
    "order", " ", "parameter"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Average distance: \>\"", ",", "CMean"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Median distance: \>\"", ",", "CMedian"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Minimum distance: \>\"", ",", "CMin"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Maximum distance: \>\"", ",", "CMax"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<- Contrast cut off (Min,Max): (\>\"", ",", "CScaleMin", ",", " ", 
     "\"\<,\>\"", ",", "CScaleMax", ",", "\"\<)\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Average distance: \>\"", ",", 
      RowBox[{"ToString", "[", "CMean", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Median distance: \>\"", ",", 
      RowBox[{"ToString", "[", "CMedian", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Minimum distance: \>\"", ",", 
      RowBox[{"ToString", "[", "CMin", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Maximum distance: \>\"", ",", 
      RowBox[{"ToString", "[", "CMax", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"logfile", ",", "\"\<- Contrast cut off (Min,Max): (\>\"", ",", 
      RowBox[{"ToString", "[", "CScaleMin", "]"}], ",", " ", "\"\<,\>\"", ",", 
      RowBox[{"ToString", "[", "CScaleMax", "]"}], ",", "\"\<)\>\"", ",", 
      "\"\<\\n\>\""}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.726481705250819*^9, 3.72648177128574*^9}, {
  3.748361705598805*^9, 3.748361725378518*^9}, {3.748361756708147*^9, 
  3.748361757619903*^9}},
 ExpressionUUID -> "40b565b4-05e5-4c65-a550-bde00d1f4882"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Average distance: \"\>", "\[InvisibleSpace]", 
   "3.9912255798424567`"}],
  SequenceForm["- Average distance: ", 3.9912255798424567`],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424621582519*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Median distance: \"\>", "\[InvisibleSpace]", 
   "3.1886949360872414`"}],
  SequenceForm["- Median distance: ", 3.1886949360872414`],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424621583371*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Minimum distance: \"\>", "\[InvisibleSpace]", 
   "1.1185627493127652`"}],
  SequenceForm["- Minimum distance: ", 1.1185627493127652`],
  Editable->False]], "Print",
 CellChangeTimes->{3.7484246215852623`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Maximum distance: \"\>", "\[InvisibleSpace]", 
   "26.445976360994806`"}],
  SequenceForm["- Maximum distance: ", 26.445976360994806`],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424621589738*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Contrast cut off (Min,Max): (\"\>", "\[InvisibleSpace]", "0",
    "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "6", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["- Contrast cut off (Min,Max): (", 0, ",", 6, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.748424621591786*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"colourBar2", "=", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{"v", "^", "gamma"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "CScaleMin", ",", "CScaleMax"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"ColorData", "[", "colortbl", "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "colscalelabSz"}]}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "25"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"imsz", "/", "2"}]}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "Automatic", ",", "False", ",", "Automatic"}], 
       "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7264815091219587`*^9, {3.726580642275859*^9, 3.726580648194214*^9}, {
   3.726580685142774*^9, 3.726580695285548*^9}, {3.726581189862821*^9, 
   3.726581211661553*^9}, {3.7265817312910852`*^9, 3.726581732759021*^9}, {
   3.730960593590598*^9, 3.7309605941156197`*^9}, {3.730960633669323*^9, 
   3.730960647629407*^9}, {3.730960743732203*^9, 3.7309607444006042`*^9}, 
   3.730966361609668*^9, {3.73105339067206*^9, 3.731053419486013*^9}, {
   3.748420339632201*^9, 3.748420340105171*^9}},
 ExpressionUUID -> "4f3cf61e-572b-44a7-8a3b-92d1b9bef579"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colourBar2adj", "=", 
  RowBox[{"ImageAdjust", "[", 
   RowBox[{"colourBar2", ",", "ContrastEnhancement"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7309662469725733`*^9, 3.730966253668241*^9}, {
   3.7309663040089607`*^9, 3.7309663393356*^9}, {3.7310533243480177`*^9, 
   3.7310533284019413`*^9}, {3.74842028846032*^9, 3.748420290090209*^9}, 
   3.748420394324009*^9},
 ExpressionUUID -> "9c422785-3650-4842-80a8-7232d533ac44"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3QFEnfsfx/Hff3/ZFbOMbMakmOmSv2LSyCxyNf6mMce5ZBbJjcwi18bM
bMZkZpoxk0wzMnMdJSaTWWKSZIljZq5mTJKUyDHP//s7T53/s3Pqcr+Xer7r
/fK58zzn2aXxXvec59apvPXy+dZ/O/Gv8B9/HAAAAAAAAAAAAAAAAAAAAAAA
AAAAAOBHlEgkXFZRUdFufyzAjqqpqZHyKysrr169Gv4t2O2PCNg5Enxra2t4
fPHiRfrH3jEwMCDBLywsvH37NpVK7faHA+yoZDLpvnfp0qXd/qCAHVJfXy/N
l5WVhafy+jfv+Y/uFQGvI2BCU1NTNNR0Oi2nQ0ND4am/9A/GXwHE3L1796KV
Tk1Nyenk5GR4Sv/44UmlJSUlueNotPSPH174n4Cc4eHh3CX6xx6RSqVGR0fz
HqR/7GX0j71s4+VAkWbcAoV1PuCD+tE/TPMBH9GP/mGaD7hCP/qHaT7gKv3o
H6b5gGv1o3+Y5gM+ox/9w7SNe5hnNeP+J6zzAV/Qj/5hmg+4RT/6h2k+4Db9
6B+m+YA79KN/mOYD7tKP/mGaD/iqfvQP03zAN/Wjf5jmA76jH/3DNB/wff3o
H6b5gB/pR/8wzQfcpx/9wzQf8DP96B+m+YBf6Ef/MM0HPKQf/SP+Ojs790c0
NDTkLvmAX+lH/4i/4uJiCfXIpubm5twlH/Ab/egf8SeVdnd3b3cpGNeP/hF/
UmlHR0dPT09vb2/hpWBCP/pH/Lnv3bp1K3opmNSP/hFzy8vLUunIyEh4mvdN
u/54Wj/6hy0vX7503//8C9/wjGZ8/zvi7/r16zU1NbnTx48fS7SLi4vhqQ94
Vj/6R8xdu3ZNKr19+7Ycr6ysbPH8J60f/SP+8l7/vn//Pnop+KAf/cOETCaT
SqVmZmbyHvcBf9KP/mGaD3h+n3r0D9N8wJ/3qUf/MG3j5fDXIsW4/wnrfMCL
+9Wjf5jmA17arx79wzQf8MpP6tE/TMv2X6we/cO0bP8H1aN/mOYDXi1Rj/5h
WngPM7N6SDHuf8I6CXhttVQ9+odpEvDy2hH16B+m+e8FWDuqHv3DNAn4y9ox
9egfpknA8+vl6tE/TAvv4Xxcr1CM+z+wTgJOrx9Xj/5hmv92yMwJ9egfpknA
05mf1aN/mCYBv8tUqUf/ME0CHs9Uq0f/ME0CHsucVI/+YVp4D3M0U6sY9z9h
nX9r3Mwp9egfhrS1teUVK6ep9dPq0T+smJiYKHzGIqcv1xvUo39YkXv/z7wH
B9d/UY/+YcKxY/5rNVtaWgr7H1g7qx79I/7u3r0bhtra2lrYf//aOfXoHzEX
vud/X19fsE3/4snaecW4/4n4Kynx79Jw8uTJ2tqNO/ZVVVXT09PhVTl9uJZQ
j/4Rc42NjQcOHCjOyr0ETqVS4VU5frD6q3r0D0Pa29sLn//0rF5Uj/5hSDKZ
LOz/zmqrevQP0yTgWyvt6tE/TJOAb6x0qEf/ME0CvrZ8RT36h2kS8O9L3erR
P0yTgLsWr6lH/zBNAr68cEM9+odpEnDnwi316B+mScC/fb2rHv3DNAm47cs9
9egfpoVfDnTp8wPF+PpPWOe/KWb+kXr0D9Mk4OT8E/XoH6ZJwIk/n6pH/zBN
Aj7/6Zl69A/TJOBzHwfVo3+YJgGf/fCHevQP08J7mE3pIcW4/wnrJODGuRH1
6B+mScAN70fVo3+YJgGfmRlTj/5hmgRcP/1WPfqHaRLwqcl36tE/TJOA695N
qUf/MC28h3lyYkYx7n/ChHQ6nXvzw4qKiugleaTm7ax69I/4C8tPJpPl5eVy
UFtbG71U/SatHv0j5m7evBmtNO9Jixz/Z+yjevSPmBsdHU0kErnTwv5/fj2v
Hv3Ditybnw8MDEQfrHz1RT36hxWHDx/et29f4ef/0ImRhb+13L+4i38i4O9q
amqSaJeWlsJTf0doaEk9+kfM5X2WfvXqlZzOzs7mrlakltWjf8Rcd7d/l9qH
Dx/KsXzaL3z+U/5yRT36R/y57+W9/i0bXFOP/mHCx48f+/v737x5k/e4BHzs
2bp69A/TJOCjT7+pR/8wLXxGdKQvUIz7n7BOAj78JFCP/mGa7/9RoB79wzQJ
uLQ3UI/+YZoEfOh+oB79wzQJuKQnUI/+YZoEfPBOoB79w7TwHuaBW4Fi3P+E
dRJw8c1APfqHab7/64F69A/TJOCffg/Uo3+Y5vvvCtSjf5gmAe+/HKhH/zDN
998RqEf/MM333xaoR/8wTQIuuhSoR/8wzfffEqhH/zBNAt6XDNSjf5jm+78Q
qEf/MM1/Bc+5QD/6h2W+/7OBfvQPy3z/vwT60T8sCH/yhf9ux9LS6OP+oYZA
P/pH7IXl/zdri/d/Ph3oR/+It8nJSal0eHg4PE0kEnnv/+zqAv3oH/H24sWL
aKX9/f1yOjExEZ76/k8G+tE/7Jidnd3i+U91oB/9w4iOjo4w/vn5+dyD/rwq
0I/+EXvr6+th+S0tLXmXNt4SvTLQjO9/hwVhqHNzc1tfOh7oR/+It56eHql0
cHBwatP4+Hjuqu+/LNCP/hFvpaWlrsDY2Fh41Z8cDfSjf1jm+z8c6Ef/sMz3
fyjQj/5hme//YKAf/cOyjdcDxYFm3P+Ecb7gokA/+odl4afwfzD6h2H0j73M
f/+7C9Sjf5hG/9jL/MtfF6hH/zAtvIe53wWKcf8T1qnjz/0V2O0/AaAnAf/k
vqlH/zDN/79fl1GP/mFatv819egfpknAB9yqevQP08J7OAfdimLc/4F12fiX
1KN/mCYBl7hF9egfpvlv/3IL6tE/TJOAS91X9egfpmX7/6we/cM0//YPbl49
+odp4T3MI+5Pxbj/Ceuy8X9Sj/5hRSazxZfr+Ld/cx/Uo3+Y8OXLly2frsgj
x1xaPfpH/EXf+bPwUpmbU4/+YUV9ff2W/Ze79+rRP6wIf/5L3oPySIWbUY/+
YcV2/YsTblox7n/CkO36r3ST6tE/rNiu/yr3Tj36hxXb9V/txtWjf1gR/uT3
vAflkRr3Vj36h2kScK0bU4/+YZoEfMq91q3OvaZ/mCYB17tR9egfpknAp92r
M25Efs0dnPnuYOPxM5HfkDugf5gmATe4YfXoH6ZJwI1uSD36h2kScJNLqUf/
ME0CPuv+UI/+YZoEfM692GYvCw7yR/8wLfwazmY3qBhf/wnrJODz7rl69A/T
JOAL7pl69A/TJOCEG0i6gUR2hQfbPR4e0D9Mk4B/dU/Vo3+YJgG3uH716B+m
ScAXXZ969A/TwnuYl1yfYtz/hHUScKt7oh79w7Rs/4/btlprwUHhb6B/mCYB
t7lH7e5RW3Z5B+2Rgy1/A/3DNAm4fbNzxegfpknAv7mH6tE/TJOAO1yvevQP
08J7mJ2ut3AdBQd54/4nrDh+/PjGlzo3N0cfz8b/QD36R/yF5Tc2NtbV1fng
OzujlyTjy5s9X9789S8Oor+T/hFz6bT/KUW3b98OT/OetMhxtu372T2I/PoX
B/8/pX/EXDKZjFba09NT0P/9Kxs9b3Gw3ePhAf0j5iorK6OVjo/7N22empoK
T+X4SjZm3egfMVdWVhatdG7O/9C66enp8NRtUpTP/R/EX3V1dbTSkZEROf32
7dsufkjAjrlx40a0/5aWFj5pY0/JPVEJP/kXFRXt9kcE7Jyuri4XsdsfDrAL
nj9/Pjk5udsfBQAAAAAAAAAAAAAAAAAAAAAAAAAAAABY9T+PnEPI
    "], {{0, 256}, {256, 
    0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{256, 256},
  PlotRange->{{0, 256}, {0, 256}}]], "Output",
 CellChangeTimes->{3.7484246217299128`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Combine", " ", "the", " ", "order", " ", "parameter", " ", "map", " ", 
    "and", " ", "the", " ", "colour", " ", "scale", " ", "bar", " ", "into", 
    " ", "one", " ", "graphics", " ", "file", " ", "for", " ", "file", " ", 
    "export"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"exportgraph", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{"colourBar2adj", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "0."}], "}"}], ",", "Center", ",", "1.5"}], 
         "]"}], ",", 
        RowBox[{"Inset", "[", 
         RowBox[{"pp2adj", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0.5"}], "}"}], ",", "Center", ",", "3"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "3"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "1024"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.748421051795661*^9, 3.748421241720334*^9}, {
  3.748421277109501*^9, 3.748421280485352*^9}, {3.748421378626433*^9, 
  3.748421409271949*^9}, {3.748421499104426*^9, 3.748421537947459*^9}, {
  3.748421571942594*^9, 3.748421728385833*^9}, {3.7484218017530823`*^9, 
  3.7484218390666733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"goutfile", "=", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"graphfileprefix", ",", "\"\<.png\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"goutfile", ",", "exportgraph", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"imsz", "*", "ImMagfact"}]}], ",", 
   RowBox[{"ImageResolution", "\[Rule]", "600"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.726575828428982*^9, 3.726575895122733*^9}, {
  3.7265771711951036`*^9, 3.726577185654866*^9}, {3.726580711299683*^9, 
  3.726580739584169*^9}, {3.726581173372723*^9, 3.726581175138278*^9}, {
  3.731053163697192*^9, 3.7310531710134068`*^9}, {3.731053233640552*^9, 
  3.7310532348794193`*^9}, {3.731053303987084*^9, 3.7310533105212803`*^9}, {
  3.731053341203684*^9, 3.731053364395158*^9}, {3.7310534438130903`*^9, 
  3.7310534439674253`*^9}, {3.7483619312859077`*^9, 3.7483619332840033`*^9}, {
  3.748366028642786*^9, 3.748366035316208*^9}, {3.748366091162125*^9, 
  3.748366093658708*^9}, {3.748366124296969*^9, 3.7483661315158377`*^9}, {
  3.748421306008539*^9, 3.748421311287904*^9}},
 ExpressionUUID -> "2cb690ea-9baa-49f9-a782-62cc2684e87c"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
OrderParameter.png\"\>"], "Output",
 CellChangeTimes->{3.748424622413863*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "logfile", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.726582938750503*^9, 3.7265829405508223`*^9}},
 ExpressionUUID -> "a9de7126-d3a7-4d5f-b7f6-995198c0df2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "PROCESSING"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726642304292137*^9, 3.72664230617057*^9}},
 ExpressionUUID -> "6bf9c3d3-68cc-4910-9b7c-ded6c9ac406d"]
},
WindowSize->{1280, 716},
WindowMargins->{{26, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape"},
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 22024, 598, 778, "Input"],
Cell[22449, 615, 106, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22592, 621, 2396, 41, 58, "Input"],
Cell[24991, 664, 163, 2, 27, "Output"],
Cell[25157, 668, 160, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25354, 675, 1094, 23, 58, "Input"],
Cell[26451, 700, 170, 2, 27, "Output"],
Cell[26624, 704, 174, 2, 27, "Output"]
}, Open  ]],
Cell[26813, 709, 2915, 64, 163, "Input"],
Cell[CellGroupData[{
Cell[29753, 777, 1051, 32, 118, "Input"],
Cell[CellGroupData[{
Cell[30829, 813, 620, 16, 20, "Print"],
Cell[31452, 831, 235, 5, 20, "Print"],
Cell[31690, 838, 259, 5, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[31976, 847, 6056, 170, 88, "Input"],
Cell[38035, 1019, 6055, 170, 88, "Input"],
Cell[44093, 1191, 6911, 169, 523, "Input"],
Cell[51007, 1362, 2735, 65, 208, "Input"],
Cell[53745, 1429, 5317, 128, 313, "Input"],
Cell[59065, 1559, 6715, 154, 400, "Input"],
Cell[65783, 1715, 5590, 151, 313, "Input"],
Cell[71376, 1868, 3921, 103, 193, "Input"],
Cell[75300, 1973, 6151, 172, 88, "Input"],
Cell[81454, 2147, 6036, 170, 88, "Input"],
Cell[87493, 2319, 1531, 35, 103, "Input"],
Cell[CellGroupData[{
Cell[89049, 2358, 3493, 83, 163, "Input"],
Cell[CellGroupData[{
Cell[92567, 2445, 593, 14, 20, "Print"],
Cell[93163, 2461, 409, 10, 20, "Print"],
Cell[93575, 2473, 423, 10, 20, "Print"],
Cell[94001, 2485, 300, 6, 20, "Print"],
Cell[94304, 2493, 526, 11, 20, "Print"],
Cell[94833, 2506, 596, 12, 20, "Print"]
}, Open  ]],
Cell[95444, 2521, 17814, 300, 406, "Output"]
}, Open  ]],
Cell[113273, 2824, 2664, 59, 148, "Input"],
Cell[CellGroupData[{
Cell[115962, 2887, 678, 17, 58, "Input"],
Cell[116643, 2906, 159, 2, 27, "Output"]
}, Open  ]],
Cell[116817, 2911, 2599, 70, 118, "Input"],
Cell[119419, 2983, 4887, 141, 58, "Input"],
Cell[CellGroupData[{
Cell[124331, 3128, 7491, 156, 268, "Input"],
Cell[CellGroupData[{
Cell[131847, 3288, 91, 1, 20, "Print"],
Cell[131941, 3291, 713, 20, 20, "Print"],
Cell[132657, 3313, 448, 12, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[133132, 3329, 404, 8, 27, "Input"],
Cell[133539, 3339, 8699, 164, 133, "Input"],
Cell[CellGroupData[{
Cell[142263, 3507, 580, 10, 27, "Input"],
Cell[142846, 3519, 151739, 2493, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294622, 6017, 2349, 53, 178, "Input"],
Cell[CellGroupData[{
Cell[296996, 6074, 258, 6, 20, "Print"],
Cell[297257, 6082, 256, 6, 20, "Print"],
Cell[297516, 6090, 260, 6, 20, "Print"],
Cell[297779, 6098, 258, 6, 20, "Print"],
Cell[298040, 6106, 355, 7, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[298422, 6117, 1750, 37, 58, "Input"],
Cell[CellGroupData[{
Cell[300197, 6158, 452, 8, 27, "Input"],
Cell[300652, 6168, 4182, 74, 271, "Output"]
}, Open  ]],
Cell[304849, 6245, 1288, 30, 43, "Input"],
Cell[CellGroupData[{
Cell[306162, 6279, 1269, 23, 58, "Input"],
Cell[307434, 6304, 150, 2, 27, "Output"]
}, Open  ]],
Cell[307599, 6309, 209, 4, 27, "Input"],
Cell[307811, 6315, 6035, 170, 88, "Input"]
}
]
*)

