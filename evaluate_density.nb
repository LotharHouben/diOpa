(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    311286,       6489]
NotebookOptionsPosition[    308182,       6390]
NotebookOutlinePosition[    308629,       6408]
CellTagsIndexPosition[    308586,       6405]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", " ", 
                    RowBox[{"evaluate_density", ".", 
                    RowBox[{
                    "nb", " ", "--"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", 
      RowBox[{"evaluate_density", ".", "nb"}]}], " ", "calculates", " ", 
     "for", " ", "a", " ", "data", " ", "set", " ", "with", " ", "xyz", " ", 
     "coordinates"}], "    ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", "the"}], " ", "local", " ", "density", " ", 
    "of", " ", "\"\<atoms\>\"", " ", "around", " ", "each", " ", 
    RowBox[{"site", ".", "                        ", "+"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", 
      RowBox[{"evaluate_order", ".", "nb"}]}], " ", "creates", " ", "a", " ", 
     "three", " ", "dimensional", " ", "temperature", " ", "map", " ", "for", 
     " ", "the"}], " ", "+"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "           ", "best"}], " ", "match", " ", "of", " ", 
     "each", " ", "\"\<atom\>\"", " ", "in", " ", "then", " ", "xyz", " ", 
     "data", " ", "file", " ", "with", " ", "a", " ", "database", " ", 
     "item"}], "   ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", "The"}], " ", "\"\<lower\>\"", " ", "the", 
    " ", "temperature", " ", "in", " ", "the", " ", "map", " ", "the", " ", 
    "better", " ", "the", " ", 
    RowBox[{"match", ".", "           ", "+"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"INPUT", ":", "  ", 
     RowBox[{
      RowBox[{
      "xyz", " ", "coodinates", " ", "of", " ", "the", " ", "cluster"}], 
      "                                ", "+"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"OUTPUT", ":", " ", 
     RowBox[{
      RowBox[{
      "Graphics", " ", "file", " ", "with", " ", "a", " ", "color", " ", 
       "map", " ", "that", " ", "shows", " ", "the", " ", "density"}], 
      "       ", "+"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", "for"}], " ", "each", " ", 
     "\"\<atom\>\"", " ", "in", " ", "the", " ", "xyz", " ", "data", " ", 
     RowBox[{"file", ".", " ", "The"}], " ", "density", " ", "is"}], 
    "         ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "                   ", "normalised"}], " ", "to", " ", "the",
     " ", "density", " ", "of", " ", "bulk", " ", 
    RowBox[{"material", ".", "                   ", "+"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"USAGE", ":", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", "1", ")"}], " ", "Delete", " ", "All", " ", "Output", " ", 
       RowBox[{"(", 
        RowBox[{"from", " ", 
         RowBox[{"the", " ", "'"}], 
         RowBox[{"Cell", "'"}], " ", "menu"}], ")"}]}], "                  ", 
      "+"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", 
      RowBox[{"(", "2", ")"}]}], " ", "Fill", " ", "the", " ", "section", " ", 
     RowBox[{"between", " ", "'"}], "BEGIN", " ", "USER", " ", 
     RowBox[{"INPUT", "'"}], " ", "and"}], "           ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                      ", "'"}], "END", " ", "USER", " ", 
     RowBox[{"INPUT", "'"}]}], "                                           ", 
    "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                   ", 
      RowBox[{"(", "3", ")"}]}], " ", "Evaluate", " ", "Notebook", " ", 
     RowBox[{"(", 
      RowBox[{"from", " ", 
       RowBox[{"the", "'"}], 
       RowBox[{"Evaluate", "'"}], " ", "menu"}], ")"}]}], "              ", 
    "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"DEPENDENCIES", ":", " ", 
     RowBox[{
     "None", "                                                  ", "+"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "+", "                                                                     \
           ", "+"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", "           ", 
     RowBox[{"AUTHOR", ":", "  ", 
      RowBox[{"L", ".", " ", "Houben"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"Weizmann", " ", "Institute", " ", "of", " ", "Science"}], 
     "                    ", "+"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                    ", 
      RowBox[{"lothar", ".", "houben"}]}], 
     RowBox[{"(", "at", ")"}], 
     RowBox[{"weizmann", ".", "ac", ".", "il"}]}], 
    "                             ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", "           ", 
    RowBox[{"COPYRIGHT", ":", " ", 
     RowBox[{
      RowBox[{
      "This", " ", "software", " ", "is", " ", "licensed", " ", "under", " ", 
       "the", " ", "GNU", " ", "GENERAL", " ", "PUBLIC"}], "    ", "+"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"+", "                      ", "LICENSE"}], " ", "Version", " ", 
     "3"}], "                                         ", "+"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"+", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", " ", "BEGIN"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
    "USER", " ", 
    RowBox[{
     RowBox[{"INPUT", " ", "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
   " ", "*)"}], 
  "                                                                         ",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "baseDir", " ", "is", " ", "the", " ", "base", " ", "folder", " ", "for", 
    " ", "program", " ", "input", " ", "and", " ", 
    RowBox[{"output", "."}]}], "                            ", "*)"}], 
  "                        ", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "dataDir", " ", "is", " ", "a", " ", "subfolder", " ", "that", " ", 
    "holds", " ", "the", " ", "data", " ", 
    RowBox[{"file", "."}]}], "                                   ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "outDir", " ", "is", " ", "a", " ", "subfolder", " ", "for", " ", "the", 
    " ", "program", " ", "output", " ", 
    RowBox[{"files", "."}]}], "                                  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Please", " ", "make", " ", "sure", " ", "that", " ", "the", " ", 
    "folders", " ", 
    RowBox[{"exist", "."}]}], "                                           ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"baseDir", "=", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"$HomeDirectory", ",", "\"\</Desktop/diOPA\>\""}], "]"}]}], 
    ";"}], "   ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataDir", " ", "=", "\"\<data\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outDir", "=", "\"\<out\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "datafileName", " ", "is", " ", "name", " ", "of", " ", "the", " ", 
     "data", " ", "file", " ", "with", " ", "the", " ", "cluster", " ", "xyz",
      " ", "coordinates"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"datafileName", "=", "\"\<Ferritin-agglomerate.cel\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Nfcc", "=", 
     RowBox[{"{", 
      RowBox[{"1.6", ",", "18."}], "}"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "shell", " ", "radius", " ", "in", " ", "units", " ", "of", " ", "the", 
       " ", "nearest", " ", "neighbour", " ", "distance"}], ",", " ", 
      RowBox[{
      "number", " ", "of", " ", "nearest", " ", "neighbours", " ", "in", " ", 
       "the", " ", "shell", " ", "in", " ", "the", " ", "bulk", " ", 
       "structure"}]}], " ", "*)"}], "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Nfcc", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "is", " ", "the", " ", "cutoff", 
       " ", "in", " ", "units", " ", "of", " ", "the", " ", "nearest", " ", 
       "neighbour", " ", "distance", " ", "for", " ", "the", " ", "density", 
       " ", "calculation"}], ",", " ", 
      RowBox[{
       RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "resolution", " ", "of",
        " ", "the", " ", "density", " ", "map"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"Nfcc", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "is", " ", "required", " ", "to", 
      " ", "normalize", " ", "the", " ", "result", " ", "to", " ", "the", " ",
       "bulk", " ", "density", " ", "of", " ", "the", " ", "material"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Note", " ", "that", " ", 
      RowBox[{"Nfcc", "[", 
       RowBox[{"[", "2", "]"}], "]"}], " ", "depends", " ", "on", " ", "the", 
      " ", "symmetry", " ", "of", " ", "the", " ", "coordination"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
    "(*", "                                                                ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"+", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"+", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", " ", "END"}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
      "USER", " ", 
      RowBox[{
       RowBox[{"INPUT", " ", "--"}], "--"}], 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
     " ", "*)"}], 
    "                                                                         \
", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"+", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.729843102307577*^9, 3.729843201214278*^9}, {
   3.73102984454348*^9, 3.731029845374052*^9}, {3.748343380191635*^9, 
   3.748343748830964*^9}, {3.748344125771619*^9, 3.74834414875176*^9}, {
   3.7483576461329193`*^9, 3.748357697229863*^9}, 3.74835780752212*^9, {
   3.748357900010888*^9, 3.748357957369397*^9}, {3.748359453682164*^9, 
   3.748359456910737*^9}, {3.748428246454445*^9, 3.748428434314066*^9}, {
   3.748428481423332*^9, 3.748428516917777*^9}, {3.7484289887702703`*^9, 
   3.748429148372735*^9}, {3.748429310860322*^9, 3.748429312390848*^9}, {
   3.748429359133707*^9, 3.748429359802517*^9}, {3.7484310681443863`*^9, 
   3.7484310957390013`*^9}, {3.748432947599831*^9, 3.748432953497037*^9}, {
   3.748433180559897*^9, 3.748433237669828*^9}},
 ExpressionUUID -> "15a9828a-b17f-4478-b765-538f37e954f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"celfile", "=", " ", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
   "baseDir", ",", "\"\</\>\"", ",", "dataDir", ",", "\"\</\>\"", ",", 
    "datafileName"}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzE1I2mEAx/E/lR4yqEPvSa/0so1s62UEBflQI8Y6lL2SrJdBopW0SjLs
Be1lrI1sL9UlKQmU6LCoLmNFxCDbslU4WWnQK8Hs74IWdahLz+85fPncvnGv
WmQNPhzHJdCgyXWj683nyZfqX90wbXsly0r9lHjK7HFrTPB6ycQ0Obzl89RM
+8sKeP5RVrtAldqn6uHn4zXRIjW2UxIAOyL/lrmo5vTsKvj92hjqX8ATe5Aw
HN4sypOgOPhxMlwuDpuAX3eVzOkLUamIWrd+UANLhEsHUdTqyy3m6G7YejTV
WljLfO6StMVQ9/xGO+GAWaWHXP37AZjiXX4Lw4sEQ3C8smejlSpUzDElOcXe
dnxSPzDl5Kyji+pIitfCOtuPdAN1Z1iYAXWHl/o+fNyPDFBqVv9+8Iwnssw7
J/TMOPbgydWkG65VSjyRhTy5zVczxWPOpkEVT/w8se3wfEdrgK2KoH4YeLT5
Dma/eGKEUd8SLRojT7b3562wUat7LbDwZLa/vA022SI4xT+eOHM9Aij1fRgC
xTJlKJzeWt1spj5989MJZ+40FjX1f94JU/VHVTZCNciHK6BF2WuDIfpx5j3v
KRi+
  "],
 ExpressionUUID -> "0594e155-8327-4e76-9767-2e30cd7219f5"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel\"\
\>"], "Output",
 CellChangeTimes->{3.748430921298725*^9, 3.748430986135524*^9, 
  3.74843296064445*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "3", ")"}], " ", "define", " ", "output", " ", "files"}], 
   "                                                                          \
                                             ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726472927502822*^9, 3.7264729536083527`*^9}, {
  3.726641772425508*^9, 3.726641773079224*^9}, {3.729842829451885*^9, 
  3.729842830465287*^9}},
 ExpressionUUID -> "6e049091-55cd-4d11-974f-04f7cd5af02e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"graphfileprefix", "=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
   "baseDir", ",", "\"\</\>\"", ",", "outDir", ",", "\"\</\>\"", ",", 
    RowBox[{"FileBaseName", "[", "datafileName", "]"}], ",", 
    "\"\<_Density\>\""}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"logfilename", "=", 
  RowBox[{"StringJoin", "[", 
   RowBox[{
   "baseDir", ",", "\"\</\>\"", ",", "outDir", ",", "\"\</\>\"", ",", 
    RowBox[{"FileBaseName", "[", "datafileName", "]"}], ",", 
    "\"\<_Density.log\>\""}], "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7266415720107317`*^9, 3.726641702292054*^9}, {
  3.748358025318406*^9, 3.748358047181417*^9}, {3.748358152402123*^9, 
  3.748358242675293*^9}, {3.748358287399871*^9, 3.748358311735108*^9}, {
  3.748428532083508*^9, 3.7484285408451347`*^9}},
 ExpressionUUID -> "a4a74ad5-9720-4d54-9073-83e90ce39718"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
Density\"\>"], "Output",
 CellChangeTimes->{3.748430921426182*^9, 3.7484309862204313`*^9, 
  3.748432962112298*^9}],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
Density.log\"\>"], "Output",
 CellChangeTimes->{3.748430921426182*^9, 3.7484309862204313`*^9, 
  3.748432962113386*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"define", " ", "plot", " ", "parameters"}], 
   "                                               ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"axespos", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"viewvc", "=", 
     RowBox[{"{", 
      RowBox[{"50", ",", 
       RowBox[{"-", "300"}], ",", "100"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imsz", "=", 
     RowBox[{"{", 
      RowBox[{"512", ",", "512"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"axstyle", "=", 
     RowBox[{"{", 
      RowBox[{"Thick", ",", "Thick", ",", "Thick"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"labSz", "=", "14"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "set", " ", "to", " ", "zero", " ", "if", " ", "no", " ", "labels"}], 
     ",", " ", 
     RowBox[{"otherwise", " ", "14", " ", "or", " ", "alike"}]}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colscalelabSz", "=", "14"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ImMagfact", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotopac", "=", "0.5"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"bubble", " ", "plot", " ", "opacity"}], " ", "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.726473016224245*^9, 3.7264730426375437`*^9}, {
   3.72657572366122*^9, 3.726575730053089*^9}, {3.726575760714669*^9, 
   3.72657579553034*^9}, {3.726576634738845*^9, 3.726576643113759*^9}, {
   3.726576967337359*^9, 3.726576985050815*^9}, 3.726579201597701*^9, {
   3.726579302878161*^9, 3.7265793484702873`*^9}, {3.726580491734342*^9, 
   3.726580508337028*^9}, {3.726580600539645*^9, 3.72658060851396*^9}, {
   3.726580662928337*^9, 3.7265806638304653`*^9}, {3.7265813556742783`*^9, 
   3.726581395279649*^9}, {3.726581607528146*^9, 3.7265816295181513`*^9}, {
   3.7265822610034237`*^9, 3.7265822775275497`*^9}, {3.726582385847467*^9, 
   3.726582386150354*^9}, {3.72664136687411*^9, 3.7266413694689302`*^9}, {
   3.726641456601409*^9, 3.7266414877477503`*^9}, {3.726641804784299*^9, 
   3.726641806595386*^9}, 3.726804367387898*^9, {3.7268044976461983`*^9, 
   3.7268045015341167`*^9}, {3.7310295962953787`*^9, 
   3.7310296153509073`*^9}, {3.731055547152903*^9, 3.731055553688731*^9}, {
   3.735825920681238*^9, 3.7358259209947853`*^9}, 3.7483583431202583`*^9, {
   3.7483609819582863`*^9, 3.748360982158421*^9}, 3.748428593147477*^9, {
   3.748429264008634*^9, 3.7484292750931273`*^9}},
 ExpressionUUID -> "68bac688-ae46-46bb-95c3-278046c2eee4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "PARAMETER", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7264729924586477`*^9, 3.726473011378954*^9}},
 ExpressionUUID -> "fe62bb41-2fa1-4c97-ab7b-0720065708a9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"START", " ", "FUNCTION", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726642203900134*^9, 3.726642219988126*^9}},
 ExpressionUUID -> "b6c72f85-5c8f-4b2f-8087-095534c27f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Function", " ", "for", " ", "Reading", " ", "a", " ", "celfile"}],
    " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"J", ".", " ", "Barthel"}], ",", " ", 
    RowBox[{"RWTH", "-", 
     RowBox[{"Aachen", " ", "University"}]}], ",", " ", "Germany"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Email", ":", " ", 
    RowBox[{
     RowBox[{"ju", ".", "barthel"}], "-", "at", "-", "fz", "-", 
     RowBox[{"juelich", ".", "de"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"28.08", ".2015"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Reads", " ", "super", " ", "cell", " ", "structure", " ", "data", " ", 
    "in", " ", "CEL", " ", "file", " ", "format", " ", "from"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "specified", " ", "file", " ", "and", " ", "stores", " ", 
    "the", " ", "information", " ", "in", " ", "global", " ", 
    RowBox[{"arrays", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"celdims", " ", "=", " ", 
    RowBox[{
     RowBox[{"dimensions", " ", "of", " ", "the", " ", "super"}], "-", 
     "cell"}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"celangs", " ", "=", " ", 
    RowBox[{
     RowBox[{"angles", " ", "between", " ", "the", " ", "super"}], "-", 
     RowBox[{"cell", " ", "axes"}]}]}], "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"natoms", "  ", "=", " ", 
    RowBox[{
     RowBox[{
     "number", " ", "of", " ", "atoms", " ", "in", " ", "the", " ", "super"}],
      "-", "cell"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReadCelFile", "[", "filename_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "celstrs", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Clear", "[", 
        RowBox[{"celdims", ",", "celangs", ",", "celatms", ",", "natoms"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"celdims", "=", 
        RowBox[{"{", 
         RowBox[{"0.", ",", "0.", ",", "0."}], "}"}]}], ";", 
       RowBox[{"celangs", "=", 
        RowBox[{"{", 
         RowBox[{"90.", ",", "90.", ",", "90."}], "}"}]}], ";", 
       RowBox[{"celatms", "=", 
        RowBox[{"{", "}"}]}], ";", 
       RowBox[{"natoms", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"-", " ", "read"}], " ", "data", " ", "from", " ", "file"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"celstrs", "=", 
        RowBox[{"ReadList", "[", 
         RowBox[{"filename", ",", "\"\<String\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"-", " ", "analyse"}], " ", "/", " ", "extract"}], " ", 
         "numeric", " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"celdims", "=", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"ReadList", "[", 
           RowBox[{
            RowBox[{"StringToStream", "[", 
             RowBox[{"celstrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<Number\>\""}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"celangs", "=", 
        RowBox[{"Take", "[", 
         RowBox[{
          RowBox[{"ReadList", "[", 
           RowBox[{
            RowBox[{"StringToStream", "[", 
             RowBox[{"celstrs", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", "\"\<Number\>\""}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"5", ",", "7"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"celatms", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ReadList", "[", 
            RowBox[{
             RowBox[{"StringToStream", "[", 
              RowBox[{"celstrs", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"Join", "[", 
              RowBox[{
               RowBox[{"{", "\"\<Word\>\"", "}"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{"\"\<Number\>\"", ",", 
                 RowBox[{"{", "8", "}"}]}], "]"}]}], "]"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "3", ",", 
            RowBox[{
             RowBox[{"Length", "[", "celstrs", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"natoms", "=", 
        RowBox[{"Length", "[", "celatms", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"-", " ", "report"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<- INPUT  CEL file: \>\"", ",", 
         RowBox[{"InputForm", "[", "filename", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: \>\"", ",", 
         "celdims"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) \
[deg]: \>\"", ",", "celangs"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<- OUTPUT (natoms)  number of atoms          : \>\"", ",", 
         "natoms"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"natoms", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<- OUTPUT (celatms[[1]]) first atom          : \>\"", ",", 
            RowBox[{"celatms", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"natoms", ">", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<- OUTPUT (celatms[[\>\"", ",", "natoms", ",", 
            "\"\<]]) last  atom          : \>\"", ",", 
            RowBox[{"celatms", "[", 
             RowBox[{"[", "natoms", "]"}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.683372792476506*^9, 3.683372804247617*^9}, 
   3.748358400095683*^9},
 ExpressionUUID -> "e7b9b2cc-75a7-46ae-b9d8-6eb1051db484"],

Cell[BoxData[
 RowBox[{
  RowBox[{"QuickDistance", "[", 
   RowBox[{"model_", ",", "nlist_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SortedEntry", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"tmplist", "=", "model"}], ",", 
      RowBox[{"selected", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"x", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Clear", "[", "EuclDist", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EuclDist", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", " ", "analyse"}], " ", "/", " ", "extract"}], " ", 
       "numeric", " ", "data"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"k", "=", "1"}], ",", 
       RowBox[{"k", "<=", "coordination"}], ",", 
       RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"Nearest", "[", 
          RowBox[{
           RowBox[{"tmplist", "\[Rule]", "Automatic"}], ",", 
           RowBox[{"nlist", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"selected", "=", 
         RowBox[{"N", "[", 
          RowBox[{"tmplist", "[", 
           RowBox[{"[", 
            RowBox[{"x", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"SortedEntry", ",", "selected"}], "]"}], ";", 
        RowBox[{"tmplist", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"tmplist", ",", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"EuclDist", "=", 
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"nlist", ",", "SortedEntry"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.659447143794791*^9, 3.6594471548945427`*^9}},
 ExpressionUUID -> "47d198d6-a6d4-4d14-9fba-067ac6fa63c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNeighbours", "[", 
    RowBox[{"atomindex_", ",", "nneighbours_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"k", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Extract", " ", "atom", " ", "atomindex", " ", "and", " ", "evaluate", 
       " ", "its", " ", "n", " ", "nearest", " ", "neighbours"}], " ", "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "the", " ", "function", " ", "nearest", " ", "returns", " ", "the", 
        " ", "test", " ", "element", " ", "itself"}], ",", " ", 
       RowBox[{
        RowBox[{"therefore", " ", "we", " ", "start", " ", "with", " ", "n"}],
         "+", 
        RowBox[{"1", " ", "neighbours"}]}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "centre", " ", "the", " ", "list", " ", "around", " ", "the", " ", 
        "selected", " ", "atom"}], ",", " ", 
       RowBox[{
       "the", " ", "selected", " ", "atom", " ", "is", " ", "the", " ", 
        "origin", " ", "of", " ", "the", " ", "coordinate", " ", "system"}]}],
       " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Initialize", " ", "global", " ", 
        RowBox[{"variable", ":", " ", "neighbours"}]}], " ", ",", " ", 
       RowBox[{"type", ":", " ", "list"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "neighbours", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"neighbours", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"k", "=", 
       RowBox[{"Nearest", "[", 
        RowBox[{"q", ",", 
         RowBox[{"q", "[", 
          RowBox[{"[", "atomindex", "]"}], "]"}], ",", 
         RowBox[{"nneighbours", "+", "1"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"neighbours", "=", 
       RowBox[{"k", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;", 
          RowBox[{"nneighbours", "+", "1"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"neighbours", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"k", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"neighbours", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"k", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"neighbours", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"neighbours", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"k", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.659447734831008*^9, 3.6594478129419394`*^9}, {
  3.659447846838603*^9, 3.6594478569598837`*^9}, {3.659447888030588*^9, 
  3.6594479170367403`*^9}, {3.659448066006485*^9, 3.65944812738328*^9}, {
  3.659448389798121*^9, 3.659448413980186*^9}, {3.659448476058148*^9, 
  3.659448511069641*^9}, {3.6594485454869957`*^9, 3.659448614814575*^9}, {
  3.659448665529311*^9, 3.659448677222924*^9}, {3.659449416516624*^9, 
  3.6594494742880297`*^9}, {3.710479671888363*^9, 3.710479672048154*^9}},
 ExpressionUUID -> "74145966-baf2-4c42-afae-e977ffa8d7ea"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetDistMeas", "[", "atomindex_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"DistMap", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Calculate", " ", "a", " ", "distance", " ", "measure", " ", "to", " ", 
       "the", " ", "closest", " ", "model", " ", "item", " ", "in", " ", 
       "the", " ", "DB"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Returns", " ", "a", " ", "global", " ", 
        RowBox[{"variable", ":", " ", "Dist"}]}], ",", " ", 
       RowBox[{"type", ":", " ", "list"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Dist", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"atomnr", ",", " ", "DBindex", ",", 
         RowBox[{"{", 
          RowBox[{"angle", ",", "angle", ",", "distance"}], "}"}]}], "}"}]}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Example", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"In", ":", "   ", 
        RowBox[{"GetDistMeas", "[", "41", "]"}]}], ";", " ", "Dist"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Out", ":", " ", 
       RowBox[{"{", 
        RowBox[{"41", ",", "256", ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["\[Pi]", "5"], ",", 
           FractionBox["\[Pi]", "10"], ",", "0.468556698631839"}], "}"}]}], 
        "}"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "Dist", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Dist", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Create", " ", "a", " ", "distance", " ", "map"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Here", " ", "we", " ", "need", " ", "permutations", " ", "because", 
        " ", "the", " ", "list", " ", "of", " ", "nearest", " ", "neighbours",
         " ", "is", " ", "not", " ", "sorted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "Finding", " ", "the", " ", "minimum", " ", "over", " ", "all", " ", 
         "possible", " ", "permutations", " ", "is", " ", "the", " ", "right",
          " ", "way", " ", "to", " ", "go"}], ",", " ", 
        RowBox[{"yet", " ", "very", " ", "slow"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "therefore", " ", "we", " ", "sort", " ", "the", " ", "list", " ", 
        "of", " ", "data", " ", "base", " ", "model", " ", "atoms"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "for", " ", "each", " ", "atom", " ", "in", " ", "the", " ", 
        "neighbour", " ", "list", " ", "we", " ", "search", " ", "for", " ", 
        "the", " ", "closest", " ", "in", " ", "the", " ", "model"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "note", " ", "that", " ", "this", " ", "gives", " ", "the", " ", 
        "minimum", " ", "euclidian", " ", "distance", " ", "is", " ", 
        "achieced", " ", "only", " ", "if", " ", "model", " ", "and", " ", 
        "neighbour", " ", "list", " ", "are", " ", "close"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "there", " ", "might", " ", "be", " ", "a", " ", "solution", " ", 
        "with", " ", "a", " ", "better", " ", "compromise", " ", "if", " ", 
        "the", " ", "match", " ", "is", " ", "not", " ", "close"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"GetNeighbours", "[", 
        RowBox[{"atomindex", ",", "coordination"}], "]"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ind", "=", "1"}], ",", 
         RowBox[{"ind", "\[LessEqual]", 
          RowBox[{"Length", "[", "ModelDB", "]"}]}], ",", 
         RowBox[{"ind", "++"}], ",", 
         RowBox[{
          RowBox[{"QuickDistance", "[", 
           RowBox[{
            RowBox[{"ModelDB", "[", 
             RowBox[{"[", 
              RowBox[{"ind", ",", "3"}], "]"}], "]"}], ",", "neighbours"}], 
           "]"}], ";", 
          RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
           RowBox[{"DistMap", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ModelDB", "[", 
               RowBox[{"[", 
                RowBox[{"ind", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"ModelDB", "[", 
               RowBox[{"[", 
                RowBox[{"ind", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
              "EuclDist"}], "}"}]}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"WhereMin", "=", 
       RowBox[{"Ordering", "[", 
        RowBox[{
         RowBox[{"DistMap", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Dist", "=", 
       RowBox[{"{", 
        RowBox[{"atomindex", ",", 
         RowBox[{"WhereMin", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"DistMap", "[", 
           RowBox[{"[", "WhereMin", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.659449115387425*^9, 3.659449119180879*^9}, {
  3.6594491976654177`*^9, 3.6594492261685534`*^9}, {3.659449353300202*^9, 
  3.659449391537732*^9}, {3.659449484354217*^9, 3.6594495121933317`*^9}, {
  3.659449605130267*^9, 3.659449664647615*^9}, {3.6594497368136683`*^9, 
  3.6594497537733307`*^9}, {3.659450003068316*^9, 3.659450044363139*^9}, {
  3.65945015277287*^9, 3.6594503917098503`*^9}, {3.659450426959861*^9, 
  3.6594504571122913`*^9}},
 ExpressionUUID -> "739516e6-480f-40ad-8648-82ae49b671fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "BoundingBox", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "box", " ", "coordinates", " ", "around", " ", "the", " ", 
    "centre"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"in", " ", "a", " ", "list", " ", "variable", " ", "cutoff"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "xyz_"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", Cell[
      "{x2, y2, z2}, ...}",
       ExpressionUUID -> "8093595a-78c1-48a0-be4f-b7b33e1f1235"]}], "  "}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "        ", 
   RowBox[{"margin", " ", "=", " ", 
    RowBox[{"margin", " ", "size", " ", "to", " ", "add"}]}], 
   "               ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "                                 ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"OUTPUT", ":", " ", "bbox"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xmin", "-", "margin"}], ",", 
        RowBox[{"xmax", "+", "margin"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ymin", "-", "mrgin"}], ",", 
         RowBox[{"ymax", "+", "margin"}]}], "}"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"zmin", "-", "margin"}], ",", 
         RowBox[{"zmax", "+", "margin"}]}], "}"}]}]}], "}"}]}], " ", " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"BoundingBox", "[", 
    RowBox[{"xyz_", ",", "margin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "bbox", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"bbox", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "-", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"bbox", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "+", "margin"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"axespos", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"bbox", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<- BoundingBox         : \>\"", ",", "bbox"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<- Axes Position       : \>\"", ",", "axespos"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.72646873301163*^9, 3.726468743219098*^9}, {
   3.726469301748782*^9, 3.726469498591154*^9}, {3.726469557820095*^9, 
   3.726469770110976*^9}, {3.726470305230571*^9, 3.72647043245321*^9}, {
   3.726470492745804*^9, 3.726470496617366*^9}, {3.72647072945446*^9, 
   3.726470735326458*^9}, {3.7264707870582657`*^9, 3.72647079865786*^9}, {
   3.726471210577924*^9, 3.726471245385852*^9}, 3.748430781264701*^9},
 ExpressionUUID -> "fcb76e0e-7ea5-47ef-90cd-10b5d17e4982"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "CentreBox", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Centres", " ", "xyz", " ", "around", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"in", " ", "a", " ", "list", " ", "variable", " ", "cutoff"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "xyz_"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", Cell[
      "{x2, y2, z2}, ...}",
       ExpressionUUID -> "9a12e9db-12c1-47e5-91b3-3dc556de44ba"]}], "  "}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "                                              ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "                                ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"OUTPUT", ":", " ", "centrelist"}], " ", "=", " ", 
    RowBox[{
    "list", " ", "with", " ", "vectors", " ", "centred", " ", "around", " ", 
     "0"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CentreBox", "[", "xyz_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"-", " ", "init"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", "centrelist", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"centrelist", "=", "xyz"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"centrelist", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "-=", 
       RowBox[{
        RowBox[{"Min", "[", 
         RowBox[{"xyz", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "+", 
        RowBox[{"0.5", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}], "-", 
           RowBox[{"Min", "[", 
            RowBox[{"xyz", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ")"}]}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<- Centred List \>\"", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.726471167638945*^9, 3.726471189111182*^9}, {
  3.72647125313128*^9, 3.7264712948614807`*^9}, {3.726471617144472*^9, 
  3.726471786392272*^9}, {3.726471964732007*^9, 3.72647199503137*^9}},
 ExpressionUUID -> "a3158800-65e4-45a4-8399-b4db7eb28fce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "FUNCTION", " ", "DEFINITION"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{
  3.660197431970685*^9, {3.679217095740027*^9, 3.679217121956726*^9}, 
   3.682665603542506*^9, {3.7266422452568398`*^9, 3.72664226088925*^9}},
 ExpressionUUID -> "e49996b5-5f79-404d-90de-0f830311d61f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"START", " ", "PROCESSING"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7266422672358*^9, 3.726642270438937*^9}},
 ExpressionUUID -> "90c5bc22-dcc7-480a-a669-6a0d9b9deaf3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Open", " ", "log", " ", "file"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"logfile", "=", 
     RowBox[{"OpenWrite", "[", "logfilename", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{
     "logfile", ",", "\"\<Filename:\>\"", ",", "celfile", ",", 
      "\"\<\\n\>\""}], "]"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.726582356384006*^9, 3.726582364740923*^9}, {
   3.72658240388111*^9, 3.72658241597429*^9}, {3.726582486691181*^9, 
   3.726582513223922*^9}, 3.726582550012253*^9, {3.7266420823226633`*^9, 
   3.726642149053712*^9}, {3.748428658072884*^9, 3.74842866597788*^9}},
 ExpressionUUID -> "05454692-5792-4ac9-b0b6-86dddc577868"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ReadCelFile", "[", "celfile", "]"}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"coordatms", ",", "f", ",", "q"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Extract", " ", "relative", " ", "atomcoordinates", " ", "only"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coordatms", "=", 
    RowBox[{"celatms", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "multiply", " ", "atom", " ", "relative", " ", "coordinates", " ", "with", 
    " ", "cell", " ", "dimensions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "multiply", " ", "atom", " ", "relative", " ", "coordinates", " ", "with", 
    " ", "cell", " ", "dimensions"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"celdims", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "*", 
     RowBox[{"x", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"celdims", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", 
     RowBox[{"x", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"celdims", "[", 
      RowBox[{"[", "3", "]"}], "]"}], "*", 
     RowBox[{"x", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"q", "=", 
    RowBox[{"Map", "[", 
     RowBox[{"f", ",", "coordatms"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", " ", "atoms"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{"q", ",", 
   RowBox[{"BoxRatios", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.01", "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x/\[CapitalDelta]\>\"", ",", "\"\<y/\[CapitalDelta]\>\"", ",", 
      "\"\<z/\[CapitalDelta]\>\""}], "}"}]}], ",", 
   RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Bold", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<Number of atoms:\>\"", ",", 
    RowBox[{"ToString", "[", 
     RowBox[{"Length", "[", "q", "]"}], "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.660193528981686*^9, 3.6601935307637043`*^9}, {
   3.660193638185357*^9, 3.660193638399494*^9}, {3.660193852319253*^9, 
   3.6601939495462103`*^9}, {3.6601939998080893`*^9, 3.660194002317382*^9}, {
   3.660194054904066*^9, 3.660194075663979*^9}, {3.660194251726699*^9, 
   3.6601942536589937`*^9}, {3.6601944300439043`*^9, 3.660194434347289*^9}, {
   3.660195132479924*^9, 3.6601951327204123`*^9}, {3.682685446899522*^9, 
   3.68268546039133*^9}, {3.6826856372704163`*^9, 3.682685638914837*^9}, {
   3.68268587426897*^9, 3.68268587530692*^9}, 3.6833728617505083`*^9, {
   3.683373600001296*^9, 3.683373602246439*^9}, 3.6965160787498493`*^9, 
   3.6965758019992847`*^9, {3.748358508575857*^9, 3.7483585170673923`*^9}, {
   3.74836053713787*^9, 3.748360566433099*^9}, {3.7483606121685963`*^9, 
   3.748360614370101*^9}, {3.748360777328959*^9, 3.748360825993143*^9}, {
   3.7484287187671843`*^9, 3.7484287206559277`*^9}},
 ExpressionUUID -> "d0a3427b-abd4-44c9-ae22-2446069037e1"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- INPUT  CEL file: \"\>", "\[InvisibleSpace]", 
   InterpretationBox[
    StyleBox[
     "\"\</Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel\>\"",
     ShowStringCharacters->True,
     NumberMarks->True],
    InputForm["/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel"],
    AutoDelete->True,
    Editable->True]}],
  SequenceForm["- INPUT  CEL file: ", 
   InputForm["/Users/lothar/Desktop/diOPA/data/Ferritin-agglomerate.cel"]],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.748432984054935*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"19.6635`", ",", "16.056`", ",", "21.3574`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celdims) dimensions  (a,b,c)  [nm]: ", {19.6635, 16.056, 
   21.3574}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.748432984055956*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) \
[deg]: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"90.`", ",", "90.`", ",", "90.`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celangs) axes angles (\[Alpha],\[Beta],\[Gamma]) [deg]: ", {90., 
   90., 90.}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.748432984057124*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (natoms)  number of atoms          : \"\>", 
   "\[InvisibleSpace]", "559"}],
  SequenceForm["- OUTPUT (natoms)  number of atoms          : ", 559],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.748432984058272*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celatms[[1]]) first atom          : \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Fe\"\>", ",", "0.`", ",", "0.514721`", ",", "0.544393`", ",",
      "1.`", ",", "0.005`", ",", "0.1`", ",", "0.1`", ",", "0.1`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celatms[[1]]) first atom          : ", {
   "Fe", 0., 0.514721, 0.544393, 1., 0.005, 0.1, 0.1, 0.1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.748432984059422*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- OUTPUT (celatms[[\"\>", "\[InvisibleSpace]", "559", 
   "\[InvisibleSpace]", "\<\"]]) last  atom          : \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"\<\"Fe\"\>", ",", "1.`", ",", "0.21619`", ",", "0.073572`", ",", 
     "1.`", ",", "0.005`", ",", "0.1`", ",", "0.1`", ",", "0.1`"}], "}"}]}],
  SequenceForm[
  "- OUTPUT (celatms[[", 559, "]]) last  atom          : ", {
   "Fe", 1., 0.21619, 0.073572, 1., 0.005, 0.1, 0.1, 0.1}],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430921995235*^9, 3.7484309866701927`*^9, 
  3.7484329840606537`*^9}]
}, Open  ]],

Cell[BoxData[
 Graphics3DBox[
  {Hue[0.67, 0.6, 0.6], PointSize[0.01], Point3DBox[CompressedData["
1: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
H5uyNSw=
    "]]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x/\[CapitalDelta]\"", TraditionalForm], 
    FormBox["\"y/\[CapitalDelta]\"", TraditionalForm], 
    FormBox["\"z/\[CapitalDelta]\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  LabelStyle->Directive[Bold],
  Lighting->"Neutral",
  PlotRange->{{0., 19.6635}, {0.49364172000000006`, 16.056}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}}]], "Output",
 CellChangeTimes->{3.7484309220951653`*^9, 3.748430986721004*^9, 
  3.7484329841265182`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Color", " ", "Map", " ", "Definitions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"colortbl", "=", "\"\<Rainbow\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma", "=", "1.6"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gama", " ", "factor", " ", "to", " ", "stretch", " ", "the", " ", 
     "contrast"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ContrastEnhancement", "=", "1."}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"colnorm", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "-", "CScaleMin"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"CScaleMax", "-", "CScaleMin"}], ")"}]}], ")"}], "^", 
      "gamma"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"color", " ", "normailzation"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
         "map", " ", "a", " ", "ramge", " ", "of", " ", "values", " ", 
          "CMin"}], ".."}], "CMaxx", " ", "to", " ", "0"}], ".."}], "1"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"revcolnorm", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "CScaleMin"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"CScaleMax", "-", "CScaleMin"}], ")"}]}]}], ")"}], "^", 
      "gamma"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
        "inverted", " ", "color", " ", "normailzation", " ", "map", " ", "a", 
         " ", "ramge", " ", "of", " ", "values", " ", "CMin"}], ".."}], 
       "CMaxx", " ", "to", " ", "0"}], ".."}], "1"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.659521008161584*^9, 3.659521036589662*^9}, {
   3.659521072411956*^9, 3.6595210782540407`*^9}, {3.659765365252421*^9, 
   3.659765373060357*^9}, {3.7264805181475763`*^9, 3.7264805438696003`*^9}, 
   3.7264806066105423`*^9, {3.72648070703716*^9, 3.726480707260351*^9}, {
   3.726480748086935*^9, 3.7264807531581783`*^9}, {3.730959830187715*^9, 
   3.730959853500328*^9}, {3.730960048204102*^9, 3.730960070770797*^9}, {
   3.748361439999802*^9, 3.748361473913246*^9}, {3.7483615674206*^9, 
   3.7483616166891813`*^9}, {3.74836165326086*^9, 3.748361653636763*^9}},
 ExpressionUUID -> "2e874ee1-4932-4993-bc9e-2908a52d2b6d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.67920811156728*^9, 3.679208117286574*^9}, 
   3.679208601768364*^9},
 ExpressionUUID -> "a9e19eee-0aa3-4be3-8d50-89e3c07581d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", " ", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"DENSITY", " ", "MAP", " ", "calculation"}], 
   "                                                                          \
                       ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", " ", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"INPUT", ":", " ", "q"}], "=", "atomlist"}], "  ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.699245936492475*^9, 3.699245963106607*^9}, {
  3.699250550059001*^9, 3.69925058631007*^9}, {3.748428877133337*^9, 
  3.748428877372343*^9}},
 ExpressionUUID -> "4c1aa720-1a5e-493c-a17c-4ea994bc567b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "use", " ", "the", " ", "cutoff", " ", "list", " ", "and", " ", 
    "calculate", " ", "for", " ", "each", " ", "point", " ", "of", " ", "it", 
    " ", "the", " ", "euclidian", " ", "distances", " ", "to", " ", "the", 
    " ", "points", " ", "in", " ", "the", " ", "reference", " ", "list"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "will", " ", "give", " ", 
    RowBox[{"Length", "[", "cutofflist", "]"}], " ", "times", " ", 
    RowBox[{"Length", "[", "xyz", "]"}], " ", "values"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"distances", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tr", "=", 
         RowBox[{"Transpose", "[", "q", "]"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"point", ",", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"Total", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"point", "-", "tr"}], ")"}], "^", "2"}], "]"}], "]"}]}],
          "]"}], "/@", "q"}]}], "]"}]}], ";"}], "//", 
   "AbsoluteTiming"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.019066`4.731804582182108", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.748430922545809*^9, 3.7484309868702106`*^9, 
  3.748432999850019*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ddata", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"l", "=", "1"}], ",", 
    RowBox[{"l", "\[LessEqual]", 
     RowBox[{"Length", "[", "q", "]"}]}], ",", 
    RowBox[{"l", "++"}], ",", 
    RowBox[{
     RowBox[{"neighbourcount", "=", 
      RowBox[{"BinCounts", "[", 
       RowBox[{
        RowBox[{"distances", "[", 
         RowBox[{"[", "l", "]"}], "]"}], ",", 
        RowBox[{"Nfcc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
     RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
      RowBox[{"ddata", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"q", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"q", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"q", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "3"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"neighbourcount", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}], "/", 
          RowBox[{"Nfcc", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CentreBox", "[", "ddata", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ddata", "=", "centrelist"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"BoundingBox", "[", 
  RowBox[{"ddata", ",", "1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CScaleMin", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CScaleMax", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CMean", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"ddata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CMedian", "=", 
   RowBox[{"Median", "[", 
    RowBox[{"ddata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CMin", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"ddata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CMax", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"ddata", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.748429465533306*^9, 3.748429476429044*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"- Centred List \"\>"], "Print",
 CellChangeTimes->{3.7484309226118917`*^9, 3.748430986928879*^9, 
  3.7484329999885817`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- BoundingBox         : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "10.83175`"}], ",", "10.83175`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "8.781179139999999`"}], ",", "8.78117914`"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "11.671470520099998`"}], ",", "11.671470520099998`"}], 
      "}"}]}], "}"}]}],
  SequenceForm[
  "- BoundingBox         : ", {{-10.83175, 10.83175}, {-8.781179139999999, 
   8.78117914}, {-11.671470520099998`, 11.671470520099998`}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7484309226118917`*^9, 3.748430986928879*^9, 
  3.748432999990016*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Axes Position       : \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.83175`"}], ",", 
     RowBox[{"-", "8.781179139999999`"}], ",", 
     RowBox[{"-", "11.671470520099998`"}]}], "}"}]}],
  SequenceForm[
  "- Axes Position       : ", {-10.83175, -8.781179139999999, \
-11.671470520099998`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7484309226118917`*^9, 3.748430986928879*^9, 
  3.7484329999914713`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"colortbl", "=", "\"\<BlueGreenYellow\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"colddata", "=", "ddata"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colddata", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}], "=", 
     RowBox[{"Map", "[", 
      RowBox[{"revcolnorm", ",", 
       RowBox[{"ddata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "4"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ldp1", "=", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"List", "/@", 
        RowBox[{"Most", "/@", "colddata"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "bbox"}], ",", 
       RowBox[{"BoxStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", "Dotted"}], "]"}]}], ",", 
       RowBox[{"AxesOrigin", "\[Rule]", "axespos"}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<x/\[CapitalDelta]\>\"", ",", "\"\<y/\[CapitalDelta]\>\"", ",", 
          "\"\<z/\[CapitalDelta]\>\""}], "}"}]}], ",", 
       RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
       RowBox[{"AxesStyle", "\[Rule]", "axstyle"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
       RowBox[{"ViewCenter", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
          RowBox[{"FontSize", "\[Rule]", "labSz"}]}], "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "plotopac", "]"}], ",", 
             RowBox[{"AbsolutePointSize", "[", "1", "]"}], ",", 
             RowBox[{
              RowBox[{"ColorData", "[", "colortbl", "]"}], "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", "+", "0"}], ")"}], "/", "1"}], "]"}]}], "}"}], 
           "&"}], "/@", 
          RowBox[{"Last", "/@", "colddata"}]}], ")"}]}], ",", 
       RowBox[{"ViewCenter", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5", ",", "0.5"}], "}"}]}], ",", 
       RowBox[{"ViewVector", "\[Rule]", "viewvc"}], ",", 
       RowBox[{"ViewVertical", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"imsz", "*", "ImMagfact"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ldp2", "=", 
     RowBox[{"ldp1", "/.", 
      RowBox[{
       RowBox[{"Point", "[", "x__", "]"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sequence", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"EdgeForm", "[", "]"}], ",", 
             RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
             RowBox[{"Sphere", "[", 
              RowBox[{"#", ",", ".2"}], "]"}]}], "}"}]}], "&"}], "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"{", "x", "}"}], "/.", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], "}"}], 
            "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"a", ",", "b", ",", "c"}], "}"}], "}"}]}]}], ")"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.699249347462845*^9, 3.699249378662883*^9}, {
   3.699249410254715*^9, 3.6992494190395737`*^9}, {3.699249482648719*^9, 
   3.6992494827700853`*^9}, {3.699249587758847*^9, 3.6992496406957083`*^9}, {
   3.69924970797849*^9, 3.699249724305653*^9}, {3.6992497824269247`*^9, 
   3.6992497870761337`*^9}, {3.699249937114019*^9, 3.699249952938177*^9}, 
   3.6992501938926907`*^9, {3.699250292422018*^9, 3.699250296733912*^9}, {
   3.699250476788011*^9, 3.699250480754809*^9}, {3.7104271860244827`*^9, 
   3.710427264911035*^9}, {3.710429353864211*^9, 3.710429384991205*^9}, {
   3.710472743805583*^9, 3.710472769200314*^9}, {3.726478533409905*^9, 
   3.7264785828974037`*^9}, {3.7264786390923367`*^9, 3.726478642476553*^9}, {
   3.726478711750431*^9, 3.726478712734763*^9}, 3.7264787765382757`*^9, {
   3.7264788470624723`*^9, 3.7264788939767733`*^9}, {3.726479014175867*^9, 
   3.726479015196299*^9}, 3.726479609278223*^9, {3.7264796409475737`*^9, 
   3.726479642106863*^9}, {3.7264797497710752`*^9, 3.7264797620483923`*^9}, {
   3.7264801071146183`*^9, 3.7264801112303667`*^9}, {3.726480794846888*^9, 
   3.726480795043374*^9}, 3.7264821249513187`*^9, {3.7264824482911587`*^9, 
   3.726482451378714*^9}, {3.726482635580271*^9, 3.726482642089551*^9}, {
   3.726482742952465*^9, 3.726482746775961*^9}, {3.7264829210176086`*^9, 
   3.7264829268489103`*^9}, {3.726483002725223*^9, 3.72648300534844*^9}, {
   3.726483051273684*^9, 3.7264830538675003`*^9}, {3.726576879151161*^9, 
   3.726576892459021*^9}, {3.726577107906446*^9, 3.726577128125135*^9}, 
   3.726579653781171*^9, 3.7265797008304663`*^9, {3.726579785908555*^9, 
   3.726579797468473*^9}, {3.726580550820354*^9, 3.7265805694697447`*^9}, {
   3.726581277293254*^9, 3.7265812793001213`*^9}, {3.726581318305379*^9, 
   3.726581319057992*^9}, {3.726582066213879*^9, 3.726582086935914*^9}, {
   3.72658212138129*^9, 3.726582121892213*^9}, 3.726802352527829*^9, {
   3.729843899148926*^9, 3.7298439007070007`*^9}, 3.729844507008691*^9, {
   3.729845898852351*^9, 3.7298459334822893`*^9}, {3.729845969279148*^9, 
   3.72984598089118*^9}, {3.730007780561079*^9, 3.7300077809867764`*^9}, {
   3.7300110662337723`*^9, 3.730011073617406*^9}, {3.730966436597426*^9, 
   3.730966468391102*^9}, {3.7309677584690237`*^9, 3.730967783678144*^9}, {
   3.7309683644744453`*^9, 3.730968394449645*^9}, {3.730968569418654*^9, 
   3.73096856972593*^9}, {3.730968599869174*^9, 3.730968635193552*^9}, {
   3.730968724720296*^9, 3.730968806969438*^9}, {3.7309689225912743`*^9, 
   3.730968924906576*^9}, {3.730969060720553*^9, 3.730969083791918*^9}, 
   3.730969504550802*^9, {3.7309701158498793`*^9, 3.730970118232705*^9}, {
   3.730970149035082*^9, 3.7309701744832373`*^9}, {3.731029675238097*^9, 
   3.7310296920035467`*^9}, {3.731055578061709*^9, 3.7310555827232733`*^9}, {
   3.7310559578168507`*^9, 3.731055957959137*^9}, {3.732258037263607*^9, 
   3.73225803743787*^9}, {3.732258299814834*^9, 3.732258323110539*^9}, {
   3.73225840645844*^9, 3.732258406712369*^9}, {3.732258445260021*^9, 
   3.732258445706661*^9}, {3.732258637737616*^9, 3.732258639552229*^9}, {
   3.732258786910016*^9, 3.7322587870357027`*^9}, {3.732259013300268*^9, 
   3.7322590143155537`*^9}, 3.748429528610982*^9, 3.74842959711019*^9, {
   3.748429653738741*^9, 3.748429654135249*^9}, {3.748429728193718*^9, 
   3.7484297447339087`*^9}, {3.748429899627242*^9, 3.748429907478649*^9}},
 ExpressionUUID -> "66e18f6e-3ecf-4c47-b8c6-e7181e583fb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ldp2adj", "=", 
  RowBox[{"ImageAdjust", "[", 
   RowBox[{"ldp2", ",", "ContrastEnhancement"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7309686896992807`*^9, 3.7309686906742496`*^9}, {
  3.731053539661934*^9, 3.731053542472992*^9}},
 ExpressionUUID -> "87b29ace-1f57-42c3-89f3-a7328d4a36de"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
XSryrte7kbGzFL8/6XWei+g4r1LkyLLAI0scyfj2nzNp/FASqIlsf9f/1byq
Te0RWeL8GCFfWeyr8MOE7mwgatWY28xubmyWW1ByCgunc3EGD6d1cvIfu3Oi
JjnrP1fmyMLCzxlFrinByhlFWQSq8b8sAPgi18F6lLQZMuXJmidL4kGLbj2f
q9r7at6aP2fIP82lTXHXkOnN2uTpyYIw50sn9Hmxs+osCz9Ec1c0WTwfGb7e
Gb6oDx6VP4lAfPtS0N+ZSnbls12F3Hfu4dWyoRF26eLzT+fmSdfeVdfBTefu
pax2JMnURMHPjN4ZyDlG9qJvbvITVHtH9Qna5HJWLqDiTMvctI1b8kqju/z4
n2Bd5My164N/vbBV7ugwx1jmkYZ3pPEDWexAGtmR+Kti54eONrHHLY2GZcmE
LBn/UD2FjhsY56ZXuQ0jp3dzliBfTD5WN3G88D3f+N3MlaXglapEtgMKXBGr
DPshp1kEOqTgJrnDP2aMOsBPwHMsZ4GnSLZNcm2TZ4s8NXKh1RS+E/LPz4Gd
WBNkSJMxkGo7OV4iYjFJe0ljRO+Ipi7pXe39uLfcP0qnr+lw+HJr4ODvXbpY
+JGGg125bHetcju+qGez1lV6+DZer9ZU/CqFbr7/S1ba66yf8nOs6ifsvjhR
6nB/Osa4N6QfqvnHL7Ms+UzR/jQdcTtBLmPmojrOLedG1dykmaUglnxEtmS7
LtC6/mHRpJZFbbvGK3JkpLdtRJnzzsy5LHkkDW+JPUVufEIS8Hemk7943/2R
XW7fkov2VB07inXythmd3IKC0zg4a4hzxlm5rR7fC+aLP/gbv5ultuQ/V7JL
1z3yXVDsPaXeU/KS4iwOlcnhv8BuYgCfYdtaiZL2ttf4mMKnFDmm0B75WRaK
YwYBfAfkn2bnOlhnHwLsUqhGzjq5g+m2QLrj+GiR3q/mdno3L4Y2r17nTl4H
NgfG6GKMLvkIdLM7eFjqyfNr6fA7mfq8/E6mW5t9Rwf9p8es9B7ssYddhW8d
q/xv/EYVVq/IH5ckS/zg5+KuNL/Fwo/In2gz2D95cl/CMrwVfPO+MEk7M3TM
HUW54wS3F+PiBs6j4PpXuKF1bljObtuUztbVvxe7bl0xtgn5RxLaliVPOrMX
ndlLWepEGtnhRt5wC8udmdSvwemW8rrkWNd5be4iS9eN+ffd9Y7NDVEozarE
Yk/XnjAFbJfvnpNmNz/bPPUoDIUFz748dq2rkGOfAqfCJ/khBdlvLU0/tusN
oHm5DzdSZGD/mZxQ+IoSN8JVA4tAO+TNf239WIA7IP98SVP0t1rrH18Zhdjn
AzufhtJt4Wz70eGcNy0O5qXefJcpLhuho1E6H6PzUToZvt4e2Mt3p/m5Th0W
szQU7CoVWeYRdjIVdvI6O+nd2+4qlx5csRalno9AFneHKywKJFnYYLfsfpv5
Mwsk9iWswzX/+FXuHW1N0+Hf+afs56I2rnOG65nnuuc56RT3avAf77JiaFO5
OywJib8qje2z5MOX+KEkuMm9m+FW1znb2B+5FcmpoZdcA+QfIv8AedrOdJJD
dVtlXZqt82Ozdy9ZBOrcOZdVDvgp8N4f1f7DWCvL3l15/JrPq7fzv0pkT5LB
e4rlowE+Q5uZ857KU2TcIg+7ZLimJFHqhhLs2mGbzz/oAoOHQ/5pat4TeZZM
7DrojCLssuj2yuiIQuyzgn1ibJh+64o4ewuRgYPi8NX2azoYoQO+8ee40leJ
y/z8pZPIZv2Qfw5Z/jn/sJM7v5PpTnepIPF6Hlw3PgJpzG1GRxu/ULO7zehk
Dz/7zN6IcbDgGjmIvaUSV3RwdT+3HeKqAS7l5Nw6me9M6jmW2HfExmK74h97
db1aULduWNt1fpE9LfFVJKEtaXibHyDtzHLTc7JY5BffZGtto4tsgxQYoego
xV5TSEwm2am2oy7nFg2c2scZo5w5wRki0lxdHMm2W70P/pa/ylBYsJSXXTsb
/hNl6EYdIU3wSuU6+FFrdAM0O01q1nMoj11rK+Q4oMA5Ra8ofkExdqFXI2eS
7rfmalNc1X5W89b8OUP+aV763Lz/XJEnyz75Lz+Mp828pyS7MmL5J0NmkUEh
9Zi6Yu7eYqR/Jzt4WBo8Kg/s5XvLMfbF24MIO7n7+P6v7Xrf8SFLPqywOz31
WmfmEXqCXq2rW+S6lo27Bvd2+zR9cfNgyTOyH+VCGi5h5lJWLmrm3BpOvSzz
nEjdhxLblkiXa18PfPLalhUDH4E0vg5TlJ/8bk91WOLtWj/3bkoaDv1fcOqj
/BMbpfgIhQfJJTvW/JKZ497JuSULJ3dzSh+34eYWze2OT4//IxiLi9b6in1n
1VZfYYnoCd4RoHnZN1f9B8okGSvk3CUfS0F75NskV4ZMnmPsOwMPx32k0XWB
+2GnTt+pIvOh/Sd6I7QMX1PimELsyiguzA+V2LUyt7EzZO9KeHoygZ5ssDvl
7wz/Pdu6Q68TOx18E1A+271Z7d3d7mFls9qVy0gCdy0G+Lh6Arq+qGkg6+A0
s/ycL/MqZ1jhFPMS27bUvsvCj9hY6lDFWxf/sd71QM45VPVxg29a1yxtCkeb
0tmmdLXKbS3LepHFJPF6fvFM/JFbkp7o+8g5RIHXFBwiby9ZfistcKF33PAi
92aDm1JzMzpuSsONr3O9k0/2LQPAtzCVFm2VVd++InajE+a/W3JkZp9vvjP0
GsN34T6n0ZVqJP2xzk42N7k85HZSA7ZW/3bq5Ixrdz1yoS2RjV0QnQjjaY8o
tE2eHFk8xx9myostaqlDL/OaZX6rzGdh9z85Dr+Hl9PO0o4sHutMp1hhdyR+
b4fxIStsfGwg6xwsur/xyd1edU9Iz+9PuvyGWxznZkY6lDGRNivS5UTadLsi
0rb899ihgbR9eCs0epIcv8yOX+W4gRGOG+S4aY6b6xjj35HlOpHVwpmGfw1M
thRWJcfabjL3kLX7vVF6oGxNLf+ffZLrneKGFrmRVW5khRtcECtqorV829xT
NAEBwLczlRdt1RXX3rr3RO49VbAPN/vO/dZdB/i3jwPPCw8/a4U147nBRa4A
BSIUWjicn9uZ89Hn9ph4NszlJdfWevRCywJPlRw1cpXJniZT4PIr28p/gl9i
2mYVu5xit0vsdors1naN+sG16nIqB/LO1zvhsZPk2EV2/CIzeny/nb9apnWt
8+bWJUfbsrtt1du24m5d+Lvlpz9le70dGr/MTVCVXymo9S0nXuJkCk6iFr9L
8GUi2jHuZ/mNU/byEcg78Udqvq283F5bbSst/x6c/j/7RPtiTLxRlmh2pfoj
qf5Yqj0Qq+os/7TPhx78jQPAj6PPzRvLi8bSoiY52+i6wM/ghWeej2kPtU5y
RiicomSWMqwkKckeeunhY4CfgKW85Nxa8x0pgleqMGmC1yr30UP6xNuUinat
pl2nbVc9cCGazhDfXNZplw/kXSP7sfHrvJBPauz2DRXHzj+z7PMdXk2qW2b0
LbNGVl5N/T18qNunGSp5xs5S7MhTtMe1jXKyZa5Hw/VZuD67dKYknSlKprPi
d/H2USdLcXwE0g/+xz76i2tsfsc4t2Xg1IOt72xt8yGWdsSqLZZ8pLpDiWZP
rKh1rKTbZrwP+/YB4Jlr3lHEzVvz5wz559Z6cc10afSTL0mJAuXLVCpTMUe5
BMUD9Nw7RPhZRbVl+zY/ntZYeurxtDKvqTvl76vG+3eyA3s5zjjDheQs/Py5
mOEhu2X3WQRioej73643Yhyq+v6cLH/ESWa4HgU3YOGG3NyQX7awLZuvS2dL
kqmM6O3fLTlvIqvvkvKJ5Mab8MofQ6stb01t0+72pbhovSBW1sTKulhe7VjL
tS+E2T99fyUBAOCZQ/65pajJWf4JkD9FyQIVKlRmhQUhFofYF43n95tleS/8
CjwBnzQaloaDX3/2DzNdfMj+C1KPqTvt799KDx5Xhi7qrHDOZS6l47Zdk7Q3
QyczdDZDx5O0+5bKd/SCze+YVi+c6zee1avPLBD0sd6oabDsHTtPs0w1TQec
dJ7rVXKDNm7Yxw0FO5d2ZYs7svmaZDorevuPzV6VdYXhTG8443+Vr8Y0HyLQ
fLhjOdmxnGJZqG0u0Dpp+8LbAgDATwX555a8smE40bvJHaNoljJFKrDC7kQp
6iG3eud+w2m+ncTrkSXiXflcV6XUXSl1FfPs4Q96ry9Z2DWt3XgUFFRRWEnh
DbrHtK+uqKuvmhg6rb6mvRE64pQTnHv1z/yzy5LPDJ3e5p83VBo5/My3Nl3S
LJ/Y5ORXUURDMVbYHVafL71jT0A/kHW83o28eV9gEYgTz3GdG1yfiRtwcX3e
ThZ+FrakcxXJVFr05kPDnbzKh1snOX3kZWnWRz4XOV+NaVveGlvfWVsnHa1T
ztZJO1p+AABeDuSfWyuZFfW22nxhZqfIKEWSlFi5Xlk8XfCS13z9o06LEo9b
lkp0V8u9u9u9+7u9ezs92/XuckkajXz9xY/hbXRtcd+8QT6WOvSUMlBaT2kN
xRX0TWOAJQ59d9LXv50dvtoepeMxuuDkbzjXChdWciUrt+NmsWeKDqZob4I2
xy6yw7VPk9W7lHzp0KqggI6SRsqZqGCinGxTKS5siPpckn6vpN8n7vtHFupy
qfgmoLyLH199luZaJriOeU4i52R6TmpmyUc6W5ZMZUUTkfYRfqONjdK66cLI
QmyEwnGKxSnOIm6Igm5y/TGieDWqeTWuY1mI3X+snyoAADx/yD9/WS+uq+tq
06nRQXZ2umTFQQ7jhVFRu2vL9QfrMJuk4VB3uciST//ZSf/lOb/w4NEBv/FW
Pvsj3vHfZqu6tWs3CzwmylupbKNKP1l7bsyyU11LYbkzlbj75VK3sSvh6d/O
DF9tjQj5h49A5jk+AkWUXEb/hopvqfKWSmPn6eGtYF/s0/WfbyugpbiZCjaq
OWhz4NzSs2/srGvbk+vSoZhsKC4djEoG/tEz2O3T9oYN/WnbYMHF/TrE/TbO
/THNvVoUT0SE+V8x0Ztg+4ijtZ+fwqbZ1zjJwcJPmlJ5yhUol6E0C0KB+zRz
AcBPoHlHETdvzZ8z5J+PrRfWlHWldl+jO9Kxot5VrxXWftB7iR12aSzaXav0
HR8OXF0MvL8euLnsOzvp2dnuKhV+0Jt+7E1kdWHXJCe/ntJWqjhp6zV5h8nb
T86uG3P7tpLVjdVEFot+6QgSh64z6uwtxQaPyq/f747QEd8Fpn7H6ac5yxxn
WxiuB1/vhoe3QoMlT1/i050KxwPL81uGdfLqKcXSl5Pqw2QfJmf/ha1rx9iR
UXaOFDpH8rLXGRaEJP3/iCtdLlWPX9sbMfZGTRw3wHFDbUPGttfW9hE7K23D
5tvws5JZ0R3rWJRlgYeFH2FYe+l2WFeIgpabz+/HAQAAPz3kn08sJZZWs6ss
9qykl3/oG4mddmk03F0p9R3u91+e8RtvXV/0nR73bNe7cvebKv4wE8kNln82
/sw/w+QeEVZIHiBv13tL+45K2AW+fkcYE5tUMp+lO+HpqyS4wMIvOfmvVQ0r
XGiak4/3xcz9SWsfKzFzt+8zg6vfhFfntgyrVy4tJcxUdNDmENmHyNF3ZpPV
DW1xeddYtXus2jVSlA2nJAOf6ZIbTesntp0z58H/hNd+iW78J7TOmaZb+lWv
uj/87tbyq7ojrYucwrCubImKZSqyIMTyj598Dx7W3qazdjiDokBSHM6IWPE9
wrw2AAB4Ssg/jSKyWviNtzLpnnqt7/Cg//S47+SI33W0XHya8T9vo2tzdcPq
hUtDsZ4r3QA5hsg7SL5eckkvTK+K6/wuqPu73bWKLP7F87vEoecUg5xvloWf
37b0v++bfj8w/W9b/2uB7zTstHzY2XNuU79y5lgnr5z87Pavl89UtIv8+J+g
nlImKvSdGXtPTF07BlFW+btzsXusxkrXaOk2/7R36VvXzO1af4clLrKnOd0k
512eu4kuUmaZ8stUWKJcV2xkqDxhJYtV2Bh6Obmk3lFbLs0s7cQpnqF0ljIp
SoYp5CSHovaQMT9tBnuHJyKO5iSpiiSzyZdkRRzJPuBQAADQKMg/X/Kj+1s7
DDqRwyYNBjrTqe5yqWez2l2r8vO/YlGR0/7j3vdjnH74V/fkq/TKb6XFrktd
D1m6ySo9N7bWlf8XnO2/PO89OuDzT/KuKWmc7jUXXuCqau7A1HblbL1wvDo0
LVF27v2H1LSwa1p/71FRWENxLSW0FFfRh4DHLff+R/V6+ci2QT72RUlpXVzc
aE+u/u6a59bHukbLLPx0juSlQ3Fxn7d13dquD4rsGbGnxK2Nce6l/2S0/9ux
rVFtg7ZYGay+e3OyMHWzEiB/kAJ+8rvJvVHe0G5rrFcWL3mCFAxRiGUhBzl0
x7oH/MRaVYZ2R0AczUvzW7LKYefmsax6KC3sSlJVke+pJ+4BAMCDIf88mHJL
ab4ysTOpm1xOcn79Bf/Cb7xls0q8HmkowK//EwlLAn6x4ynCT8uipk3t4dTD
nOnNr74ZzjfOJWd+yS201TZeFVZ/jcz3X130n5307u92lQrS0BcXJuJUI1xw
6b+b+pZLz683bhHFRRRlUWSVSovEbx8/W9OtXrnUFDNS1kxFVkyU01FKlF0T
9drF/V5ubfg/qrFfTROLh5bfHBO/Od79anzLrb/mBz8Pp1iRDsbE/T6Oe9Ou
8bLwIwlsSmN7nJ5fZfHXqvnVqbf9fUhJ+4PVyYnz5XlSrpB2ldQJSsQoFqLg
9OHURnFdvaXSH+tMl0bztcl4YdTsP3B3j1a9rcMblaSrLPZ07lx07V2xW1n1
SJqrowkI4Jlr3lHEzVvz5wz552E0e2orWX3kZWfYMIVYCZD/ASmoQ6/rsJhF
dhuLPSKrpV3/kEaJB2hTuTssCbG3zOnGOPMEp+vjLMOcfZSzjnD28d6Dvb7D
/d697e5qWZaMi+zWzx5E7HRwpgkuuvrbrqWVgiJKSCgtoWQHhVepvECp/5j7
F/ctCgroKWOlsoM2HVS3UbV7Ty+tql75F2VDCdlQklsa5jZGOeXYdEnDrfRy
k9KObrOo1ynu8/Kl19nRbeK4vnZDSOwpSqN7stQJZ1ngQopfa9ZXZ752CnfG
R0cP5udIsUYGJVlUZC5Q/uN5Xqu5VXlVrqwrFDX5Wv7hY9rbjM4Ob0ySqclq
R527l10HN3wE2jyRZOvicPbBhwUAgCeG/PMA7ExqvrkdUhJLU4qdZ1OUjFG0
WaZUt66a2vUhsbsgjezIksey9BmnGOEWJdyCmFtTdKaSXYVcVzHfmcvIYhGx
5/MbuLPkJgn4OfMkF1n775ap5cbfQXExpVgKaqfgChXn3sf+zz64eGBRUshI
WRvVnLTtou3BG1vvsUlW07SGV7pGCl2jJXZ7O8mLpR2+etKNNpmqvVPb3qVv
79K1dapbJKutGzYh/5Sk0f1OVmHTPOdb/yVv+H3f2XLh7829GT9aWCCVnIwa
smrJUqZSXpjnFaSA+fvmebUtu9rWPmyD22Z0tLtC4nhRVtztrJ927px3bp3J
ygeSVBn9XwAATQT55wE0e2onOaIUuV0puiRMqU5RKkLhh3WEPTGWJTqMEYm3
LIsddGbOO3OXndkLWeKIm5zlZhbEbpfE55X4fWKvR2T/4n4QIqtZGgxw2jec
b/E/efX/DhwsArVRqJUCr85cv1a1U4feyazyoyn2t+0/mwNXlp4Do7ig+sOz
2DVa6R7b7B6rdrIINJyQ9H9YsblFvNTKMo9krUX8YSZX67qlXesTObKSYF0W
P+RU7zj7Ihfa+CWv+61u7smMj+zMzNL6GumUZGK/kZIwzytB8b/meUm8H4Jc
W6emo8cq7nOJ+zzi3ru222hdcrbLwyJNSqTLsdKhSbdqTO0WN98ElChJ81vS
4q60sCNJVUTBVJv5Kzt3AADA84H88yVf6m9dTixpDz9Mqc5RtkylClXY2ZZl
oTCFXffJP/u700QrRHIiFZGa6IEbr99Xq9z2oS8psitLnbLw05k+Y6FC4q9x
I286jIYOs6nDZGzX3rUj2O38ta58jjNPcYFlLqP6tW78bdf627b5/0oaLrg4
ljdOxNfnavqVU4eSwiwCmahgpkLXnlZaVnKOcS4w9UtA839B3S8+Ncs//CDn
ft+X3q5lWdemcLBqi5xZib8qCW1xmknONMO5l7jgiiw0NJB782Zvbu792gop
2e/idp5XiELDtZkOz1BnOtlVyHeVChw3yXGLkoGAdDAsHYxKByOfLK7490+J
hR9FVKTPi81ViXVTbKmJTWVuSNuqMfMRyB0W5r9nRaF0hyfSbvl0ww7Nrtry
3szysIfcLnJ9ZxsUAAA8LuSf+1pKLmn2NTaysXNrmlIFvv2nmOfbf5IBCtxO
u/4WJ4ezRKtC7NETmYRiINI+bm3FHrcsFpGlEh/P4WpdM7epPR3WpNhX4SNQ
/EAa25cEt8SufLv+W/dgZTFJ7HHJ4lFOPcZHIM8CF1zmIqv8rWt2NPVhINNk
Vjm3qV8+scv5GV5hNUU4ZQ/necPF5/6b0P8va/09b2O3/43rJQMhUc9dY79b
Voytcnu7zt9hinXYkh3WBD9qSP1mvGhut3bJ/AP9idHR6qSf/MKIrHCA/MO1
6a74m658trte693Z4rh33K/L3G9q7n+Gztc5VmTDadlQ/N8RqGXG0LbuF+my
Emtd6tyXuo+krgOJbYuPQP1yFoHaDI42s5uVdpOrTffpL117oGV/IX8ODwvf
VuZe2RgAHl2TjiJu0mo/f8g/D6DcVBiODOyinp3XkpRgySdB8ZCwpIxm7/MT
i2Yq2o8flosTRMtCsw+LPeykz86MDuKzk1FIRI+A31Y+GOjMpLtLhe5qpadW
6SoX2UP2Ty1LWn4uudbXYYmzzCP2lsSeksiRaTeEWtc/XaX5S9pVSpHFLPGy
fBVlAYNTjXHGCb5oxrilvr+e9ja6xiLQbEU7v21cPLAsHVo58zAXnv4trXtV
s7fueFt3va82XX2hrjfFgfnUaIqMcfr8IPBX88qWZQOrYZvC0aZ0tinsLMgN
eteHQ4rhsKrd2qmoyLV7WtO5UVj/x2K6NEpDo53pZM/WZt/RIce95n6d535X
cq/M3CuH0PVWERYXSksHI6Kef/T0tc5b2zdCYkNR6tiVeo5lvjOp50Ti3BOb
Kx0afl5by7q6RaFrketeLX+6PQr787C8t7DAIwwPS380PCzw7b8+AAD4oZB/
HmAtv6qosAikt/M7hXnYZb6H3Ox6X3f06Yl7tqZfOXfIKaCiMCsK+tDOcHQw
ww5D/ImenXbdxC8J6BFSkJm+cPa/l3athl9cMcsvrti7v9t3dNB7sNe7s9Vd
Kd3uL9+yrG9ds/ApQuNt1wVYaVN7vj383OrQ60QWk9jpkHg9kqBfEgpI/F6R
4zNDhibi6ywFTRVUnG7gl8DkL+H138umtn13x2ng113HcK5/and06fzNBr2r
k7tGrjJ92hDUrvbw9dR4X83KWxbUrxY+kxJXsysb5XVlXanaVinrihZTN99D
V8j17u30n59yv7zlflvkXmm4FivX4uZ+dwmLK5Y7X2f5/NPr+PhQrQvW9vWA
SJ+X2Lel7iOZ91TmOWZZSGwsdajuGue8EFnQHmic5PxoeFhRGB6WDPPDwxx3
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
uHH+mqxXpjon0+en06ftyWZtopQfjUUIa47M7dKUZq6RSNxE4R9NXI4g/wSa
w478oOEVQaL3IsWA0Tnsi7OT5ZF8i6bmFtsj2QYxWIlGv3qTwo+zAeV1Otfn
iGKf6Lg0yaeTm7+p0sosmi+UmyqGx3xm6rfxWWg3xTLNjp5ppaeriTHDyIxp
zFLhO9uizfjsdnp+Kzm/Eprp9rsmu4tkd2nEpkGw+TjixjIpaWdsj2ksYBuP
OMbDdrr/t4AfnPdj1bEGzF/A6hmsn8B6E5aJdIuYeN2sqkVoM1x33s1Hmj3J
jMeoP2TMJMLvd7EZQPhhemO2cGxBfR2KeJaQi77ypn0yTb/ahOd50OZH7Bl0
BAfMboSi7/84E075pFc9EzdRgpVyiVlNPBYScBC/fbJenSgVx7NPVJlNm49X
MtrtDvJP/KO2RXVGtBf556VFdt0FFFPjEFFBvOuTkT7X4+JjW83qttuOPQgc
QpQJwMUOIPyk+oasJn1nnh7wLLCiqyPJ9ZHEBiu80u+a+/r+ddkjS4nv7kiC
oECGiYDaD3L7i+FHlaI1EbgOKoKlDo4GOHGLKJXppQ/17HewP5V5tHmO51qK
C5kMGLJgwrVJBF43O6ytrf0/LgsR6LCh493YxODB5RtuR/M7w7E1Rk/KF4MY
oyeVxrk7DCEnONQXn7xL6oTDOHw+LkyzMtk1b4xAq14u01PI2UUFHaSZVOG4
ND1uKs8wyTzmz/w/2gajEoIIVK3unp0ewg2HpgPdHJy0nsmploR25NHXFb51
27AsNoPICaPRtbnKwRZIjmnwyygGowh0UapE5jF/VHu7ERV1EYgP9ofzj48P
m7oho2Ek4Bsv5Kbaremri5nbq5nrSwShiUp5LJl4ty/uExkHlO4hS5LlKbOD
rZFweyTYYnvK+Bv8/aNjk9WlulutGcxWsD5qVdSn0A9afaxwdiTXHK2cj9Wv
R+tXxOGj7aNN1vuoygnO9TjpE/E2ke8hkExmg0gLM/UkDVplAggzQP02MkYU
3ohgMx5xTkSdYyF7VylVnT7Ul46MVa6hfDyhG2Kblc/2ux7WSrqxOUpHJuWr
vosvmdr230R9rAOLAJs4e9/AwTnst2A70Z4kFj7DP5Ulyj8XTJfIDlUJaaa7
WUATLsVsyrrUiXS1UXbg9EOyDaSfTbZ5L1HhqUYKokNp6JO8WY9BvPAmPEpy
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
c0lDftnMerm02ahtV8tbmdTjhedOTs69ssjuOi3kTVDsirK9sKzpc0NQ5zBA
JYeQCuJEvUU8QpLSk6pzEVqMjBqjbn9R/LjX9C9lA0o5rS/ze8czqclaZard
QgqaajVoc6F4FP/05Kvssc3SDf+SOqX1TImElckSNMJnPeRXs7r18hOJbb+C
4f8LrhdMYDSB6cnu9z3r2S9rfyr/dI226YvtiXxbf/WB/DW2X+lqYTgE4OTd
vmJa/BvaUYTDjXOPo3+NxwwRaCqonYmbZtNWsr1LjvlErmGna6Ol09Ea9f+M
FE7Y8dKQ5y7+tRCQ0eKvph0RiAPxYyb/GeFnu+1cjr9UuUnWkK1X1g6u97lw
LAA+D3gcOLTBM9fJXknJu7YqqChJxkQ7LVS6ongqyj/f4nraKyrx4kT4QaAy
QJ6YD4lfSvJm0vKSTpDptXi+BO35q/JMI/UN+/85NqTXsmwWKsiSTNDk6mJ+
PJsZjUVYri9qAsbqhyd3jbmQfJxMZajrXpvvLvcMyYcW4F/79iGE49n89uWY
cq1ofGGHou+0o8iRsq1E8nGA3QUuD7jd4LI/d/30rGe/jv3Z/PM99ltHXdfD
gsOmDsmHKTwJ4mwlg+C3TU89+znWLZ4a9c4N+ObYidX58uFckcNOVUeyzZFs
g50oD/uTg6YPOTaLIdlKSrNeNm+dOHbO3Eg+GxXzcvKlfcUlFclaefUIOBIQ
K0GhAqUC5CIQcoDzFQRatB4grtzrjCfv29oUkYUUEBbCq9VX1wK8g+qDym3W
DCVi5RC/hGSNpOEm7cAShZ+zRTiZuyhOV+Mfl9v/UjaoUgxpNcMWMy1I9HpG
/F62x82yWQeV8i+9JHt2zDQB0zNloR6mOYaXASEzA0V3JX6ItQi3x5DGwYHE
582fu7YUVa5XzDvn7j0I7kMYwfg7+yE8a8jPRjAg8wQhEIFwmGkD6wXPj+s4
1LOeva31+OfnW+bsuAXiC5BfgeJtuyA+2H5FLYCHxiMZHU3SSOCPom+KUPTs
JxgnzFF26Gp6uba/3jneuBCsnwlW2rzhQGo4kBxyRwZNrj7ph9l/1sanybEx
JTIPgtByTDXvf+m1dBw9no/O7V3sIfxoQYNvamaCFwqqyMZ3w9cqyLbTsoO6
lmlrQzstaCGF11hX04Fz8uomh+shwUGVXquIT4xDqUgM+8TFJxEFyZlI2X4n
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
XDE9HTEsVL3/LChJQ/3PK/O/wf5vsP3rwkiqChI7Fv9uk1e39/JIODiWjI9l
UmPp5Gj8aSfbb2cLQdlyXLVWMGzWrbgW2Go51ivmldQT/49LEQVeHvgcph9C
DMkHkQnhZ/3/s3c+kKm2/x+/HB7n6/B4Hg/HmTGzMbMxszGzMbOR2ZjZmNmY
KTKLpEiKJCWSJCWSJCWSJCWSJCWSJCUyySyRmZnNmJnP73Pd7ezsnLPtOftz
/v2e3i63+3Ta3V3d3dfruq7P5/0pU9cgcek2VifUjtXJQZah6zDyj+b0mYvv
e4k9WnSjIlEcKlRHKvWxCndEX5WB/kX0+0YR/75n/uurwz8vFPLP7fzPFVNu
/hqiyELYzyY/dwMLlbaLTf7Jp/gfJ0M+mwBrZ8CK1YY+Dwd6UXX4lbBwPSlB
2mHXtJyGntMwsPe1G9nH8oPeaiZ6IusjNf7kmWzmUjF9Kh+vCZGCnkcI81Hl
SsVMJ3CO3E9y5KOZLLW2s1+aD3kcxuKQFge/X8d8PkmWOh8xtQw2ZpoudAWR
CwghBSG43hup9Y3qkqh7jI4+H/JPdbh8NFK/JAoOnYGJaEjRSuqudxD7E+Lv
IIIUROrWNdhfguz8wZdMwg1zRDmhoqaYjK8t1LkrZwJsOGA3grHH3DuVWlxs
bK1f7m0Cf/2Kt9Tauf3DLfeW/IAubRANh/hUb3KOt7Xg28PoH/UIKfpI3IZI
cPeFhrQ85J/ZimfxMvXuwPj3hfOPc8sfZ2ZyqCUZEQnfUyX258p1JnGfPYhk
PSrlgMs5HI+OFnLj+5XxWnWsWhkt5kfSv6hT4lM165ci2ywkNdhYMdXcAyl+
+LT5sGIxo0PgWTu0rzccqzUbEtGMi9KIuCBSt1RWWh2+HauTuhur88IaYXux
XWFWIMwJ+Wn+M6oYd9TRT1SHf14oY3nPfXQT/4P96QkETsB/AO4cmPzw2TqC
M7EWL7LLTQGT865pwNwZLGBrwmzxfPxjAojjo/vZp3v+TkXDO7eIwCUBrxg8
315lYDkkQApaT0nX4uIlH++RZxLFWFdobeRAOANqFhgXwbwAxjnQTDQkyAx3
qznjWPJfX3cpS6szbF/fTuBEv70u+WJWv3nq3YUUU9mqJoa6CKo8yOOo9ouw
hyfJ3hLFQFsD59mnabobTE29wLT2g1jZo7P1OYID0fxQ/mC4ckK0e8SrIAkt
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
HbFKplIWVjO0DHnsWDeggW0d6itQWrpKz5Y+LTX226zYwyKojGRSj1jNIHsM
+n3DceZpucxIOvVQOEpbvWpVn9k06HEPx6KjucxoMT9ayI2kEv9T9f6tH5yM
LbAqGyvH7LUz7nJzZza/MuKbvvc43VJJj1LRo1b2KJ7gYbieknKbRrzMpOCT
QRDpWvJT6+SaSjxXg/pwYl+MPXLbikp6tck9XJkPT6/B/gY0N6GF39EaVElK
S7wSSqRmE7Y+gx4/gdtD0WifiGM8F5qsJuhMy0GaSLZHQ3ZEnelmFtlj7ro2
e1mdOSpMlmMjoecHmH2jBowKPJ/JSmzmtDQHBwhg2HAH/zlVvydnH381q3Xb
t0ycPlWWOj8MCJnWJhNkdQFh3LbA+3VGJJ2Prdu2Lv1sasOY4EKcZnR+VYO1
o45+O/03+ad8LbikOU0GJt/KxmzN8LkPzK+w6to2xWXXdbxzqwhcYvDglndm
2am+fqjqrE/KiigWU5qlrA4BZiGhmfVL2/8lygvHA7MLpY3Niz0OiMIQCkLA
A24zmL42D5nxiIlyitiW/hfY/CvO+TvF/SvOfuvbwO51Z1/Dv6JFM7GTRYrD
fvZ1E9mW8vrNMy/CjwCKM+WNlYu9bRCxQcoBCZ7t19Hatxr3qKaz9oWTGAIP
9qqbcLwFJ9jJrkJ1CTLz9ZsQmn67bSgcRJ6h6yz7lbFqma62ZNJfHI2SjN+H
5INPG6/vM6Y05dF8djj62Gpar1ZDZ4HstgGPa9DvHfR5BpyOPqO+xzA0YB8f
8c+Mheewjfin+yyj3/JpjPvU0xnbXM3HaoZZrcj8wf0d1mpEyGnoReBWQFgD
CWRs3CohIoWfVmxdm+UY83vOA3HgUoEUFAcdp8razM8txqaXIYdcuglH+AXh
ljRdpGwmVh5Z45OZnT5TrM8cx237OAMG+UjYMVGMTDdzs2fl2Yvq7HmZCNaJ
lCLQeNqPzDNZSyIaTeSCo2HHD3hrQw7dWNyNqDN7uc+CowU4ZVbfWnhu04eZ
Yf+nuZf2PCpSB7MKHMHt5pnvkSM/SZLghuNIFANNFewnnzIiIycQ+MK4fi4g
XamYkXZ2IdmOx8PtHmQ4ELvNQOyoo99U/0H+iR9wWjTMWM/km3uYUhSej8Y7
v1xtrNUIrbK0XVQh87D3NdsV9UbmO85TTTsEM27RtP2TDx7+s8c0Muiamowv
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
PIleaCDxC+32C1KHf55bqf1NJjrCyKTJIPyEmKwZL4NDj722HfdJ5srmtesg
Ag+ebT5aseM1FxLR+/SW/kLHOCk4cBCxPshD80fqnzkx2Rgm+qVXYdFfFS2O
tnj+lMJ+u2I2vqPlw9vT3Lhe82AuOHZUmIT9KTh5d+TvOfOzTj2clpVdVH90
MH+jnH6tnUXaQVgazAQGMgF+wsMN3Knu9GpZLbiyKyCkhZQBcth0kFZDXAb/
uartUSl7dVrEnl7t5/M5ysSaY09EtqeJfJnoN4h1h9h3iGmDyOdTYLDu/YTA
5k+131wGEDDwY2Dg/Ka24YB7cjg2z1juxnAUE0ABQWgbUqtXwfnyU36jdhI7
6mO1DWx+8EchEodYDKJhCCEF2eDpa4M/t1SJNeeBOHylKoK1Bd4zCF1C5BzC
h+Argy32ScXI30ZDxs2ZnL7NP3gKwp8t/njxJ4yXMDuQ6SyBdfSrqcM/z63U
wdYenf/RMytfPiZrOMBMBFnh0efAiZCc8s9VcOeGf6i/mJThH9aBvDu/7QKn
H3xBCGDDccRJGexZNFswLu458NR3L1OPLzUZUb4PLXL3xaNgmAbXLPhmwItE
J4DSJiSWj27hnz65gBewDOVDxLJNQgqS0JKQiHUV6r/0c4/s/RUtc8D9DAJZ
iG3kfXK1t7zDqgv7qrvduY279Go+ItzcN0jAq4GECQpWqGBrl+tRQuTjFNB3
ZSxuOxtisjZKdqeJZJaIpktgRfjxXvzMqoZtnZ+uA83h0gDlZAdzuPDWwrON
DHjG54qmxX3n6oX/U8vdEcdTWn9KKxIjHgrwRCGahlQWMhnIJCAegqALHl4J
/CfKXN51H9D45xLYmuA6AM8eeCpgT4Lhd7WMn8noFhp2Jlo+J4IKnpQYx2d6
OdaJgu7oV9Nvzz9HrRW8smRm9aXM7Y9WtLpeORJe0NUNEzMF5GYajizGY5A/
cuPjPuls3rBMw1MTzPpXXQJ1vNpin6r7mpL3iVW8fMYRJAWpJCTwmhpZ6Mkv
pWmB64Z99SKwAVG87tuA2NojLvTeGEa6I4u8pnAMdNPgmAUPtklw7EJuHSLz
1ds7T8QzdC4lriYlM6k7SMVACloSEffvmTlZOTPhFhhxDswUFxaON+QQVEFM
DXE1xBQQltC5uFvEdtj7qZNFjJuIEePU5oFRCj4tpMxQskHNBnULVPSQRf75
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
uvj1xwAA3Nyo5p9SYaK9I6HT3vwfx9n8Hw+/buBdQ1cZgYFXWUamKqv0LZ1x
y2jeMZm2jfcxiDCeNLwrOqa2l9g7I9/uPrtA6bnD2JcWap03mVIvbDqUxwEN
hbQUZjnEUpC4qvLlLW38yDS+8sfs5nslSfSkMJAqRat8K5jo5/OXfg+Z/kg5
X1aDb9or744Kf2vY/t6y/71mGUurxjxTJlo1UJzFnsm0ZrpoYK+oOPTzV4yo
KSTveCVrfxnA+tFq+Sng/yUZf1Ip/b6x1qtkwbLQk3Lxl8Qj3cD2XVlYY8h+
sr0VPXyP8YKwI/fB5Uvn4JGbq5llex72F60VNq+InB9fBhgeY5cZdKP6o9GY
EeZzftzMv7f+y8yv37ICuxgtriwqcnJ2LCbv6zz6ddL4Nm+bqLkn1/1Tm4HJ
lu99xfUq+pWsNZ3XSdtu9o/RSEkzrfLtlFeE2cV5iaMm/a/x/97mXizsTWlJ
biJNkQpFKuYpt0qrUYq46WLP0u9h8x9Jx/O8bywwPxaXj60oxxLysaVZJ5Ud
VLRS1iAsgSchAhX0c3UzyzySlm2+aZ0pXrIFwX8ddhaBfo7Hfs1lfisV2fFr
LitUsvCM5p69V3udNPCKBkIXn5qaWr6ji5LqfEe7ge3oC0NrrmFhpxVaiva2
STdTmv9p3+Dc4X3ZObW1NGZ7/bf43P8rKr6rqueO4nfpbxTp+axImy0ioxp+
eoT5nJvz3Y6UZx4lv1xcX3voCtojrzcB+03W8iZjeZ34+tyqdxH5woadhR/2
75HlExdVetsps5u93XiUBeV45sUyLa3QSoEKFaoYyKUnt5Js86R/t7v4qn5x
cdmTJcPTqHXM+n7MPTnmmRyzveWr1Nc8VHcIi7xSmrM9ZCYSyg8p9YeVL+63
/HEPZy+vZBEKsuOnJf9/neJegnRrb3PWqe2lBUorqaalDT7LfVtD6woqsw8O
unUwXKZyOtmuW0dRC2XYn7ZT+NMu2Sj/6U/7as988omqa2YvNOZ9/01a+v2a
/j+71h86jv8c2HkRVeRt6KfRyzwXNOpTW5uzB3vzB7tzm+szg24OCKYLetmB
x0AJlnlYPmEphR1uqtooZxDqgwjzty17lgAFVihZoDwLP0by6cmrIsccGd62
pe+OcuPbF3dZfBeWSVo2NQXPFnmtBb6wyOs6fjAZP1aysPZz0pTovM3bJjcC
C5RSUlUrVHQSKhpoqNXbkfJ96ZHGQrjUbM2kOPQZKdlbZeClJjsNYX+An/pg
ryaUD9tZHjO//GZ18V/rxv+eeH6m5V8oxC7PNhZDEQ3om5HPP4+Htq6xdWwe
cvvJ5yOvZU+Y0/smY5moDd2ozWzFJDvwGvg/SfYf0k/r7GBBqLcaa3HLqcjJ
jZtG96krQmEp6dVk15JbTW4Z2aZI+7w++4Fq747yF572bUg637QqDv0mYZFX
ycN3KeT9P0X2D1l5JKZqsD3autbWsXrJExB+pj7HcR8K5t7Um7T5Q9MzdxiT
Cbs81TW01qtIK6XsDOb/wF/1/gDPVlk2Pp3asPzz1SGwl2HN+5p7thsdC0z+
v5LqPx3HzxR8QvHfKfmEEuy6nJd1fpgvBB4D5J9LiW7g1bChd5FziZZYYIhR
lB0zh9KJXcnsoVCwiZ2nCzWbbr4h4T2ZKRulbaGchJVy7H/j2Uli1UJZLUVY
OiJeCtyyZX5VnJw6kEtIv0jmBTJPk/71jnSG2pPUmqDy+Fby82de3HL0RtZs
lGcpyE55E62yj7D/zHds9rO062Ut+LoVfbX2EO/7+pbeedr7mUZ6P9Mwhfz0
0CnuVUzHzso/tHwsArF3H5aC2LFI6dlO5BZL/GC0zdXNsj03/9POuqjCzj7c
VDsbgP5KB2xvgwX2azYWnv5/ZdUPXecvFP6dVp5Sil2y6wqqst/AqXvbfgEe
G+SfEaCuqB3H9iAFVyiZoXSWsgrSy0g/T+p3OxI5lXpFMRYoPSQn7JNpzfya
VdH1s1NC9n/STgU+Szmjp5j84OP2jIqcQl1W/xp59azwYXxT8nZP9mZX9qIl
+TXzYZb2pmjjPcs/2xfzD3tmHoGcypMA+yfMnl9HEXZ9YeNOwzRPlo0vioHX
m4m3B5l3R/n3x4V33eznr95HyoLS3rUFaTlJiQxlcpTtbYbMspDj6KF7gdgb
09us0JE4uRmY2Q3N7AYnNwLvKwg/cNF0Xi9p2Xp/2hbK8F0mcr3JP+yU5+rH
vorrhdphu6Gx4NS3Ofm/29b/UeA3ij2hBLv8mZbY/zF2NneL1C2689kekTZb
RJB/RoBx0+Alb5ziOaHaRdFANgM5NGSTk2mW1HzBzrpqyBbsTOV0800rSzsa
YTvlqI5iGgrK9jwz5T8XZMkzsv+4nvwv/OLXlTe/pd//knr3Q/AVCz8ztDNJ
ayyHvGpeEueECFQ0zDcsCxt2FoTY5Wz1Tls+/uJUPc/7xreS76k0SQ320pPU
FAbgjguvN+5rRbx+Tecmd+xjMdBihcolXgyd/ZQfvguIekUNUqa3Oeu7gu1t
1jq+MgolP6DvPqyqpwt6dnYj2/eoz9a/q06XFred7A/z6se+CKrf5q0fmt4x
55u/xee/q6j/s2f7L/lYCvqJfP/Zty9Qarotykq4MJyQf8ROurpo2jH5yZek
RJ7yFWGur8tMbj05FWSeI01vwY5WWLBTWaTMh7WhqMI8kVSyCMSSibCd8qZ9
YcvB4tBU7mJhzV+9mj9Wnd9qf+LbG1ZY9pii1gdqvD8tjm8nn6UuPxN8F5F9
WFVNZbVTmT7sUvg0Zn3VCLO4xV59hrZnaXeG2lO0PkHVtwf3NRuBZVoPueMU
45m2VKVqmcrsepxv4n1PLwpwdx9Sav6nbZKsWSXrdsm6ba5mvmK55Xmvk4Y3
WeuY7o8x17uxyMy3Odk/G7p/rRu+b+rmjuJT28vvCgOYAgejCvlH7KSrUtOW
0SP0FcR6fQVGchjIqSW7lIxTJ8peWS4tbSipyk6g2OnVoJv8p/cJ5WRGw4IK
O2380n1+D5n/WHG8rCyN8+Gnt93sm730q1b0ef6BvpA/Uq5Xa9H3VJqijVna
m6POLO2zIPSB6m+7uXt6UcO63nHYK4ae6lVwK1AhTakIhV2fbX8EMGzGdL+N
OZ6PWZ+MOV682U+/2U29Xo9d54GvE4Y3GfOY4fmY7fWY9/3Y0uRYcGqi4Xlf
cb3JPOqVmNB3yD+XEtfAq66ps+1alyiQoHia0ioyKMkoI/0MKV+tzWhpXSuM
fzVkVGDnUGL8HyLs8JywP8t4nhd8L4r+53kfS0QP9urPWP752P/TmqH2HO2z
FDRNWxNUfbOXuqcXVVfU5k0Ti7Us8Kx8rOC2EqWoj7yGjUv2bAQYHmP612Oh
hbGC/pt1xz/anm/b3vdUZn9B4zvXWr3+Iqh+FdO9ThrHNE/H9M/HV00sFL1Y
vlYPEsD1If+MAGVBoa/rbHs2H/lCFJw5XJw+lE6051/VJqWU681/ZlfmjxPX
KUsxnH7z6Z4Ejb9HLL+Hzez6Q77007iNhS72r3uCylPUmqbNadr4QI13h7lX
zftaUifPyNRltWnT5Dp2+nkFtwD5XeQ075ju6RUB+mKubhnzz47ldd/ueP55
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
7JzZj7C0o6Y1HW3rqa2nbQ215FSUCDtJioN0VWpumwPkT1KShZ/ebjkOMrEU
pCeFrDtbJW+NfGXypMi6vHcvZ82KvEJTVps2TQ4+XdlDHuep07JrlmewDQvc
yUp1PttYKG/LG4fKFqnXTlWVA/nwhx+AL0H+gYF75pO/Kzumd0OLlFUJ/T+b
LALpaEtNTZaI5o7ilz4qsKOOszxI1ttVKLsPLHuwpMHzT+Js+k21TCUzadUk
nW9PRo700WNDqKvzbSrvqQ27O7OV9Z92T54c0rN9et4+faqpfn37BdOW0XFs
d5MLWxrCFUL56Xh1LtWSsINdGXRzAO4E+QeGwduc9cOad+4kwQKPkuos+aio
IaeyhFYnNy/W2TSm58KH+izZK+TpbTJZI1/h5vtU9508I2NBwn36afpNoUTF
POVWaXWxOztRfu1qyBw1qSl7X7OIO3vsmVmyMpAwJdXGDxYOr1plpqlpbF1b
r7Z7hMJhCi/TMgpbAMDIQ/75Eoy9PqRXcf3bvG1y3T93GFuglJRyi5SZP01O
bS29yVxc4BY80LLw06TADkV6peq3KNygQI5uub67j7R1rXVH2C2QRSBeLX0l
SYkwhdzk1tb7NuA137Ty2ighHUW1FFELS5KpWZ9kEYyHHzufmOrlR2+HXv2l
z6PMK2wda0DYLDHGQlqKUqzBCYqHrrFZUKCtjp0YLuw9pVvT2bpWFp/cSFAA
MNyQf2BIvE4a3mSt76uuDy0fiz2TG4GJuvvz8OOsyxJkqpH3f7mZJy350w3l
r4X5A0ps3qpUa98J028qGsu22XXi9JMvQH6WhRzHDsNG35Z6CbVxTwIGipsp
ZaGMhdJGWmEpaH93jkjFe37cfG3OMl+k4+Nrlk2XPpV+XX+2WEzYLLFERXaZ
plSvUtuXGuDfUSfJnCcn+4bXyMcue6V4zW1h6dkyLbG8F6EwC1EButh3B/Dw
RHoyK9JmiwjyD9xFrdvP1fevItrxFeObjIUd46vGF6FLJq74tpTfh97+XF18
tq97RZZxsr8m24uOcZvCNRqKzaIVOYW6ota39MYto2nLaFjXq8t92yp5uqCX
d3wGStgo56KKm2ouKtsozyLQSuNnnn+svPNnie9TF+RLlS/PP4vJRb5ZtDdB
8RzlysJspQq7zFE2SYll4Rku4dtUsvDDMs8GLbPvOTs2KNgg/0TpFQs/LPas
UDJFqRStsissWV2RowBu5MOKamHDrjj0qymooZCKd3sC3BryD9xCeV/eJt2p
0NVg58fDzUD+h/vlD5nZp7v61+R8x952KfCefOPkeNYx9KUUbL9IVxblGZl0
tc8bFMw3LKrTJTOlnFTxUdNHLS81nVQ2UzpSZvlHwaOOk3f79HZo8X5p/EuW
kvZqm8YolqVMiUoVKpepxK7HKea/LLdY8pLIkbAP+SaFDihxRKtHtLJP8bfJ
Z/ObE0FaXqGVPOVKVChSIUeZlTvU3QA4byqnk+64WPLRU5ylfROtsks9Xb44
AuA6kH/gplj42RPeTx38vdXPDw891Nyb74LvfqrJnh1b31DgA0UmKTpBoTfk
fX5i+W9pxIsyjAckkjVrL/+4eP7x07rvY/5JeVI/7rYXidQkbAnu4KNgLp5O
DXxe0EWSmETf0tv3bcu0lKREhjIsumR5aAlR0HF0yfZE7qY8TsYqedtCHbpe
Hd4MS0GTxVcL7UkVLaYpVaJilSrs4HU3ViMUsR4MywI9EKl3EZlk3a6iZROt
2CjvoBI77JRnv/Y6GoUSyTAQyD9fgrHXSyVqc5vCdq92HntCfA/83jb43gfo
BXoV138Xfv9TQ/HHiX2clt5T9APFJyj8mnxPD80/lhfvuwEDN1c3yw+87LSX
vQu4qeqhOrtk1w2UsIa+r9dn2zuLfAmYji/7YoeWhR8+NfoSqpLKsGZwdh1L
FGBBJU6xKEVYHHKeOjXVS2Zre1qK6JGhTJ4dihyfzz/l1/ObE/Kj+VVaLVC+
LPQjldmVVVphUcrcNt3vNwVG0dbGDJG0F92n8zrZrptFHT7sW/VSgx0u4Tc/
ZyQx7Y8KQwX5B24kv724K3T+uP5aBjHC49C9dwG9Thom6p4fKtLfOubn5H1N
wTdC+Fl6Rq5fdnTT7dGfDzCV00laNsWhMP/ZQmkr5SyUYeFHeRKYrRjrtclG
Y3ZnW3LYXeTvHdLjrqRe/XDFE7IIpG/qLLsW57HDRS7nicO6Z9E1tJfe2VmT
hdq6LNnXaGmPol1KHlJyj2JvM88nK+Ne8kQpmqJUjrLs4EVXo94hmJQO4rLW
mOK/vRredWlix/jqS9me+yz21320xg4W/u1UMNKKbP8rv2MiPZkVabNFBPkH
bqS4K9sR+hZcvM/nQv659woLL8Oa9yXn9PbyTy31b0fWP8j9jDxPyfHLnmH+
JPG+NvprrieSyum8fr5pZW8HqtMlNQVVtCTb88zV/6xBWa18WF+b3mhNX518
PhHWrFU1uqaOHZqqWpaWfeme5ty8t6GI7OpzZK+Tb52W2dEg//PQr69iTy07
Qt2NEAVZ7IlRNEQhFn5MO6a7f9XweNQq7JdWxvstLfyUyskux1deTVQnNBRm
ad9JFZZ8eP9PxUpZHcUWNlCAHm4D+QduJLuxuN5V86EuH+8C+jT+5epcuc/e
XfDtbrwqWmZv9z+W599XXdO7QQmtSikno/wiZeeO45Otx7LOaCKhnMpqZyvG
uYZlvmmZq5rYzQd7dXtl0VOTB3e08WPjKt98O0Gm5X2tsqDUVDSmTaOtY3Oe
OJynTlvHaty8r18JGFXdg/mzOWyusxmGvtfR5+8Kb6da03qKsQhkp4Kdiiz8
CD2fR4/lDx/6DvkHbiRenSttyLaPtDwCuXkKYofriMy1w/5Xon8fVyxuOdS0
zP7v9RZ9/Lar+mVT/q7k+LDmm95enm4Hp7aWJmru14k+11Iffu8i8rehARTA
tRYXnHWpd0Pp31Kxy09FeOUZmaqk0ta1uqZOW9coC/3/fYDRls+9p9NF3vlj
4+Fn6WwbK+948sW7/BvZvkdDQR3F2D8EDYXlXe9c/eIWYQDXhPzzJRh7/ZLV
6nyxJWt11HukPyRTl0zbpLuP8EO850d1usSSj53yTiqxw0b53w+0P2/I3mQs
b/O2tznr+KrpuR9vtQCiV6t8OD7qzfz5tI3Vci//vAo/fR3/Y7ZqkqzZFjYd
7LRI0rLNlB7dWQ/0EfIP3EKiOpddXyztysr78kJbmlqT3MerTKY10rZLR1Eb
5dxU49vdNNmV3nZ/0t2b7fYTaKujn9VrAIDhUcxP7LYX6FTJly5+2mHDx8fC
zETqiaRqKqudzusmM9r30Ut2dbiUSE9mRdpsEUH+gaHFTu5ke24Dxe1U8FLD
T+sBWmdXHFRk+Ufe8V3zeT6v1zAMlcIA4HPNRm8PBxWPQLazHVZZ+NEcdSWD
bh2MFOQfGFozRcPitlNLEavQ/1M9W/Qq9P/oKc4+dZ0n8W0qV4R6Dd4NCu7w
eg2bvF5DHhEIYPjU61ON+uzO9sLpiZxPhNby4TDFydGI724KDw/5B4bWZEoz
v2ZVdP29clcOYf5Pr9ZVUnV6eXWqC87Xa+hQ4phW2XFA8S0K1ei63UcA8JD4
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
    "], {{0, 768}, {768, 0}}, {0,
     255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{768, 768},
  PlotRange->{{0, 768}, {0, 768}}]], "Output",
 CellChangeTimes->{3.74843093325843*^9, 3.748430997407445*^9, 
  3.748433022008128*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"colourBar3", "=", 
   RowBox[{"DensityPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "v"}], ")"}], "^", "gamma"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v", ",", "CScaleMin", ",", "CScaleMax"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", 
      RowBox[{"ColorData", "[", "colortbl", "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Bold", ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "colscalelabSz"}]}], "]"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "10"}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", "25"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imsz"}], ",", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"colourBar3adj", "=", 
  RowBox[{"ImageAdjust", "[", 
   RowBox[{"colourBar3", ",", "ContrastEnhancement"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7264823888607397`*^9, 3.7264823889957657`*^9}, {
  3.7264826848819857`*^9, 3.726482685146421*^9}, {3.726580766085047*^9, 
  3.7265807768716288`*^9}, {3.726581248160305*^9, 3.726581254545022*^9}, {
  3.726581719004388*^9, 3.726581720682157*^9}, {3.726582033943211*^9, 
  3.726582034051705*^9}, {3.729845604487279*^9, 3.729845605403802*^9}, {
  3.72984573704526*^9, 3.729845802883206*^9}, {3.730967704988385*^9, 
  3.7309677140573187`*^9}, {3.731029704466839*^9, 3.731029712970842*^9}, {
  3.731053483771432*^9, 3.7310535163706617`*^9}},
 ExpressionUUID -> "ca4f5d40-25aa-402a-b03c-44421d47382b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
ZPoPkE1PxxPfXur6mu+k288HQCnq+H93Kcj0HyCblNxj370RZPoPkE1Kbt/2
G0Gm/wDZpOQe334jyPQfIJu6/9UbQab/ANmk5P66ej3I9B8gm5Tc/ur1INN/
gGxSck9UrweZ/gNko/8AZUrJHaimg0z/AbJJyf1NNR1k+g+QTUruk9V0kOk/
QDb6D1CmlNzfVq8Fmf4DZJOSO1i9FmT6D5BNSu5T1WtBpv8A2eg/wKHW39/f
fH7W6OjoXmeOHz/enDl69OjOzXT5TPVqkOk/wIE0VR8ZGRkaGkoPpqam9jrz
Qkf7kxbTg6Hq1SDTf4D929raStmcnZ1tLh/4Kbpra2vp5q1bt5rLsbGxdHnn
zp3m/O+qV4NM/wH2b3x8vJ3Nubm5+yt648aN9s133303Xd6+fbvq9P9kNRVk
+g+wfwMDA+1srq6upsv19fW9zn/++ee73v95tpoKMv0H2L++vr52Njc3N9Pl
xsbGAw9fvHixif+XX37Z3Om5a7ia6uJ2vo0cTxnAj8Lg4GA7mysrK+lye3t7
17Fvv/22CezExET7frpzqroYZPoPsH8zMzPtbKa8P7CiTfzTvx3cf/+56mKQ
6T/Agey8c9K8+O/t7W3uDw8PT05OVnd/Kfz++++v37W6urrzZ09XF4NM/wEO
ZHp6uqdl5/7O5dGjR3vu88knnzRnnq9eCTL9B/gBlpeX19bWDvqn6v8orHol
yPQfIJuU3BerV4JM/wGyqf+XQdVkkOk/QDYpuS9Vk0Gm/wDZpOSOVZNBpv8A
2aTkjleTQab/ANmk5J6pLgSZ/gNkU/8fIaoLQab/ANmk5J6tLgSZ/gNkk5J7
rjofZPoPkE1K7vnqfJDpP0A2KbmT1fkg03+AbFJyX6nOBZn+A2STknuxOhdk
+g+QTUruVHUuyPQfIJuU3Fers0Gm/wDZpOS+Vp0NMv0HyCYld7o6G2T6D5BN
81mQb1QTXd+uD68E4JFKyb1UTQSZ/gNkk5L7ZjURZPoPkE1K7uVqIsj0HyCb
lNyZ6kyQ6T9ANim5V6ozQab/ANmk5M5WZ4JM/wGyScm9Wo0Hmf4DZJOSO1eN
B5n+A2STknu9Gg8y/QfIJiV3vhoLMv0HyCYld6EaCzL9B8gmJXepGgsy/QfI
JiX399XLQab/ANmk5L5TvRxk+g+QTUruu9XLQab/ANmk5L5XvRxk+g+QTUru
H6qXgkz/AbJJyX2/einI9B8gm5TcG9VLQab/ANmk5H5QjQaZ/gNkk5J7sxoN
Mv0HyCYl91Y1GmT6D5BNT8dK9WLX13wn3X4+AEqRkvtR9WKQ6T9ANim5f6xe
DDL9B8gmJfeT6oUg03+AbFJyP61eCDL9B8gmJXe1eiHI9B8gm5TcP1UvBJn+
A2STkrtWPR9k+g+QTUruRvV8kOk/QDYpuX+ung8y/QfIJiX38+p0kOk/QDYp
uZvV6SDTf4BsUnK3qtNBpv8A2aTk/qV6Lsj0HyCblNy/Vs8Fmf4DZJOS+2X1
XJDpP0A2KblfVc8Fmf4DZJOS+3U1EmT6D5BNSu6daiTI9B8gm5Tcv1cjQab/
ANmk5P6jOhVk+g+QTUrut9WpINN/gGxScrerU0Gm/wDZ9HRU1XDXd/c7ASCH
IPHf+RHQ7ecDoBT6D1Am/QcoUye5zwaZ/gNko/8AZdJ/gDJ1knsyyPQfIBv9
ByiT/gOUqZPc3wWZ/gNko/8AZdJ/gDLpP0CZOskdCjL9B8hG/wHKpP8AZeok
95kg03+Ag+rv728+P2t0dPRAZ/Qf4PBqqj4yMjI0VL+FMjU1tf8z+g9wSG1t
baVszs7ONpcP/BTdh5zpPHg6yPQfYP/Gx8fb2Zybm7u/og85o/8Ah9TAwEA7
m6urq+lyfX19n2f0H+CQ6uvra2dzc3MzXW5sbOzzTM9dXS//A9+5AmAvg4OD
7WyurKyky+3t7YOeAeBwmZmZabd9YmLi/lfR+zkDwKGz885J88K+t7e3uT88
PDw5OfnwMwAcXtPT0z0tO/fbl3udAeCwW15eXltb+9fPAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAwL/u/wDRq2cb
    "], {{0, 512}, {512, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{512, 512},
  PlotRange->{{0, 512}, {0, 512}}]], "Output",
 CellChangeTimes->{3.748430933648684*^9, 3.748430997733944*^9, 
  3.748433022287623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Average density (% of bulk): \>\"", ",", "CMean"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Median density  (% of bulk): \>\"", ",", "CMedian"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Minimum density (% of bulk): \>\"", ",", "CMin"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<- Maximum density (% of bulk): \>\"", ",", "CMax"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<- Contrast cut off (Min,Max): (\>\"", ",", "CScaleMin", ",", " ", 
     "\"\<,\>\"", ",", "CScaleMax", ",", "\"\<)\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.69924982067568*^9, 3.6992498921572847`*^9}, {
  3.726482577501886*^9, 3.726482592703555*^9}},
 ExpressionUUID -> "ba4cbb8b-3f38-43cb-ba7c-4b6d81db275a"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Average density (% of bulk): \"\>", "\[InvisibleSpace]", 
   "0.2742993440667859`"}],
  SequenceForm["- Average density (% of bulk): ", 0.2742993440667859],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430933672291*^9, 3.748430997797104*^9, 
  3.7484330223556004`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Median density  (% of bulk): \"\>", "\[InvisibleSpace]", 
   "0.2777777777777778`"}],
  SequenceForm["- Median density  (% of bulk): ", 0.2777777777777778],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430933672291*^9, 3.748430997797104*^9, 
  3.748433022388941*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Minimum density (% of bulk): \"\>", "\[InvisibleSpace]", 
   "0"}],
  SequenceForm["- Minimum density (% of bulk): ", 0],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430933672291*^9, 3.748430997797104*^9, 
  3.748433022425757*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Maximum density (% of bulk): \"\>", "\[InvisibleSpace]", 
   "0.7777777777777777`"}],
  SequenceForm["- Maximum density (% of bulk): ", 0.7777777777777777],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430933672291*^9, 3.748430997797104*^9, 
  3.748433022459757*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"- Contrast cut off (Min,Max): (\"\>", "\[InvisibleSpace]", "0",
    "\[InvisibleSpace]", "\<\",\"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\")\"\>"}],
  SequenceForm["- Contrast cut off (Min,Max): (", 0, ",", 1, ")"],
  Editable->False]], "Print",
 CellChangeTimes->{3.748430933672291*^9, 3.748430997797104*^9, 
  3.7484330224946613`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<- Average density (% of bulk): \>\"", ",", 
    RowBox[{"ToString", "[", "CMean", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<- Median density  (% of bulk): \>\"", ",", 
    RowBox[{"ToString", "[", "CMedian", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<- Minimum density (% of bulk): \>\"", ",", 
    RowBox[{"ToString", "[", "CMin", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<- Maximum density (% of bulk): \>\"", ",", 
    RowBox[{"ToString", "[", "CMax", "]"}], ",", "\"\<\\n\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"logfile", ",", "\"\<- Contrast cut off (Min,Max): (\>\"", ",", 
    RowBox[{"ToString", "[", "CScaleMin", "]"}], ",", " ", "\"\<,\>\"", ",", 
    RowBox[{"ToString", "[", "CScaleMax", "]"}], ",", "\"\<)\>\"", ",", 
    "\"\<\\n\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7265835143167152`*^9, 3.7265835671074*^9}},
 ExpressionUUID -> "bd32bba7-d00b-4751-a14b-de2eb2e35d56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Combine", " ", "the", " ", "order", " ", "parameter", " ", "map", " ", 
    "and", " ", "the", " ", "colour", " ", "scale", " ", "bar", " ", "into", 
    " ", "one", " ", "graphics", " ", "file", " ", "for", " ", "file", " ", 
    "export"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"exportgraph", "=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{"colourBar3adj", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "0."}], "}"}], ",", "Center", ",", "1.5"}], 
          "]"}], ",", 
         RowBox[{"Inset", "[", 
          RowBox[{"ldp2adj", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.5"}], "}"}], ",", "Center", ",", "3"}], 
          "]"}]}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "3"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "1024"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"goutfile", "=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"graphfileprefix", ",", "\"\<.png\>\""}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"goutfile", ",", "exportgraph", ",", 
     RowBox[{"\"\<AllowRasterization\>\"", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"imsz", "*", "ImMagfact"}]}], ",", 
     RowBox[{"ImageResolution", "\[Rule]", "600"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.726580064139656*^9, 3.726580089929422*^9}, {
   3.726580788495174*^9, 3.726580817764817*^9}, {3.726583314607821*^9, 
   3.726583316214436*^9}, {3.731053585134012*^9, 3.731053608539709*^9}, 
   3.731055599326673*^9, {3.731055964445834*^9, 3.731055964988824*^9}, 
   3.748429966731967*^9, {3.748430042482884*^9, 3.748430108887158*^9}},
 ExpressionUUID -> "9e877242-d009-439c-a94c-cfdc2fe77e20"],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
Density.png\"\>"], "Output",
 CellChangeTimes->{3.748430933821952*^9, 3.74843099805085*^9, 
  3.74843302260865*^9}],

Cell[BoxData["\<\"/Users/lothar/Desktop/diOPA/out/Ferritin-agglomerate_\
Density.png\"\>"], "Output",
 CellChangeTimes->{3.748430933821952*^9, 3.74843099805085*^9, 
  3.748433023407607*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Close", "[", "logfile", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.726582938750503*^9, 3.7265829405508223`*^9}},
 ExpressionUUID -> "a9de7126-d3a7-4d5f-b7f6-995198c0df2e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "-", "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]\
}]}]}]}]}]}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"END", " ", "PROCESSING"}], 
   "                                                                          \
                                            ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
  "(*", "                                                                     \
                                                                          ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"+", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    "+"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.726642304292137*^9, 3.72664230617057*^9}},
 ExpressionUUID -> "6bf9c3d3-68cc-4910-9b7c-ded6c9ac406d"]
},
WindowSize->{1280, 716},
WindowMargins->{{152, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrintingOptions->{"PaperOrientation"->"Landscape"},
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 20068, 543, 643, "Input"],
Cell[CellGroupData[{
Cell[20493, 560, 916, 19, 27, "Input"],
Cell[21412, 581, 182, 3, 27, "Output"]
}, Open  ]],
Cell[21609, 587, 5774, 164, 58, "Input"],
Cell[CellGroupData[{
Cell[27408, 755, 882, 17, 58, "Input"],
Cell[28293, 774, 188, 3, 27, "Output"],
Cell[28484, 779, 192, 3, 27, "Output"]
}, Open  ]],
Cell[28691, 785, 2748, 62, 163, "Input"],
Cell[31442, 849, 6056, 170, 88, "Input"],
Cell[37501, 1021, 6055, 170, 88, "Input"],
Cell[43559, 1193, 7089, 169, 583, "Input"],
Cell[50651, 1364, 2231, 56, 193, "Input"],
Cell[52885, 1422, 4115, 102, 253, "Input"],
Cell[57003, 1526, 6261, 143, 423, "Input"],
Cell[63267, 1671, 5547, 150, 328, "Input"],
Cell[68817, 1823, 4122, 107, 253, "Input"],
Cell[72942, 1932, 6151, 172, 88, "Input"],
Cell[79096, 2106, 6036, 170, 88, "Input"],
Cell[85135, 2278, 812, 19, 73, "Input"],
Cell[CellGroupData[{
Cell[85972, 2301, 3708, 90, 193, "Input"],
Cell[CellGroupData[{
Cell[89705, 2395, 621, 15, 20, "Print"],
Cell[90329, 2412, 434, 11, 20, "Print"],
Cell[90766, 2425, 450, 11, 20, "Print"],
Cell[91219, 2438, 327, 7, 20, "Print"],
Cell[91549, 2447, 553, 12, 20, "Print"],
Cell[92105, 2461, 625, 13, 20, "Print"]
}, Open  ]],
Cell[92745, 2477, 17843, 301, 406, "Output"]
}, Open  ]],
Cell[110603, 2781, 2599, 70, 118, "Input"],
Cell[113205, 2853, 176, 3, 27, "Input"],
Cell[113384, 2858, 5021, 145, 73, "Input"],
Cell[CellGroupData[{
Cell[118430, 3007, 1207, 31, 58, "Input"],
Cell[119640, 3040, 192, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119869, 3049, 2559, 76, 193, "Input"],
Cell[CellGroupData[{
Cell[122453, 3129, 142, 2, 20, "Print"],
Cell[122598, 3133, 762, 21, 20, "Print"],
Cell[123363, 3156, 499, 13, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[123889, 3173, 7292, 146, 178, "Input"],
Cell[CellGroupData[{
Cell[131206, 3323, 316, 6, 27, "Input"],
Cell[131525, 3331, 154583, 2540, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286145, 5876, 1939, 41, 73, "Input"],
Cell[288087, 5919, 7439, 127, 527, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295563, 6051, 953, 21, 103, "Input"],
Cell[CellGroupData[{
Cell[296541, 6076, 328, 7, 20, "Print"],
Cell[296872, 6085, 326, 7, 20, "Print"],
Cell[297201, 6094, 291, 7, 20, "Print"],
Cell[297495, 6103, 326, 7, 20, "Print"],
Cell[297824, 6112, 404, 8, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[298255, 6124, 1353, 28, 88, "Input"],
Cell[CellGroupData[{
Cell[299633, 6156, 1900, 43, 73, "Input"],
Cell[301536, 6201, 188, 3, 27, "Output"],
Cell[301727, 6206, 189, 3, 27, "Output"]
}, Open  ]],
Cell[301931, 6212, 209, 4, 27, "Input"],
Cell[302143, 6218, 6035, 170, 88, "Input"]
}
]
*)

